import{_ as i,c as t,b as n,a as c,e as a,d as l,w as p,r as o,o as r}from"./app-2O6audqE.js";const u={};function d(k,s){const e=o("RouteLink");return r(),t("div",null,[s[27]||(s[27]=n("h1",{id:"oci-容器监控调试与故障排除",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#oci-容器监控调试与故障排除"},[n("span",null,"OCI 容器监控调试与故障排除")])],-1)),n("blockquote",null,[n("p",null,[s[1]||(s[1]=n("strong",null,"系列导航：",-1)),s[2]||(s[2]=a()),l(e,{to:"/blogs/cloud-base/oci-series-index.html"},{default:p(()=>s[0]||(s[0]=[a("OCI 容器技术完全指南系列")])),_:1,__:[0]}),s[3]||(s[3]=a(" → 第六篇：监控调试")),s[4]||(s[4]=n("br",null,null,-1)),s[5]||(s[5]=n("strong",null,"规范版本：",-1)),s[6]||(s[6]=a(" OCI Runtime Spec v1.0.2")),s[7]||(s[7]=n("br",null,null,-1)),s[8]||(s[8]=n("strong",null,"最后更新：",-1)),s[9]||(s[9]=a(" 2024-07-10"))])]),s[28]||(s[28]=c(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>容器监控和故障排除是保障生产环境稳定运行的关键技能。本文基于 OCI 规范，深入讲解容器监控体系建设、调试工具使用和常见问题的排查方法，帮助运维人员快速定位和解决容器相关问题。</p><h2 id="容器状态监控" tabindex="-1"><a class="header-anchor" href="#容器状态监控"><span>容器状态监控</span></a></h2><h3 id="基础状态查询" tabindex="-1"><a class="header-anchor" href="#基础状态查询"><span>基础状态查询</span></a></h3><h4 id="运行时状态检查" tabindex="-1"><a class="header-anchor" href="#运行时状态检查"><span>运行时状态检查</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># container-status-check.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Container Status Overview ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 基础状态信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Basic Status:&quot;</span></span>
<span class="line">runc state <span class="token variable">$CONTAINER_ID</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;Container not found&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 进程信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Process Information:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /sys/fs/cgroup/pids/system.slice/docker-<span class="token variable">\${CONTAINER_ID}</span>.scope/pids.current <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Active PIDs: <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/fs/cgroup/pids/system.slice/docker-$<span class="token punctuation">{</span>CONTAINER_ID<span class="token punctuation">}</span>.scope/pids.current<span class="token variable">)</span></span>&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;PID Limit: <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/fs/cgroup/pids/system.slice/docker-$<span class="token punctuation">{</span>CONTAINER_ID<span class="token punctuation">}</span>.scope/pids.max<span class="token variable">)</span></span>&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 命名空间信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Namespace Information:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-d</span> /proc/<span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>/ns <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token function">ls</span> <span class="token parameter variable">-la</span> /proc/<span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span>/ns/</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 挂载信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. Mount Information:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">mount</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;tmpfs on /dev&quot;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="资源使用监控" tabindex="-1"><a class="header-anchor" href="#资源使用监控"><span>资源使用监控</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># resource-monitor.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>60}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Resource Monitoring for <span class="token variable">$DURATION</span> seconds ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 内存使用监控</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Memory Usage:&quot;</span></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$DURATION</span> <span class="token parameter variable">-gt</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /sys/fs/cgroup/memory/docker/<span class="token variable">$CONTAINER_ID</span>/memory.usage_in_bytes <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token assign-left variable">USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/fs/cgroup/memory/docker/$CONTAINER_ID/memory.usage_in_bytes<span class="token variable">)</span></span></span>
<span class="line">        <span class="token assign-left variable">LIMIT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/fs/cgroup/memory/docker/$CONTAINER_ID/memory.limit_in_bytes<span class="token variable">)</span></span></span>
<span class="line">        <span class="token assign-left variable">PERCENT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;scale=2; <span class="token variable">$USAGE</span> * 100 / <span class="token variable">$LIMIT</span>&quot;</span> <span class="token operator">|</span> <span class="token function">bc</span><span class="token variable">)</span></span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span>: Memory: <span class="token variable">\${USAGE}</span> bytes (<span class="token variable">\${PERCENT}</span>% of limit)&quot;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 2. CPU 使用监控</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /sys/fs/cgroup/cpu/docker/<span class="token variable">$CONTAINER_ID</span>/cpuacct.usage <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token assign-left variable">CPU_USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /sys/fs/cgroup/cpu/docker/$CONTAINER_ID/cpuacct.usage<span class="token variable">)</span></span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span>: CPU: <span class="token variable">\${CPU_USAGE}</span> nanoseconds&quot;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">sleep</span> <span class="token number">5</span></span>
<span class="line">    <span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$((</span>DURATION <span class="token operator">-</span> <span class="token number">5</span><span class="token variable">))</span></span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="高级监控工具" tabindex="-1"><a class="header-anchor" href="#高级监控工具"><span>高级监控工具</span></a></h3><h4 id="cadvisor-部署" tabindex="-1"><a class="header-anchor" href="#cadvisor-部署"><span>cAdvisor 部署</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># cadvisor-deployment.yaml</span></span>
<span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> DaemonSet</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> cadvisor</span>
<span class="line">  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> monitoring</span>
<span class="line"><span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">selector</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">name</span><span class="token punctuation">:</span> cadvisor</span>
<span class="line">  <span class="token key atrule">template</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token key atrule">name</span><span class="token punctuation">:</span> cadvisor</span>
<span class="line">    <span class="token key atrule">spec</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">hostNetwork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">      <span class="token key atrule">hostPID</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">      <span class="token key atrule">containers</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> cadvisor</span>
<span class="line">        <span class="token key atrule">image</span><span class="token punctuation">:</span> gcr.io/cadvisor/cadvisor<span class="token punctuation">:</span>v0.47.0</span>
<span class="line">        <span class="token key atrule">ports</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">8080</span></span>
<span class="line">          <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP</span>
<span class="line">        <span class="token key atrule">securityContext</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token key atrule">volumeMounts</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> rootfs</span>
<span class="line">          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /rootfs</span>
<span class="line">          <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> var<span class="token punctuation">-</span>run</span>
<span class="line">          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/run</span>
<span class="line">          <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sys</span>
<span class="line">          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /sys</span>
<span class="line">          <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> docker</span>
<span class="line">          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /var/lib/docker</span>
<span class="line">          <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> disk</span>
<span class="line">          <span class="token key atrule">mountPath</span><span class="token punctuation">:</span> /dev/disk</span>
<span class="line">          <span class="token key atrule">readOnly</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">        <span class="token key atrule">resources</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">requests</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 200Mi</span>
<span class="line">            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 150m</span>
<span class="line">          <span class="token key atrule">limits</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">memory</span><span class="token punctuation">:</span> 300Mi</span>
<span class="line">            <span class="token key atrule">cpu</span><span class="token punctuation">:</span> 300m</span>
<span class="line">      <span class="token key atrule">volumes</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> rootfs</span>
<span class="line">        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> /</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> var<span class="token punctuation">-</span>run</span>
<span class="line">        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/run</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> sys</span>
<span class="line">        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> /sys</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> docker</span>
<span class="line">        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> /var/lib/docker</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> disk</span>
<span class="line">        <span class="token key atrule">hostPath</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> /dev/disk</span>
<span class="line">      <span class="token key atrule">terminationGracePeriodSeconds</span><span class="token punctuation">:</span> <span class="token number">30</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="prometheus-指标收集" tabindex="-1"><a class="header-anchor" href="#prometheus-指标收集"><span>Prometheus 指标收集</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># prometheus-config.yml</span></span>
<span class="line"><span class="token key atrule">global</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span> 15s</span>
<span class="line">  <span class="token key atrule">evaluation_interval</span><span class="token punctuation">:</span> 15s</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">rule_files</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token string">&quot;container-rules.yml&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">&#39;cadvisor&#39;</span></span>
<span class="line">    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;cadvisor:8080&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /metrics</span>
<span class="line">    <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span> 10s</span>
<span class="line">    <span class="token key atrule">metric_relabel_configs</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">-</span> <span class="token key atrule">source_labels</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>__name__<span class="token punctuation">]</span></span>
<span class="line">      <span class="token key atrule">regex</span><span class="token punctuation">:</span> <span class="token string">&#39;container_.*&#39;</span></span>
<span class="line">      <span class="token key atrule">target_label</span><span class="token punctuation">:</span> __name__</span>
<span class="line">      <span class="token key atrule">replacement</span><span class="token punctuation">:</span> <span class="token string">&#39;\${1}&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">&#39;node-exporter&#39;</span></span>
<span class="line">    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;node-exporter:9100&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token key atrule">scrape_interval</span><span class="token punctuation">:</span> 15s</span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> <span class="token string">&#39;container-runtime&#39;</span></span>
<span class="line">    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&#39;containerd:9090&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token key atrule">metrics_path</span><span class="token punctuation">:</span> /v1/metrics</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="实时资源监控脚本" tabindex="-1"><a class="header-anchor" href="#实时资源监控脚本"><span>实时资源监控脚本</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># real-time-monitor.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-z</span> <span class="token string">&quot;<span class="token variable">$CONTAINER_ID</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Usage: <span class="token variable">$0</span> &lt;container-id&gt;&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建监控窗口</span></span>
<span class="line"><span class="token builtin class-name">trap</span> <span class="token string">&#39;kill $(jobs -p) 2&gt;/dev/null; exit&#39;</span> INT <span class="token environment constant">TERM</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Starting real-time monitoring for container: <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Press Ctrl+C to stop&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">    <span class="token function">clear</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Container Real-time Monitoring ===&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Container ID: <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Timestamp: <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># CPU 使用率</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;--- CPU Usage ---&quot;</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">top</span> <span class="token parameter variable">-bn1</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;Cpu(s)&quot;</span> <span class="token operator">|</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token function">awk</span> <span class="token string">&#39;{print &quot;CPU Usage: &quot; $2 &quot; user, &quot; $4 &quot; system, &quot; $8 &quot; idle&quot;}&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 内存使用</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>--- Memory Usage ---&quot;</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">free</span> <span class="token parameter variable">-h</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 磁盘使用</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>--- Disk Usage ---&quot;</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">df</span> <span class="token parameter variable">-h</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-5</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 网络统计</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>--- Network Statistics ---&quot;</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;lo:&quot;</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-3</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 进程信息</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>--- Top Processes ---&quot;</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>-%cpu <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-5</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">sleep</span> <span class="token number">2</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="性能分析" tabindex="-1"><a class="header-anchor" href="#性能分析"><span>性能分析</span></a></h2><h3 id="cpu-性能分析" tabindex="-1"><a class="header-anchor" href="#cpu-性能分析"><span>CPU 性能分析</span></a></h3><h4 id="perf-工具使用" tabindex="-1"><a class="header-anchor" href="#perf-工具使用"><span>perf 工具使用</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># cpu-performance-analysis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>30}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== CPU Performance Analysis ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 获取容器主进程 PID</span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Container PID: <span class="token variable">$PID</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. CPU 使用率分析</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>1. CPU Utilization:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">top</span> <span class="token parameter variable">-b</span> <span class="token parameter variable">-n1</span> <span class="token parameter variable">-p</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">1</span> <span class="token string">&quot;PID&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 使用 perf 进行性能分析</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Performance profiling (<span class="token variable">\${DURATION}</span>s):&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token builtin class-name">command</span> <span class="token parameter variable">-v</span> perf <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token function">sudo</span> perf record <span class="token parameter variable">-p</span> <span class="token variable">$PID</span> <span class="token function">sleep</span> <span class="token variable">$DURATION</span></span>
<span class="line">    <span class="token function">sudo</span> perf report <span class="token parameter variable">--stdio</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-20</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;perf not available, using alternative methods&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 系统调用分析</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. System call analysis:&quot;</span></span>
<span class="line"><span class="token function">timeout</span> <span class="token variable">$DURATION</span> <span class="token function">strace</span> <span class="token parameter variable">-c</span> <span class="token parameter variable">-p</span> <span class="token variable">$PID</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-20</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. CPU 调度信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. CPU scheduling info:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /proc/<span class="token variable">$PID</span>/sched <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token function">cat</span> /proc/<span class="token variable">$PID</span>/sched <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-20</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="火焰图生成" tabindex="-1"><a class="header-anchor" href="#火焰图生成"><span>火焰图生成</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># generate-flamegraph.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>60}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 FlameGraph 工具</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> <span class="token parameter variable">-d</span> <span class="token string">&quot;/opt/FlameGraph&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token function">git</span> clone https://github.com/brendangregg/FlameGraph.git /opt/FlameGraph</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Generating CPU flamegraph for container <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 收集性能数据</span></span>
<span class="line"><span class="token function">sudo</span> perf record <span class="token parameter variable">-F</span> <span class="token number">99</span> <span class="token parameter variable">-p</span> <span class="token variable">$PID</span> <span class="token parameter variable">-g</span> -- <span class="token function">sleep</span> <span class="token variable">$DURATION</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成火焰图</span></span>
<span class="line"><span class="token function">sudo</span> perf script <span class="token operator">|</span> /opt/FlameGraph/stackcollapse-perf.pl <span class="token operator">|</span> <span class="token punctuation">\\</span></span>
<span class="line">/opt/FlameGraph/flamegraph.pl <span class="token operator">&gt;</span> /tmp/container-<span class="token variable">$CONTAINER_ID</span>-flamegraph.svg</span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Flamegraph saved to: /tmp/container-<span class="token variable">$CONTAINER_ID</span>-flamegraph.svg&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="内存分析" tabindex="-1"><a class="header-anchor" href="#内存分析"><span>内存分析</span></a></h3><h4 id="内存使用详细分析" tabindex="-1"><a class="header-anchor" href="#内存使用详细分析"><span>内存使用详细分析</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># memory-analysis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Memory Analysis for Container <span class="token variable">$CONTAINER_ID</span> ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 内存概览</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Memory Overview:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">cat</span> /proc/meminfo <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;(MemTotal|MemFree|MemAvailable|Buffers|Cached|SwapTotal|SwapFree)&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 进程内存使用</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Process Memory Usage:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>-%mem <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 内存映射详情</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Memory Mapping Details:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /proc/<span class="token variable">$PID</span>/smaps <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Memory segments analysis:&quot;</span></span>
<span class="line">    <span class="token function">awk</span> <span class="token string">&#39;</span>
<span class="line">    /^Size:/ { size += $2 }</span>
<span class="line">    /^Rss:/ { rss += $2 }</span>
<span class="line">    /^Pss:/ { pss += $2 }</span>
<span class="line">    /^Shared_Clean:/ { shared_clean += $2 }</span>
<span class="line">    /^Shared_Dirty:/ { shared_dirty += $2 }</span>
<span class="line">    /^Private_Clean:/ { private_clean += $2 }</span>
<span class="line">    /^Private_Dirty:/ { private_dirty += $2 }</span>
<span class="line">    END {</span>
<span class="line">        print &quot;Total Size: &quot; size &quot; KB&quot;</span>
<span class="line">        print &quot;Resident Set Size (RSS): &quot; rss &quot; KB&quot;</span>
<span class="line">        print &quot;Proportional Set Size (PSS): &quot; pss &quot; KB&quot;</span>
<span class="line">        print &quot;Shared Clean: &quot; shared_clean &quot; KB&quot;</span>
<span class="line">        print &quot;Shared Dirty: &quot; shared_dirty &quot; KB&quot;</span>
<span class="line">        print &quot;Private Clean: &quot; private_clean &quot; KB&quot;</span>
<span class="line">        print &quot;Private Dirty: &quot; private_dirty &quot; KB&quot;</span>
<span class="line">    }&#39;</span> /proc/<span class="token variable">$PID</span>/smaps</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 内存泄漏检测</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. Memory Leak Detection:&quot;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">    <span class="token assign-left variable">RSS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">grep</span> VmRSS /proc/$PID/status <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Sample <span class="token variable">$i</span>: RSS = <span class="token variable">$RSS</span> KB&quot;</span></span>
<span class="line">    <span class="token function">sleep</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="valgrind-内存检查" tabindex="-1"><a class="header-anchor" href="#valgrind-内存检查"><span>Valgrind 内存检查</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># valgrind-check.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在容器内运行 Valgrind</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> valgrind <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--tool</span><span class="token operator">=</span>memcheck <span class="token punctuation">\\</span></span>
<span class="line">    --leak-check<span class="token operator">=</span>full <span class="token punctuation">\\</span></span>
<span class="line">    --show-leak-kinds<span class="token operator">=</span>all <span class="token punctuation">\\</span></span>
<span class="line">    --track-origins<span class="token operator">=</span>yes <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--verbose</span> <span class="token punctuation">\\</span></span>
<span class="line">    --log-file<span class="token operator">=</span>/tmp/valgrind-report.txt <span class="token punctuation">\\</span></span>
<span class="line">    /usr/local/bin/your-application</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 分析报告</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">cat</span> /tmp/valgrind-report.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="i-o-性能分析" tabindex="-1"><a class="header-anchor" href="#i-o-性能分析"><span>I/O 性能分析</span></a></h3><h4 id="磁盘-i-o-监控" tabindex="-1"><a class="header-anchor" href="#磁盘-i-o-监控"><span>磁盘 I/O 监控</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># io-analysis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>60}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== I/O Performance Analysis ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 磁盘使用情况</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Disk Usage:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">df</span> <span class="token parameter variable">-h</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. I/O 统计</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. I/O Statistics:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> iostat <span class="token parameter variable">-x</span> <span class="token number">1</span> <span class="token number">5</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 文件描述符使用</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. File Descriptor Usage:&quot;</span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Open file descriptors: <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> /proc/$PID/fd <span class="token operator">|</span> <span class="token function">wc</span> <span class="token parameter variable">-l</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;File descriptor limit: <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/$PID/limits <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;Max open files&quot;</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. I/O 进程监控</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. I/O Process Monitoring:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> iotop <span class="token parameter variable">-b</span> <span class="token parameter variable">-n</span> <span class="token number">3</span> <span class="token parameter variable">-d</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 系统调用 I/O 跟踪</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>5. I/O System Call Tracing:&quot;</span></span>
<span class="line"><span class="token function">timeout</span> <span class="token variable">$DURATION</span> <span class="token function">strace</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">trace</span><span class="token operator">=</span>file,write,read <span class="token parameter variable">-p</span> <span class="token variable">$PID</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-50</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="存储性能测试" tabindex="-1"><a class="header-anchor" href="#存储性能测试"><span>存储性能测试</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># storage-benchmark.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Storage Performance Benchmark ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 顺序读写测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Sequential Read/Write Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/dev/zero <span class="token assign-left variable">of</span><span class="token operator">=</span>/tmp/testfile <span class="token assign-left variable">bs</span><span class="token operator">=</span>1M <span class="token assign-left variable">count</span><span class="token operator">=</span><span class="token number">100</span> <span class="token assign-left variable">oflag</span><span class="token operator">=</span>direct <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;(copied|s)&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">dd</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>/tmp/testfile <span class="token assign-left variable">of</span><span class="token operator">=</span>/dev/null <span class="token assign-left variable">bs</span><span class="token operator">=</span>1M <span class="token assign-left variable">iflag</span><span class="token operator">=</span>direct <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;(copied|s)&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 随机读写测试 (需要 fio)</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Random Read/Write Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> fio <span class="token parameter variable">--name</span><span class="token operator">=</span>random-rw <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--ioengine</span><span class="token operator">=</span>libaio <span class="token parameter variable">--iodepth</span><span class="token operator">=</span><span class="token number">4</span> <span class="token parameter variable">--rw</span><span class="token operator">=</span>randrw <span class="token parameter variable">--bs</span><span class="token operator">=</span>4k <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--direct</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--size</span><span class="token operator">=</span>100M <span class="token parameter variable">--numjobs</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">--runtime</span><span class="token operator">=</span><span class="token number">30</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--filename</span><span class="token operator">=</span>/tmp/fio-test <span class="token parameter variable">--group_reporting</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;fio not available in container&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 清理测试文件</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> /tmp/testfile /tmp/fio-test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="网络诊断" tabindex="-1"><a class="header-anchor" href="#网络诊断"><span>网络诊断</span></a></h2><h3 id="网络连接性测试" tabindex="-1"><a class="header-anchor" href="#网络连接性测试"><span>网络连接性测试</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># network-diagnosis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Network Diagnosis for Container <span class="token variable">$CONTAINER_ID</span> ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 网络接口信息</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Network Interfaces:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ip</span> addr show</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 路由表</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Routing Table:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ip</span> route show</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 网络连接状态</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Network Connections:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">netstat</span> <span class="token parameter variable">-tuln</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> ss <span class="token parameter variable">-tuln</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. DNS 解析测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. DNS Resolution Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">nslookup</span> google.com <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">dig</span> google.com</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 网络连通性测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>5. Connectivity Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">3</span> <span class="token number">8.8</span>.8.8</span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">curl</span> <span class="token parameter variable">-I</span> --connect-timeout <span class="token number">5</span> http://httpbin.org/get <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;HTTP connectivity test failed&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 6. 防火墙规则检查</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>6. Firewall Rules:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> iptables <span class="token parameter variable">-L</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;iptables not available&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="网络流量分析" tabindex="-1"><a class="header-anchor" href="#网络流量分析"><span>网络流量分析</span></a></h3><h4 id="tcpdump-抓包分析" tabindex="-1"><a class="header-anchor" href="#tcpdump-抓包分析"><span>tcpdump 抓包分析</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># network-capture.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">INTERFACE</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>eth0}</span></span>
<span class="line"><span class="token assign-left variable">DURATION</span><span class="token operator">=</span><span class="token variable">\${3<span class="token operator">:-</span>60}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Network Traffic Capture ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 获取容器网络命名空间</span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Container PID: <span class="token variable">$PID</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 在容器网络命名空间中抓包</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;Capturing traffic on interface <span class="token variable">$INTERFACE</span> for <span class="token variable">\${DURATION}</span>s...&quot;</span></span>
<span class="line"><span class="token function">sudo</span> nsenter <span class="token parameter variable">-t</span> <span class="token variable">$PID</span> <span class="token parameter variable">-n</span> tcpdump <span class="token parameter variable">-i</span> <span class="token variable">$INTERFACE</span> <span class="token parameter variable">-w</span> /tmp/container-<span class="token variable">$CONTAINER_ID</span>.pcap <span class="token operator">&amp;</span></span>
<span class="line"><span class="token assign-left variable">TCPDUMP_PID</span><span class="token operator">=</span><span class="token variable">$!</span></span>
<span class="line"></span>
<span class="line"><span class="token function">sleep</span> <span class="token variable">$DURATION</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">kill</span> <span class="token variable">$TCPDUMP_PID</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 分析抓包结果</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Traffic Analysis:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /tmp/container-<span class="token variable">$CONTAINER_ID</span>.pcap <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Packet count by protocol:&quot;</span></span>
<span class="line">    <span class="token function">sudo</span> tcpdump <span class="token parameter variable">-r</span> /tmp/container-<span class="token variable">$CONTAINER_ID</span>.pcap <span class="token parameter variable">-n</span> <span class="token operator">|</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token function">awk</span> <span class="token string">&#39;{print $3}&#39;</span> <span class="token operator">|</span> <span class="token function">cut</span> -d<span class="token string">&#39;.&#39;</span> -f1-4 <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span></span>
<span class="line">    </span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>Top destination ports:&quot;</span></span>
<span class="line">    <span class="token function">sudo</span> tcpdump <span class="token parameter variable">-r</span> /tmp/container-<span class="token variable">$CONTAINER_ID</span>.pcap <span class="token parameter variable">-n</span> <span class="token operator">|</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token function">grep</span> <span class="token parameter variable">-oP</span> <span class="token string">&#39;:\\d+&#39;</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token operator">|</span> <span class="token function">uniq</span> <span class="token parameter variable">-c</span> <span class="token operator">|</span> <span class="token function">sort</span> <span class="token parameter variable">-nr</span> <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="网络性能测试" tabindex="-1"><a class="header-anchor" href="#网络性能测试"><span>网络性能测试</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># network-performance.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">TARGET_HOST</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>8.8.8.8}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Network Performance Test ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 延迟测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Latency Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">10</span> <span class="token variable">$TARGET_HOST</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 带宽测试 (使用 iperf3)</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Bandwidth Test:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">which</span> iperf3 <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token comment"># 需要外部 iperf3 服务器</span></span>
<span class="line">    <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> iperf3 <span class="token parameter variable">-c</span> iperf.example.com <span class="token parameter variable">-t</span> <span class="token number">10</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;External iperf3 server not available&quot;</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;iperf3 not available in container&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 吞吐量测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Throughput Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> /dev/null http://speedtest.example.com/100MB.bin <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;(saved|/s)&quot;</span> <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;Throughput test failed&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span>日志管理</span></a></h2><h3 id="结构化日志配置" tabindex="-1"><a class="header-anchor" href="#结构化日志配置"><span>结构化日志配置</span></a></h3><h4 id="fluentd-日志收集" tabindex="-1"><a class="header-anchor" href="#fluentd-日志收集"><span>Fluentd 日志收集</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># fluentd-configmap.yaml</span></span>
<span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> fluentd<span class="token punctuation">-</span>config</span>
<span class="line"><span class="token key atrule">data</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">fluent.conf</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">    &lt;source&gt;</span>
<span class="line">      @type tail</span>
<span class="line">      path /var/log/containers/*.log</span>
<span class="line">      pos_file /var/log/fluentd-containers.log.pos</span>
<span class="line">      tag kubernetes.*</span>
<span class="line">      read_from_head true</span>
<span class="line">      format json</span>
<span class="line">      time_key time</span>
<span class="line">      time_format %Y-%m-%dT%H:%M:%S.%NZ</span>
<span class="line">    &lt;/source&gt;</span></span>
<span class="line">    </span>
<span class="line">    &lt;filter kubernetes.<span class="token important">**&gt;</span></span>
<span class="line">      @type kubernetes_metadata</span>
<span class="line">    &lt;/filter<span class="token punctuation">&gt;</span></span>
<span class="line">    </span>
<span class="line">    &lt;filter kubernetes.<span class="token important">**&gt;</span></span>
<span class="line">      @type record_transformer</span>
<span class="line">      &lt;record<span class="token punctuation">&gt;</span></span>
<span class="line">        container_id $<span class="token punctuation">{</span>record<span class="token punctuation">[</span><span class="token string">&quot;docker&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;container_id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">        container_name $<span class="token punctuation">{</span>record<span class="token punctuation">[</span><span class="token string">&quot;kubernetes&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;container_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">        pod_name $<span class="token punctuation">{</span>record<span class="token punctuation">[</span><span class="token string">&quot;kubernetes&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;pod_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">        namespace $<span class="token punctuation">{</span>record<span class="token punctuation">[</span><span class="token string">&quot;kubernetes&quot;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&quot;namespace_name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span>
<span class="line">      &lt;/record<span class="token punctuation">&gt;</span></span>
<span class="line">    &lt;/filter<span class="token punctuation">&gt;</span></span>
<span class="line">    </span>
<span class="line">    &lt;match kubernetes.<span class="token important">**&gt;</span></span>
<span class="line">      @type elasticsearch</span>
<span class="line">      host elasticsearch.logging.svc.cluster.local</span>
<span class="line">      port 9200</span>
<span class="line">      index_name container<span class="token punctuation">-</span>logs</span>
<span class="line">      type_name _doc</span>
<span class="line">      logstash_format true</span>
<span class="line">      logstash_prefix container<span class="token punctuation">-</span>logs</span>
<span class="line">      include_tag_key true</span>
<span class="line">      tag_key @log_name</span>
<span class="line">      flush_interval 1s</span>
<span class="line">    &lt;/match<span class="token punctuation">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="promtail-loki-配置" tabindex="-1"><a class="header-anchor" href="#promtail-loki-配置"><span>Promtail + Loki 配置</span></a></h4><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># promtail-config.yaml</span></span>
<span class="line"><span class="token key atrule">server</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">http_listen_port</span><span class="token punctuation">:</span> <span class="token number">9080</span></span>
<span class="line">  <span class="token key atrule">grpc_listen_port</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">positions</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">filename</span><span class="token punctuation">:</span> /tmp/positions.yaml</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">clients</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">url</span><span class="token punctuation">:</span> http<span class="token punctuation">:</span>//loki<span class="token punctuation">:</span>3100/loki/api/v1/push</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">scrape_configs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token punctuation">-</span> <span class="token key atrule">job_name</span><span class="token punctuation">:</span> containers</span>
<span class="line">    <span class="token key atrule">static_configs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">targets</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token punctuation">-</span> localhost</span>
<span class="line">        <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">job</span><span class="token punctuation">:</span> containerlogs</span>
<span class="line">          <span class="token key atrule">__path__</span><span class="token punctuation">:</span> /var/log/containers/<span class="token important">*.log</span></span>
<span class="line">    </span>
<span class="line">    <span class="token key atrule">pipeline_stages</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">json</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">expressions</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">output</span><span class="token punctuation">:</span> log</span>
<span class="line">            <span class="token key atrule">stream</span><span class="token punctuation">:</span> stream</span>
<span class="line">            <span class="token key atrule">attrs</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">json</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">expressions</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token key atrule">tag</span><span class="token punctuation">:</span> attrs.tag</span>
<span class="line">          <span class="token key atrule">source</span><span class="token punctuation">:</span> attrs</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">regex</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">expression</span><span class="token punctuation">:</span> <span class="token string">&#39;^(?P&lt;container_name&gt;(?:[^_]+_){2})(?P&lt;pod_name&gt;[^_]+)_(?P&lt;namespace&gt;[^_]+)_&#39;</span></span>
<span class="line">          <span class="token key atrule">source</span><span class="token punctuation">:</span> tag</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">timestamp</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">source</span><span class="token punctuation">:</span> time</span>
<span class="line">          <span class="token key atrule">format</span><span class="token punctuation">:</span> RFC3339Nano</span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">labels</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">stream</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">container_name</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">pod_name</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">namespace</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">output</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">source</span><span class="token punctuation">:</span> output</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日志分析工具" tabindex="-1"><a class="header-anchor" href="#日志分析工具"><span>日志分析工具</span></a></h3><h4 id="elk-栈查询示例" tabindex="-1"><a class="header-anchor" href="#elk-栈查询示例"><span>ELK 栈查询示例</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># log-analysis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">TIME_RANGE</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>&quot;1h&quot;}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Container Log Analysis ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. Elasticsearch 查询</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;elasticsearch:9200/container-logs-*/_search&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> -d<span class="token string">&#39;</span>
<span class="line">{</span>
<span class="line">  &quot;query&quot;: {</span>
<span class="line">    &quot;bool&quot;: {</span>
<span class="line">      &quot;must&quot;: [</span>
<span class="line">        {&quot;match&quot;: {&quot;container_id&quot;: &quot;&#39;</span><span class="token variable">$CONTAINER_ID</span><span class="token string">&#39;&quot;}},</span>
<span class="line">        {&quot;range&quot;: {&quot;@timestamp&quot;: {&quot;gte&quot;: &quot;now-&#39;</span><span class="token variable">$TIME_RANGE</span><span class="token string">&#39;&quot;}}}</span>
<span class="line">      ]</span>
<span class="line">    }</span>
<span class="line">  },</span>
<span class="line">  &quot;sort&quot;: [{&quot;@timestamp&quot;: {&quot;order&quot;: &quot;desc&quot;}}],</span>
<span class="line">  &quot;size&quot;: 100</span>
<span class="line">}&#39;</span> <span class="token operator">|</span> jq <span class="token string">&#39;.hits.hits[]._source | {timestamp: .[&quot;@timestamp&quot;], level: .level, message: .message}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 错误日志统计</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Error Log Statistics:&quot;</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-X</span> GET <span class="token string">&quot;elasticsearch:9200/container-logs-*/_search&quot;</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token parameter variable">-H</span> <span class="token string">&#39;Content-Type: application/json&#39;</span> -d<span class="token string">&#39;</span>
<span class="line">{</span>
<span class="line">  &quot;query&quot;: {</span>
<span class="line">    &quot;bool&quot;: {</span>
<span class="line">      &quot;must&quot;: [</span>
<span class="line">        {&quot;match&quot;: {&quot;container_id&quot;: &quot;&#39;</span><span class="token variable">$CONTAINER_ID</span><span class="token string">&#39;&quot;}},</span>
<span class="line">        {&quot;match&quot;: {&quot;level&quot;: &quot;ERROR&quot;}},</span>
<span class="line">        {&quot;range&quot;: {&quot;@timestamp&quot;: {&quot;gte&quot;: &quot;now-&#39;</span><span class="token variable">$TIME_RANGE</span><span class="token string">&#39;&quot;}}}</span>
<span class="line">      ]</span>
<span class="line">    }</span>
<span class="line">  },</span>
<span class="line">  &quot;aggs&quot;: {</span>
<span class="line">    &quot;error_count&quot;: {</span>
<span class="line">      &quot;date_histogram&quot;: {</span>
<span class="line">        &quot;field&quot;: &quot;@timestamp&quot;,</span>
<span class="line">        &quot;interval&quot;: &quot;5m&quot;</span>
<span class="line">      }</span>
<span class="line">    }</span>
<span class="line">  },</span>
<span class="line">  &quot;size&quot;: 0</span>
<span class="line">}&#39;</span> <span class="token operator">|</span> jq <span class="token string">&#39;.aggregations.error_count.buckets[]&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="故障排除" tabindex="-1"><a class="header-anchor" href="#故障排除"><span>故障排除</span></a></h2><h3 id="常见问题诊断" tabindex="-1"><a class="header-anchor" href="#常见问题诊断"><span>常见问题诊断</span></a></h3><h4 id="容器启动失败" tabindex="-1"><a class="header-anchor" href="#容器启动失败"><span>容器启动失败</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># startup-failure-diagnosis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Container Startup Failure Diagnosis ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 检查容器状态</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Container Status:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;{{.State.Status}}: {{.State.Error}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 检查退出代码</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Exit Code:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;Exit Code: {{.State.ExitCode}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 查看启动日志</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Startup Logs:&quot;</span></span>
<span class="line"><span class="token function">docker</span> logs <span class="token variable">$CONTAINER_ID</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-50</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 检查资源限制</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. Resource Limits:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;Memory Limit: {{.HostConfig.Memory}}&#39;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;CPU Limit: {{.HostConfig.CpuQuota}}/{{.HostConfig.CpuPeriod}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 检查挂载点</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>5. Mount Points:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;{{range .Mounts}}{{.Source}} -&gt; {{.Destination}} ({{.Mode}}){{&quot;\\n&quot;}}{{end}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 6. 检查网络配置</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>6. Network Configuration:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;{{range $k, $v := .NetworkSettings.Networks}}{{$k}}: {{$v.IPAddress}}{{&quot;\\n&quot;}}{{end}}&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 7. 检查安全配置</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>7. Security Configuration:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;Privileged: {{.HostConfig.Privileged}}&#39;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;User: {{.Config.User}}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="内存-oom-问题" tabindex="-1"><a class="header-anchor" href="#内存-oom-问题"><span>内存 OOM 问题</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># oom-diagnosis.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== OOM (Out of Memory) Diagnosis ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 检查系统日志中的 OOM 事件</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. System OOM Events:&quot;</span></span>
<span class="line"><span class="token function">dmesg</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-i</span> <span class="token string">&quot;killed process&quot;</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 检查容器内存限制和使用</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. Container Memory Status:&quot;</span></span>
<span class="line"><span class="token function">docker</span> stats <span class="token variable">$CONTAINER_ID</span> --no-stream</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 检查 cgroup 内存统计</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Cgroup Memory Statistics:&quot;</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token parameter variable">-f</span> /sys/fs/cgroup/memory/docker/<span class="token variable">$CONTAINER_ID</span>/memory.stat <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Memory statistics:&quot;</span></span>
<span class="line">    <span class="token function">cat</span> /sys/fs/cgroup/memory/docker/<span class="token variable">$CONTAINER_ID</span>/memory.stat <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-E</span> <span class="token string">&quot;(cache|rss|swap)&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>Memory events:&quot;</span></span>
<span class="line">    <span class="token function">cat</span> /sys/fs/cgroup/memory/docker/<span class="token variable">$CONTAINER_ID</span>/memory.events <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token function">cat</span> /sys/fs/cgroup/memory/docker/<span class="token variable">$CONTAINER_ID</span>/memory.oom_control</span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 分析进程内存使用</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. Process Memory Usage:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ps</span> aux <span class="token parameter variable">--sort</span><span class="token operator">=</span>-%mem <span class="token operator">|</span> <span class="token function">head</span> <span class="token parameter variable">-10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 内存泄漏检测</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>5. Memory Growth Detection:&quot;</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span></span>
<span class="line">    <span class="token assign-left variable">USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> stats $CONTAINER_ID --no-stream <span class="token parameter variable">--format</span> <span class="token string">&quot;{{.MemUsage}}&quot;</span><span class="token variable">)</span></span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Sample <span class="token variable">$i</span>: <span class="token variable">$USAGE</span>&quot;</span></span>
<span class="line">    <span class="token function">sleep</span> <span class="token number">30</span></span>
<span class="line"><span class="token keyword">done</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="网络连接问题" tabindex="-1"><a class="header-anchor" href="#网络连接问题"><span>网络连接问题</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># network-troubleshooting.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">TARGET</span><span class="token operator">=</span><span class="token variable">\${2<span class="token operator">:-</span>&quot;google.com&quot;}</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Network Troubleshooting ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. 基础连接测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;1. Basic Connectivity Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">3</span> <span class="token number">8.8</span>.8.8 <span class="token operator">||</span> <span class="token builtin class-name">echo</span> <span class="token string">&quot;Basic connectivity failed&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. DNS 解析测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>2. DNS Resolution Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">nslookup</span> <span class="token variable">$TARGET</span> <span class="token operator">||</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">dig</span> <span class="token variable">$TARGET</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 端口连接测试</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>3. Port Connectivity Test:&quot;</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> telnet <span class="token variable">$TARGET</span> <span class="token number">80</span> <span class="token operator">&lt;&lt;&lt;</span> <span class="token string">&quot;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">||</span> <span class="token punctuation">\\</span></span>
<span class="line"><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">nc</span> <span class="token parameter variable">-zv</span> <span class="token variable">$TARGET</span> <span class="token number">80</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 防火墙规则检查</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>4. Firewall Rules:&quot;</span></span>
<span class="line">iptables <span class="token parameter variable">-L</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-A</span> <span class="token number">5</span> <span class="token parameter variable">-B</span> <span class="token number">5</span> <span class="token string">&quot;DOCKER&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 网络命名空间检查</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>5. Network Namespace:&quot;</span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> inspect <span class="token parameter variable">--format</span> <span class="token string">&#39;{{.State.Pid}}&#39;</span> $CONTAINER_ID<span class="token variable">)</span></span></span>
<span class="line"><span class="token function">sudo</span> nsenter <span class="token parameter variable">-t</span> <span class="token variable">$PID</span> <span class="token parameter variable">-n</span> <span class="token function">ip</span> addr</span>
<span class="line"><span class="token function">sudo</span> nsenter <span class="token parameter variable">-t</span> <span class="token variable">$PID</span> <span class="token parameter variable">-n</span> <span class="token function">ip</span> route</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 6. 容器网络模式</span></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>6. Network Mode:&quot;</span></span>
<span class="line"><span class="token function">docker</span> inspect <span class="token variable">$CONTAINER_ID</span> <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;Network Mode: {{.HostConfig.NetworkMode}}&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自动化故障检测" tabindex="-1"><a class="header-anchor" href="#自动化故障检测"><span>自动化故障检测</span></a></h3><h4 id="健康检查脚本" tabindex="-1"><a class="header-anchor" href="#健康检查脚本"><span>健康检查脚本</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># container-health-check.sh</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable">$1</span></span>
<span class="line"><span class="token assign-left variable">THRESHOLD_CPU</span><span class="token operator">=</span><span class="token number">80</span></span>
<span class="line"><span class="token assign-left variable">THRESHOLD_MEM</span><span class="token operator">=</span><span class="token number">90</span></span>
<span class="line"><span class="token assign-left variable">THRESHOLD_DISK</span><span class="token operator">=</span><span class="token number">85</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Automated Health Check ===&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 1. CPU 使用率检查</span></span>
<span class="line"><span class="token assign-left variable">CPU_USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> stats $CONTAINER_ID --no-stream <span class="token parameter variable">--format</span> <span class="token string">&quot;{{.CPUPerc}}&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/%//&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $<span class="token punctuation">(</span>echo &quot;$CPU_USAGE <span class="token operator">&gt;</span> $THRESHOLD_CPU&quot; <span class="token operator">|</span> bc <span class="token operator">-</span>l<span class="token punctuation">)</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;❌ CPU usage is high: <span class="token variable">\${CPU_USAGE}</span>%&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ CPU usage is normal: <span class="token variable">\${CPU_USAGE}</span>%&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 内存使用率检查</span></span>
<span class="line"><span class="token assign-left variable">MEM_USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> stats $CONTAINER_ID --no-stream <span class="token parameter variable">--format</span> <span class="token string">&quot;{{.MemPerc}}&quot;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/%//&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token keyword">if</span> <span class="token variable"><span class="token punctuation">((</span> $<span class="token punctuation">(</span>echo &quot;$MEM_USAGE <span class="token operator">&gt;</span> $THRESHOLD_MEM&quot; <span class="token operator">|</span> bc <span class="token operator">-</span>l<span class="token punctuation">)</span> <span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;❌ Memory usage is high: <span class="token variable">\${MEM_USAGE}</span>%&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ Memory usage is normal: <span class="token variable">\${MEM_USAGE}</span>%&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 磁盘使用率检查</span></span>
<span class="line"><span class="token assign-left variable">DISK_USAGE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">docker</span> <span class="token builtin class-name">exec</span> $CONTAINER_ID <span class="token function">df</span> / <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-1</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{print $5}&#39;</span> <span class="token operator">|</span> <span class="token function">sed</span> <span class="token string">&#39;s/%//&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$DISK_USAGE</span>&quot;</span> <span class="token parameter variable">-gt</span> <span class="token string">&quot;<span class="token variable">$THRESHOLD_DISK</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;❌ Disk usage is high: <span class="token variable">\${DISK_USAGE}</span>%&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ Disk usage is normal: <span class="token variable">\${DISK_USAGE}</span>%&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 进程状态检查</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> pgrep <span class="token parameter variable">-f</span> <span class="token string">&quot;main-process&quot;</span> <span class="token operator">&gt;</span> /dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;❌ Main process is not running&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ Main process is running&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 网络连接检查</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token variable">$CONTAINER_ID</span> <span class="token function">ping</span> <span class="token parameter variable">-c</span> <span class="token number">1</span> <span class="token number">8.8</span>.8.8 <span class="token operator">&gt;</span>/dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;❌ Network connectivity failed&quot;</span></span>
<span class="line">    <span class="token builtin class-name">exit</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">else</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;✅ Network connectivity is good&quot;</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;🎉 All health checks passed!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="下一步学习" tabindex="-1"><a class="header-anchor" href="#下一步学习"><span>下一步学习</span></a></h2><p>完成监控调试学习后，建议继续学习：</p>`,61)),n("ol",null,[n("li",null,[n("strong",null,[l(e,{to:"/blogs/cloud-base/oci-07-production-guide.html"},{default:p(()=>s[10]||(s[10]=[a("OCI 容器生产环境实践案例")])),_:1,__:[10]})]),s[11]||(s[11]=a(" - 了解企业级监控体系"))]),n("li",null,[n("strong",null,[l(e,{to:"/blogs/cloud-base/oci-05-security-guide.html"},{default:p(()=>s[12]||(s[12]=[a("OCI 容器安全配置实战")])),_:1,__:[12]})]),s[13]||(s[13]=a(" - 学习安全监控配置"))]),n("li",null,[n("strong",null,[l(e,{to:"/blogs/cloud-base/oci-02-runtime-spec.html"},{default:p(()=>s[14]||(s[14]=[a("OCI Runtime 规范详解")])),_:1,__:[14]})]),s[15]||(s[15]=a(" - 深入理解运行时机制"))])]),s[29]||(s[29]=n("h2",{id:"总结",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#总结"},[n("span",null,"总结")])],-1)),s[30]||(s[30]=n("p",null,"容器监控和故障排除是一个系统工程，需要建立完善的监控体系、掌握专业的调试工具，并形成标准化的故障处理流程。通过本文介绍的方法和工具，您可以构建高效的容器运维体系。",-1)),s[31]||(s[31]=n("p",null,[n("strong",null,"关键要点：")],-1)),s[32]||(s[32]=n("ul",null,[n("li",null,"建立多层次的监控体系（基础指标、应用指标、业务指标）"),n("li",null,"掌握性能分析工具的使用方法"),n("li",null,"建立标准化的故障排除流程"),n("li",null,"实施自动化的健康检查和告警机制")],-1)),s[33]||(s[33]=n("hr",null,null,-1)),n("p",null,[s[19]||(s[19]=n("strong",null,"上一篇：",-1)),s[20]||(s[20]=a()),l(e,{to:"/blogs/cloud-base/oci-05-security-guide.html"},{default:p(()=>s[16]||(s[16]=[a("OCI 容器安全配置实战")])),_:1,__:[16]}),s[21]||(s[21]=n("br",null,null,-1)),s[22]||(s[22]=n("strong",null,"下一篇：",-1)),s[23]||(s[23]=a()),l(e,{to:"/blogs/cloud-base/oci-07-production-guide.html"},{default:p(()=>s[17]||(s[17]=[a("OCI 容器生产环境实践案例")])),_:1,__:[17]}),s[24]||(s[24]=n("br",null,null,-1)),s[25]||(s[25]=n("strong",null,"返回：",-1)),s[26]||(s[26]=a()),l(e,{to:"/blogs/cloud-base/oci-series-index.html"},{default:p(()=>s[18]||(s[18]=[a("OCI 容器技术完全指南系列")])),_:1,__:[18]})])])}const m=i(u,[["render",d]]),b=JSON.parse('{"path":"/blogs/cloud-base/oci-06-monitoring-guide.html","title":"OCI 容器监控调试与故障排除","lang":"en-US","frontmatter":{"categories":["cloud-base"]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"容器状态监控","slug":"容器状态监控","link":"#容器状态监控","children":[{"level":3,"title":"基础状态查询","slug":"基础状态查询","link":"#基础状态查询","children":[]},{"level":3,"title":"高级监控工具","slug":"高级监控工具","link":"#高级监控工具","children":[]}]},{"level":2,"title":"性能分析","slug":"性能分析","link":"#性能分析","children":[{"level":3,"title":"CPU 性能分析","slug":"cpu-性能分析","link":"#cpu-性能分析","children":[]},{"level":3,"title":"内存分析","slug":"内存分析","link":"#内存分析","children":[]},{"level":3,"title":"I/O 性能分析","slug":"i-o-性能分析","link":"#i-o-性能分析","children":[]}]},{"level":2,"title":"网络诊断","slug":"网络诊断","link":"#网络诊断","children":[{"level":3,"title":"网络连接性测试","slug":"网络连接性测试","link":"#网络连接性测试","children":[]},{"level":3,"title":"网络流量分析","slug":"网络流量分析","link":"#网络流量分析","children":[]}]},{"level":2,"title":"日志管理","slug":"日志管理","link":"#日志管理","children":[{"level":3,"title":"结构化日志配置","slug":"结构化日志配置","link":"#结构化日志配置","children":[]},{"level":3,"title":"日志分析工具","slug":"日志分析工具","link":"#日志分析工具","children":[]}]},{"level":2,"title":"故障排除","slug":"故障排除","link":"#故障排除","children":[{"level":3,"title":"常见问题诊断","slug":"常见问题诊断","link":"#常见问题诊断","children":[]},{"level":3,"title":"自动化故障检测","slug":"自动化故障检测","link":"#自动化故障检测","children":[]}]},{"level":2,"title":"下一步学习","slug":"下一步学习","link":"#下一步学习","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1754503646000,"updatedTime":1754503646000,"contributors":[{"name":"hushengnian","email":"hushengnian@example.com","commits":1}]},"filePathRelative":"blogs/cloud-base/oci-06-monitoring-guide.md"}');export{m as comp,b as data};
