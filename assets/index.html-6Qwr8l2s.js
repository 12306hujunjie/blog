import{_ as a,c as i,d as l,o as t}from"./app--xDOKwpD.js";const n={};function r(s,e){return t(),i("div",null,e[0]||(e[0]=[l('<h1 id="设计模式学习指南" tabindex="-1"><a class="header-anchor" href="#设计模式学习指南"><span>设计模式学习指南</span></a></h1><p>设计模式是解决软件设计中常见问题的最佳实践总结，分为三大类：</p><h2 id="创建型模式" tabindex="-1"><a class="header-anchor" href="#创建型模式"><span>创建型模式</span></a></h2><ul><li>单例模式 (Singleton)</li><li>工厂模式 (Factory)</li><li>建造者模式 (Builder)</li><li>原型模式 (Prototype)</li></ul><h2 id="结构型模式" tabindex="-1"><a class="header-anchor" href="#结构型模式"><span>结构型模式</span></a></h2><ul><li>适配器模式 (Adapter)</li><li>装饰器模式 (Decorator)</li><li>代理模式 (Proxy)</li><li>组合模式 (Composite)</li></ul><h2 id="行为型模式" tabindex="-1"><a class="header-anchor" href="#行为型模式"><span>行为型模式</span></a></h2><ul><li>观察者模式 (Observer)</li><li>策略模式 (Strategy)</li><li>迭代器模式 (Iterator)</li><li>命令模式 (Command)</li></ul><p>详细内容请查看各子目录文档。</p>',9)]))}const d=a(n,[["render",r]]),c=JSON.parse('{"path":"/docs/design_pattern/","title":"设计模式概述","lang":"en-US","frontmatter":{"title":"设计模式概述","date":"2023-02-15T00:00:00.000Z","tags":["设计模式","软件架构","面向对象","代码设计","编程思想","中级","最佳实践"],"categories":["编程基础"],"sidebar":"auto"},"headers":[{"level":2,"title":"创建型模式","slug":"创建型模式","link":"#创建型模式","children":[]},{"level":2,"title":"结构型模式","slug":"结构型模式","link":"#结构型模式","children":[]},{"level":2,"title":"行为型模式","slug":"行为型模式","link":"#行为型模式","children":[]}],"git":{"createdTime":1752125632000,"updatedTime":1752125632000,"contributors":[{"name":"户盛年","email":"hushengnian@hushengniandeMacBook-Air.local","commits":1}]},"filePathRelative":"docs/design_pattern/index.md"}');export{d as comp,c as data};
