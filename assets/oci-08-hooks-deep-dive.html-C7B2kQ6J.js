import{_ as o,c as i,b as s,a as c,e as a,d as p,w as u,r as e,o as r}from"./app-6X7aTgdN.js";const k={},d={href:"https://github.com/opencontainers/runtime-spec",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/opencontainers/runtime-spec/blob/main/config.md#posix-platform-hooks",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/opencontainers/runc/blob/main/libcontainer/configs/config.go",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/opencontainers/runtime-spec/blob/main/runtime.md#lifecycle",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/opencontainers/runtime-spec/tree/main/schema/test",target:"_blank",rel:"noopener noreferrer"};function h(q,n){const l=e("RouteLink"),t=e("ExternalLinkIcon");return r(),i("div",null,[n[18]||(n[18]=s("h1",{id:"oci-hook-系统深度解析-容器生命周期扩展机制",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#oci-hook-系统深度解析-容器生命周期扩展机制"},[s("span",null,"OCI Hook 系统深度解析 - 容器生命周期扩展机制")])],-1)),s("blockquote",null,[s("p",null,[n[2]||(n[2]=s("strong",null,"系列导航：",-1)),n[3]||(n[3]=a()),p(l,{to:"/blogs/cloud-base/oci-series-index.html"},{default:u(()=>n[0]||(n[0]=[a("OCI 容器技术完全指南系列")])),_:1,__:[0]}),n[4]||(n[4]=a(" → 第八篇：Hook 系统深度解析")),n[5]||(n[5]=s("br",null,null,-1)),n[6]||(n[6]=s("strong",null,"规范版本：",-1)),n[7]||(n[7]=a(" OCI Runtime Spec v1.0.2")),n[8]||(n[8]=s("br",null,null,-1)),n[9]||(n[9]=s("strong",null,"参考仓库：",-1)),n[10]||(n[10]=a()),s("a",d,[n[1]||(n[1]=a("opencontainers/runtime-spec")),p(t)]),n[11]||(n[11]=s("br",null,null,-1)),n[12]||(n[12]=s("strong",null,"最后更新：",-1)),n[13]||(n[13]=a(" 2024-12-19"))])]),n[19]||(n[19]=c(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>OCI Hook 系统是容器运行时规范中的核心扩展机制，允许用户在容器生命周期的关键节点执行自定义操作。Hook 提供了强大的容器定制能力，支持网络配置、安全审计、资源监控、清理操作等多种场景。</p><h3 id="hook-系统特点" tabindex="-1"><a class="header-anchor" href="#hook-系统特点"><span>Hook 系统特点</span></a></h3><ul><li><strong>生命周期集成</strong> - 与容器创建、启动、停止等关键阶段深度集成</li><li><strong>命名空间感知</strong> - 在不同的命名空间上下文中执行</li><li><strong>状态传递</strong> - 通过标准输入接收容器状态信息</li><li><strong>错误处理</strong> - 支持超时控制和错误传播</li><li><strong>扩展性强</strong> - 支持多种编程语言和脚本实现</li></ul><h2 id="hook-类型与执行时机" tabindex="-1"><a class="header-anchor" href="#hook-类型与执行时机"><span>Hook 类型与执行时机</span></a></h2><h3 id="_1-createruntime-hook" tabindex="-1"><a class="header-anchor" href="#_1-createruntime-hook"><span>1. createRuntime Hook</span></a></h3><p><strong>执行时机：</strong> 容器运行时环境创建后，pivot_root 操作前<br><strong>执行命名空间：</strong> Runtime Namespace（运行时命名空间）<br><strong>路径解析：</strong> Runtime Namespace</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createRuntime&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/network-setup&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;network-setup&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--container-id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;{{.ID}}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;NETWORK_MODE=bridge&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">30</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>典型用例：</strong></p><ul><li>网络命名空间配置</li><li>存储卷挂载</li><li>安全策略初始化</li><li>监控代理注入</li></ul><p><strong>容器生命周期状态：</strong></p><ul><li>命名空间已创建</li><li>挂载操作已完成</li><li>Cgroups 可能尚未完全配置</li><li>SELinux/AppArmor 标签可能尚未应用</li></ul><h3 id="_2-createcontainer-hook" tabindex="-1"><a class="header-anchor" href="#_2-createcontainer-hook"><span>2. createContainer Hook</span></a></h3><p><strong>执行时机：</strong> 容器运行时环境创建后，pivot_root 操作前<br><strong>执行命名空间：</strong> Container Namespace（容器命名空间）<br><strong>路径解析：</strong> Runtime Namespace</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createContainer&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/container-init&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;container-init&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--setup-filesystem&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;CONTAINER_ROOT=/rootfs&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">60</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>典型用例：</strong></p><ul><li>容器内文件系统准备</li><li>应用配置文件生成</li><li>权限设置</li><li>临时文件创建</li></ul><p><strong>容器生命周期状态：</strong></p><ul><li>在容器命名空间中执行</li><li>挂载命名空间已设置</li><li>可以访问容器的文件系统视图</li><li>pivot_root 尚未执行</li></ul><h3 id="_3-startcontainer-hook" tabindex="-1"><a class="header-anchor" href="#_3-startcontainer-hook"><span>3. startContainer Hook</span></a></h3><p><strong>执行时机：</strong> start 操作调用后，用户进程执行前<br><strong>执行命名空间：</strong> Container Namespace（容器命名空间）<br><strong>路径解析：</strong> Container Namespace</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;startContainer&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/bin/ldconfig&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;ldconfig&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">10</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/app-prestart&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;app-prestart&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--validate-config&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;APP_ENV=production&quot;</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>典型用例：</strong></p><ul><li>动态链接库缓存更新</li><li>应用配置验证</li><li>运行时环境检查</li><li>依赖服务连接测试</li></ul><p><strong>容器生命周期状态：</strong></p><ul><li>完整的容器环境已准备就绪</li><li>所有挂载操作已完成</li><li>用户进程尚未启动</li><li>可以执行容器内的准备工作</li></ul><h3 id="_4-poststart-hook" tabindex="-1"><a class="header-anchor" href="#_4-poststart-hook"><span>4. poststart Hook</span></a></h3><p><strong>执行时机：</strong> 用户进程启动后，start 操作返回前<br><strong>执行命名空间：</strong> Runtime Namespace（运行时命名空间）<br><strong>路径解析：</strong> Runtime Namespace</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;poststart&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/health-monitor&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;health-monitor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--start-monitoring&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;MONITOR_INTERVAL=30s&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">5</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/notify-service&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;notify-service&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--event=container-started&quot;</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>典型用例：</strong></p><ul><li>健康检查启动</li><li>监控系统通知</li><li>负载均衡器注册</li><li>日志收集器启动</li></ul><p><strong>容器生命周期状态：</strong></p><ul><li>用户进程已启动</li><li>容器处于运行状态</li><li>可以进行外部系统集成</li><li>Hook 失败不会影响容器运行</li></ul><h3 id="_5-poststop-hook" tabindex="-1"><a class="header-anchor" href="#_5-poststop-hook"><span>5. poststop Hook</span></a></h3><p><strong>执行时机：</strong> 容器删除后，delete 操作返回前<br><strong>执行命名空间：</strong> Runtime Namespace（运行时命名空间）<br><strong>路径解析：</strong> Runtime Namespace</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;poststop&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/cleanup-resources&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;cleanup-resources&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--container-id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;CLEANUP_TIMEOUT=300s&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">60</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/audit-log&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;audit-log&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--event=container-stopped&quot;</span><span class="token punctuation">]</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>典型用例：</strong></p><ul><li>资源清理</li><li>审计日志记录</li><li>负载均衡器注销</li><li>临时文件删除</li></ul><p><strong>容器生命周期状态：</strong></p><ul><li>容器进程已退出</li><li>容器资源正在清理</li><li>可以执行清理和审计操作</li><li>Hook 失败不会阻止删除操作</li></ul><h2 id="hook-标准输入格式" tabindex="-1"><a class="header-anchor" href="#hook-标准输入格式"><span>Hook 标准输入格式</span></a></h2><h3 id="容器状态结构" tabindex="-1"><a class="header-anchor" href="#容器状态结构"><span>容器状态结构</span></a></h3><p>Hook 通过标准输入接收 JSON 格式的容器状态信息：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;ociVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1.0.2&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;container-12345&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;status&quot;</span><span class="token operator">:</span> <span class="token string">&quot;created&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;pid&quot;</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;bundle&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/var/lib/containers/container-12345&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;annotations&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;com.example.app&quot;</span><span class="token operator">:</span> <span class="token string">&quot;web-server&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token property">&quot;com.example.version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;v1.2.3&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="状态字段详解" tabindex="-1"><a class="header-anchor" href="#状态字段详解"><span>状态字段详解</span></a></h3><table><thead><tr><th>字段</th><th>类型</th><th>必需</th><th>说明</th></tr></thead><tbody><tr><td><code>ociVersion</code></td><td>string</td><td>是</td><td>OCI 规范版本</td></tr><tr><td><code>id</code></td><td>string</td><td>是</td><td>容器唯一标识符</td></tr><tr><td><code>status</code></td><td>string</td><td>是</td><td>容器状态：creating/created/running/stopped</td></tr><tr><td><code>pid</code></td><td>int</td><td>条件</td><td>容器进程 PID（Linux 上 created/running 状态必需）</td></tr><tr><td><code>bundle</code></td><td>string</td><td>是</td><td>Bundle 目录绝对路径</td></tr><tr><td><code>annotations</code></td><td>object</td><td>否</td><td>容器注解信息</td></tr></tbody></table><h3 id="不同-hook-类型的状态差异" tabindex="-1"><a class="header-anchor" href="#不同-hook-类型的状态差异"><span>不同 Hook 类型的状态差异</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># createRuntime Hook 接收的状态</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;creating&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pid&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>  <span class="token comment"># 进程尚未启动</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># createContainer Hook 接收的状态</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;creating&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pid&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1234</span>  <span class="token comment"># 容器进程已创建但未启动</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># startContainer Hook 接收的状态</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;created&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pid&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1234</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># poststart Hook 接收的状态</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;running&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pid&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1234</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># poststop Hook 接收的状态</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;stopped&quot;</span>,</span>
<span class="line">    <span class="token string">&quot;pid&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>  <span class="token comment"># 进程已退出</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hook-实现示例" tabindex="-1"><a class="header-anchor" href="#hook-实现示例"><span>Hook 实现示例</span></a></h2><h3 id="_1-网络配置-hook-go-实现" tabindex="-1"><a class="header-anchor" href="#_1-网络配置-hook-go-实现"><span>1. 网络配置 Hook（Go 实现）</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;encoding/json&quot;</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;io&quot;</span></span>
<span class="line">    <span class="token string">&quot;os&quot;</span></span>
<span class="line">    <span class="token string">&quot;os/exec&quot;</span></span>
<span class="line">    <span class="token string">&quot;github.com/opencontainers/runtime-spec/specs-go&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 读取容器状态</span></span>
<span class="line">    stateData<span class="token punctuation">,</span> err <span class="token operator">:=</span> io<span class="token punctuation">.</span><span class="token function">ReadAll</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stdin<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;Failed to read state: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> state specs<span class="token punctuation">.</span>State</span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>stateData<span class="token punctuation">,</span> <span class="token operator">&amp;</span>state<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;Failed to parse state: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 根据容器状态执行网络配置</span></span>
<span class="line">    <span class="token keyword">switch</span> state<span class="token punctuation">.</span>Status <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&quot;creating&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">setupNetwork</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> state<span class="token punctuation">.</span>Pid<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;Network setup failed: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">            os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">case</span> <span class="token string">&quot;stopped&quot;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">cleanupNetwork</span><span class="token punctuation">(</span>state<span class="token punctuation">.</span>ID<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            fmt<span class="token punctuation">.</span><span class="token function">Fprintf</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>Stderr<span class="token punctuation">,</span> <span class="token string">&quot;Network cleanup failed: %v\\n&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">            os<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Network hook completed for container %s\\n&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span>ID<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">setupNetwork</span><span class="token punctuation">(</span>containerID <span class="token builtin">string</span><span class="token punctuation">,</span> pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建 veth 对</span></span>
<span class="line">    vethHost <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;veth-%s-host&quot;</span><span class="token punctuation">,</span> containerID<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    vethContainer <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;veth-%s-cont&quot;</span><span class="token punctuation">,</span> containerID<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;add&quot;</span><span class="token punctuation">,</span> vethHost<span class="token punctuation">,</span> <span class="token string">&quot;type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;veth&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;peer&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> vethContainer<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to create veth pair: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 将容器端移入容器网络命名空间</span></span>
<span class="line">    cmd <span class="token operator">=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;set&quot;</span><span class="token punctuation">,</span> vethContainer<span class="token punctuation">,</span> <span class="token string">&quot;netns&quot;</span><span class="token punctuation">,</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to move veth to container: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 配置主机端接口</span></span>
<span class="line">    cmd <span class="token operator">=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;set&quot;</span><span class="token punctuation">,</span> vethHost<span class="token punctuation">,</span> <span class="token string">&quot;up&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to bring up host veth: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">cleanupNetwork</span><span class="token punctuation">(</span>containerID <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    vethHost <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;veth-%s-host&quot;</span><span class="token punctuation">,</span> containerID<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    cmd <span class="token operator">:=</span> exec<span class="token punctuation">.</span><span class="token function">Command</span><span class="token punctuation">(</span><span class="token string">&quot;ip&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;link&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;delete&quot;</span><span class="token punctuation">,</span> vethHost<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> cmd<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;failed to delete veth: %w&quot;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-安全审计-hook-python-实现" tabindex="-1"><a class="header-anchor" href="#_2-安全审计-hook-python-实现"><span>2. 安全审计 Hook（Python 实现）</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment">#!/usr/bin/env python3</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"><span class="token keyword">import</span> logging</span>
<span class="line"><span class="token keyword">from</span> datetime <span class="token keyword">import</span> datetime</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 配置日志</span></span>
<span class="line">logging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span></span>
<span class="line">    filename<span class="token operator">=</span><span class="token string">&#39;/var/log/container-audit.log&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span></span>
<span class="line">    <span class="token builtin">format</span><span class="token operator">=</span><span class="token string">&#39;%(asctime)s - %(levelname)s - %(message)s&#39;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 读取容器状态</span></span>
<span class="line">        state_data <span class="token operator">=</span> sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        state <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>state_data<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 执行审计操作</span></span>
<span class="line">        audit_container_event<span class="token punctuation">(</span>state<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span></span>
<span class="line">        logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Audit hook failed: </span><span class="token interpolation"><span class="token punctuation">{</span>e<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">audit_container_event</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;记录容器事件到审计日志&quot;&quot;&quot;</span></span>
<span class="line">    </span>
<span class="line">    event_data <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">:</span> datetime<span class="token punctuation">.</span>utcnow<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>isoformat<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;container_id&#39;</span><span class="token punctuation">:</span> state<span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;status&#39;</span><span class="token punctuation">:</span> state<span class="token punctuation">[</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;pid&#39;</span><span class="token punctuation">:</span> state<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;pid&#39;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;bundle&#39;</span><span class="token punctuation">:</span> state<span class="token punctuation">[</span><span class="token string">&#39;bundle&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;annotations&#39;</span><span class="token punctuation">:</span> state<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;user&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;USER&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;hook_type&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;HOOK_TYPE&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unknown&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 记录安全相关的注解</span></span>
<span class="line">    security_annotations <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        k<span class="token punctuation">:</span> v <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> event_data<span class="token punctuation">[</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> k<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;security.&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;com.example.security.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> security_annotations<span class="token punctuation">:</span></span>
<span class="line">        event_data<span class="token punctuation">[</span><span class="token string">&#39;security_context&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> security_annotations</span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检查高风险操作</span></span>
<span class="line">    <span class="token keyword">if</span> is_high_risk_container<span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        event_data<span class="token punctuation">[</span><span class="token string">&#39;risk_level&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;HIGH&#39;</span></span>
<span class="line">        logging<span class="token punctuation">.</span>warning<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;High-risk container operation: </span><span class="token interpolation"><span class="token punctuation">{</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>event_data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">        event_data<span class="token punctuation">[</span><span class="token string">&#39;risk_level&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;NORMAL&#39;</span></span>
<span class="line">        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Container operation: </span><span class="token interpolation"><span class="token punctuation">{</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>event_data<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 发送到 SIEM 系统（示例）</span></span>
<span class="line">    send_to_siem<span class="token punctuation">(</span>event_data<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">is_high_risk_container</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;检查是否为高风险容器&quot;&quot;&quot;</span></span>
<span class="line">    annotations <span class="token operator">=</span> state<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;annotations&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检查特权容器</span></span>
<span class="line">    <span class="token keyword">if</span> annotations<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;security.privileged&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;true&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检查主机网络</span></span>
<span class="line">    <span class="token keyword">if</span> annotations<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;network.mode&#39;</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string">&#39;host&#39;</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 检查敏感挂载</span></span>
<span class="line">    sensitive_mounts <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;/proc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/sys&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/dev&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/var/run/docker.sock&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    bundle_path <span class="token operator">=</span> state<span class="token punctuation">[</span><span class="token string">&#39;bundle&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;</span><span class="token interpolation"><span class="token punctuation">{</span>bundle_path<span class="token punctuation">}</span></span><span class="token string">/config.json&quot;</span></span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">            config <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span></span>
<span class="line">            mounts <span class="token operator">=</span> config<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">&#39;mounts&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">for</span> mount <span class="token keyword">in</span> mounts<span class="token punctuation">:</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token builtin">any</span><span class="token punctuation">(</span>mount<span class="token punctuation">[</span><span class="token string">&#39;destination&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>sm<span class="token punctuation">)</span> <span class="token keyword">for</span> sm <span class="token keyword">in</span> sensitive_mounts<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">                    <span class="token keyword">return</span> <span class="token boolean">True</span></span>
<span class="line">    <span class="token keyword">except</span> Exception<span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">pass</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">False</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">send_to_siem</span><span class="token punctuation">(</span>event_data<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token triple-quoted-string string">&quot;&quot;&quot;发送事件到 SIEM 系统&quot;&quot;&quot;</span></span>
<span class="line">    <span class="token comment"># 这里可以集成实际的 SIEM 系统</span></span>
<span class="line">    <span class="token comment"># 例如：Splunk, ELK, 等</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-健康检查-hook-shell-实现" tabindex="-1"><a class="header-anchor" href="#_3-健康检查-hook-shell-实现"><span>3. 健康检查 Hook（Shell 实现）</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># health-check-hook.sh</span></span>
<span class="line"><span class="token comment"># 容器健康检查 Hook</span></span>
<span class="line"></span>
<span class="line"><span class="token builtin class-name">set</span> <span class="token parameter variable">-euo</span> pipefail</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 读取容器状态</span></span>
<span class="line"><span class="token assign-left variable">STATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token assign-left variable">CONTAINER_ID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$STATE</span>&quot;</span> <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.id&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token assign-left variable">STATUS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$STATE</span>&quot;</span> <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.status&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token assign-left variable">PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$STATE</span>&quot;</span> <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.pid // 0&#39;</span><span class="token variable">)</span></span></span>
<span class="line"><span class="token assign-left variable">BUNDLE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$STATE</span>&quot;</span> <span class="token operator">|</span> jq <span class="token parameter variable">-r</span> <span class="token string">&#39;.bundle&#39;</span><span class="token variable">)</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 日志函数</span></span>
<span class="line"><span class="token function-name function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;[<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token string">&#39;+%Y-%m-%d %H:%M:%S&#39;</span><span class="token variable">)</span></span>] <span class="token variable">$1</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /var/log/health-check.log</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 主逻辑</span></span>
<span class="line"><span class="token keyword">case</span> <span class="token string">&quot;<span class="token variable">$STATUS</span>&quot;</span> <span class="token keyword">in</span></span>
<span class="line">    <span class="token string">&quot;running&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        start_health_monitoring</span>
<span class="line">        <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token string">&quot;stopped&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        stop_health_monitoring</span>
<span class="line">        <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line">    *<span class="token punctuation">)</span></span>
<span class="line">        log <span class="token string">&quot;INFO: No action needed for status: <span class="token variable">$STATUS</span>&quot;</span></span>
<span class="line">        <span class="token punctuation">;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">esac</span></span>
<span class="line"></span>
<span class="line"><span class="token function-name function">start_health_monitoring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    log <span class="token string">&quot;INFO: Starting health monitoring for container <span class="token variable">$CONTAINER_ID</span> (PID: <span class="token variable">$PID</span>)&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 创建健康检查配置</span></span>
<span class="line">    <span class="token assign-left variable">HEALTH_CONFIG</span><span class="token operator">=</span><span class="token string">&quot;/var/lib/health-checks/<span class="token variable">$CONTAINER_ID</span>.conf&quot;</span></span>
<span class="line">    <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> <span class="token string">&quot;<span class="token variable">$HEALTH_CONFIG</span>&quot;</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token function">cat</span> <span class="token operator">&gt;</span> <span class="token string">&quot;<span class="token variable">$HEALTH_CONFIG</span>&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">EOF</span>
<span class="line">CONTAINER_ID=<span class="token variable">$CONTAINER_ID</span></span>
<span class="line">PID=<span class="token variable">$PID</span></span>
<span class="line">BUNDLE=<span class="token variable">$BUNDLE</span></span>
<span class="line">START_TIME=<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token string">&#39;+%s&#39;</span><span class="token variable">)</span></span></span>
<span class="line">HEALTH_CHECK_INTERVAL=30</span>
<span class="line">HEALTH_CHECK_TIMEOUT=10</span>
<span class="line">HEALTH_CHECK_RETRIES=3</span>
<span class="line">EOF</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 启动健康检查守护进程</span></span>
<span class="line">    <span class="token function">nohup</span> /usr/local/bin/health-monitor <span class="token string">&quot;<span class="token variable">$HEALTH_CONFIG</span>&quot;</span> <span class="token operator">&gt;</span> /dev/null <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span></span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token variable">$!</span> <span class="token operator">&gt;</span> <span class="token string">&quot;/var/run/health-monitor-<span class="token variable">$CONTAINER_ID</span>.pid&quot;</span></span>
<span class="line">    </span>
<span class="line">    log <span class="token string">&quot;INFO: Health monitoring started for container <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function-name function">stop_health_monitoring</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    log <span class="token string">&quot;INFO: Stopping health monitoring for container <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 停止健康检查守护进程</span></span>
<span class="line">    <span class="token assign-left variable">PID_FILE</span><span class="token operator">=</span><span class="token string">&quot;/var/run/health-monitor-<span class="token variable">$CONTAINER_ID</span>.pid&quot;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$PID_FILE</span>&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">        <span class="token assign-left variable">MONITOR_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> <span class="token string">&quot;<span class="token variable">$PID_FILE</span>&quot;</span><span class="token variable">)</span></span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token function">kill</span> <span class="token parameter variable">-0</span> <span class="token string">&quot;<span class="token variable">$MONITOR_PID</span>&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span></span>
<span class="line">            <span class="token function">kill</span> <span class="token string">&quot;<span class="token variable">$MONITOR_PID</span>&quot;</span></span>
<span class="line">            log <span class="token string">&quot;INFO: Health monitor process <span class="token variable">$MONITOR_PID</span> terminated&quot;</span></span>
<span class="line">        <span class="token keyword">fi</span></span>
<span class="line">        <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;<span class="token variable">$PID_FILE</span>&quot;</span></span>
<span class="line">    <span class="token keyword">fi</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 清理配置文件</span></span>
<span class="line">    <span class="token function">rm</span> <span class="token parameter variable">-f</span> <span class="token string">&quot;/var/lib/health-checks/<span class="token variable">$CONTAINER_ID</span>.conf&quot;</span></span>
<span class="line">    </span>
<span class="line">    log <span class="token string">&quot;INFO: Health monitoring cleanup completed for container <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">log <span class="token string">&quot;INFO: Health check hook completed for container <span class="token variable">$CONTAINER_ID</span>&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="高级-hook-配置" tabindex="-1"><a class="header-anchor" href="#高级-hook-配置"><span>高级 Hook 配置</span></a></h2><h3 id="_1-条件执行-hook" tabindex="-1"><a class="header-anchor" href="#_1-条件执行-hook"><span>1. 条件执行 Hook</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createRuntime&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/conditional-hook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;conditional-hook&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--check-annotation&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;network.type&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">                    <span class="token string">&quot;REQUIRED_ANNOTATION=network.type=custom&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;ACTION=setup-custom-network&quot;</span></span>
<span class="line">                <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">30</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-多阶段-hook-链" tabindex="-1"><a class="header-anchor" href="#_2-多阶段-hook-链"><span>2. 多阶段 Hook 链</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createRuntime&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/stage1-network&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;stage1-network&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--prepare&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">15</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/stage2-security&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;stage2-security&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--apply-policies&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">20</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/stage3-monitoring&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;stage3-monitoring&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--enable&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">10</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-环境特定-hook" tabindex="-1"><a class="header-anchor" href="#_3-环境特定-hook"><span>3. 环境特定 Hook</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createRuntime&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/env-specific-hook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;env-specific-hook&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">                    <span class="token string">&quot;ENVIRONMENT=production&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;DATACENTER=us-west-2&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;CLUSTER_NAME=prod-cluster-01&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;SECURITY_LEVEL=high&quot;</span></span>
<span class="line">                <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">60</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hook-错误处理与调试" tabindex="-1"><a class="header-anchor" href="#hook-错误处理与调试"><span>Hook 错误处理与调试</span></a></h2><h3 id="_1-错误处理策略" tabindex="-1"><a class="header-anchor" href="#_1-错误处理策略"><span>1. 错误处理策略</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// Hook 错误处理示例</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">executeHookWithRetry</span><span class="token punctuation">(</span>hook <span class="token operator">*</span>Hook<span class="token punctuation">,</span> state <span class="token operator">*</span>specs<span class="token punctuation">.</span>State<span class="token punctuation">,</span> maxRetries <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> lastErr <span class="token builtin">error</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> maxRetries<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">            time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">Duration</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Second<span class="token punctuation">)</span></span>
<span class="line">            log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Retrying hook execution (attempt %d/%d)&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> maxRetries<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        err <span class="token operator">:=</span> hook<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        lastErr <span class="token operator">=</span> err</span>
<span class="line">        log<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hook execution failed (attempt %d): %v&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 检查是否为可重试的错误</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token operator">!</span><span class="token function">isRetryableError</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> fmt<span class="token punctuation">.</span><span class="token function">Errorf</span><span class="token punctuation">(</span><span class="token string">&quot;hook failed after %d attempts: %w&quot;</span><span class="token punctuation">,</span> maxRetries<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> lastErr<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">isRetryableError</span><span class="token punctuation">(</span>err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token builtin">bool</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 网络错误、临时文件系统错误等可以重试</span></span>
<span class="line">    <span class="token keyword">return</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;network&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">           strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;temporary&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>
<span class="line">           strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-hook-调试工具" tabindex="-1"><a class="header-anchor" href="#_2-hook-调试工具"><span>2. Hook 调试工具</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># hook-debugger.sh</span></span>
<span class="line"><span class="token comment"># Hook 调试工具</span></span>
<span class="line"></span>
<span class="line"><span class="token assign-left variable">DEBUG_DIR</span><span class="token operator">=</span><span class="token string">&quot;/var/log/hook-debug&quot;</span></span>
<span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token string">&quot;<span class="token variable">$DEBUG_DIR</span>&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 记录 Hook 执行信息</span></span>
<span class="line"><span class="token function-name function">log_hook_execution</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">local</span> <span class="token assign-left variable">hook_name</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$1</span>&quot;</span></span>
<span class="line">    <span class="token builtin class-name">local</span> <span class="token assign-left variable">container_id</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$2</span>&quot;</span></span>
<span class="line">    <span class="token builtin class-name">local</span> <span class="token assign-left variable">timestamp</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> <span class="token string">&#39;+%Y%m%d_%H%M%S&#39;</span><span class="token variable">)</span></span></span>
<span class="line">    <span class="token builtin class-name">local</span> <span class="token assign-left variable">debug_file</span><span class="token operator">=</span><span class="token string">&quot;<span class="token variable">$DEBUG_DIR</span>/<span class="token variable">\${hook_name}</span>_<span class="token variable">\${container_id}</span>_<span class="token variable">\${timestamp}</span>.log&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;=== Hook Execution Debug Info ===&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Hook Name: <span class="token variable">$hook_name</span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Container ID: <span class="token variable">$container_id</span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Timestamp: <span class="token variable"><span class="token variable">$(</span><span class="token function">date</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;PID: <span class="token variable">$$</span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;User: <span class="token variable"><span class="token variable">$(</span><span class="token function">whoami</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Working Directory: <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>&quot;</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Environment:&quot;</span></span>
<span class="line">        <span class="token function">env</span> <span class="token operator">|</span> <span class="token function">sort</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>=== Container State ===&quot;</span></span>
<span class="line">        <span class="token function">cat</span>  <span class="token comment"># 从标准输入读取状态</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>=== System Info ===&quot;</span></span>
<span class="line">        <span class="token function">uname</span> <span class="token parameter variable">-a</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>=== Network Interfaces ===&quot;</span></span>
<span class="line">        <span class="token function">ip</span> addr show</span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>=== Mount Points ===&quot;</span></span>
<span class="line">        <span class="token function">mount</span></span>
<span class="line">        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>=== Process Tree ===&quot;</span></span>
<span class="line">        <span class="token function">ps</span> auxf</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token operator">&gt;</span> <span class="token string">&quot;<span class="token variable">$debug_file</span>&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Debug info saved to: <span class="token variable">$debug_file</span>&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用示例</span></span>
<span class="line"><span class="token comment"># echo &quot;$STATE&quot; | log_hook_execution &quot;createRuntime&quot; &quot;$CONTAINER_ID&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-hook-性能监控" tabindex="-1"><a class="header-anchor" href="#_3-hook-性能监控"><span>3. Hook 性能监控</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre><code><span class="line"><span class="token comment">#!/usr/bin/env python3</span></span>
<span class="line"><span class="token comment"># hook-profiler.py</span></span>
<span class="line"><span class="token comment"># Hook 性能监控工具</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> json</span>
<span class="line"><span class="token keyword">import</span> sys</span>
<span class="line"><span class="token keyword">import</span> time</span>
<span class="line"><span class="token keyword">import</span> psutil</span>
<span class="line"><span class="token keyword">import</span> os</span>
<span class="line"><span class="token keyword">from</span> contextlib <span class="token keyword">import</span> contextmanager</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">HookProfiler</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> hook_name<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        self<span class="token punctuation">.</span>hook_name <span class="token operator">=</span> hook_name</span>
<span class="line">        self<span class="token punctuation">.</span>start_time <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">        self<span class="token punctuation">.</span>end_time <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">        self<span class="token punctuation">.</span>peak_memory <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">        self<span class="token punctuation">.</span>peak_cpu <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">        </span>
<span class="line">    <span class="token decorator annotation punctuation">@contextmanager</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">profile</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;性能监控上下文管理器&quot;&quot;&quot;</span></span>
<span class="line">        self<span class="token punctuation">.</span>start_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        process <span class="token operator">=</span> psutil<span class="token punctuation">.</span>Process<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token keyword">yield</span> self</span>
<span class="line">        <span class="token keyword">finally</span><span class="token punctuation">:</span></span>
<span class="line">            self<span class="token punctuation">.</span>end_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            self<span class="token punctuation">.</span>peak_memory <span class="token operator">=</span> process<span class="token punctuation">.</span>memory_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rss</span>
<span class="line">            self<span class="token punctuation">.</span>peak_cpu <span class="token operator">=</span> process<span class="token punctuation">.</span>cpu_percent<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">report</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token triple-quoted-string string">&quot;&quot;&quot;生成性能报告&quot;&quot;&quot;</span></span>
<span class="line">        duration <span class="token operator">=</span> self<span class="token punctuation">.</span>end_time <span class="token operator">-</span> self<span class="token punctuation">.</span>start_time</span>
<span class="line">        </span>
<span class="line">        report <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&#39;hook_name&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>hook_name<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;duration_seconds&#39;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>duration<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;peak_memory_mb&#39;</span><span class="token punctuation">:</span> <span class="token builtin">round</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>peak_memory <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;peak_cpu_percent&#39;</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>peak_cpu<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&#39;timestamp&#39;</span><span class="token punctuation">:</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 写入性能日志</span></span>
<span class="line">        <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;/var/log/hook-performance.log&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span></span>
<span class="line">            f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>report<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">return</span> report</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 使用示例</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    hook_name <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">else</span> <span class="token string">&#39;unknown&#39;</span></span>
<span class="line">    profiler <span class="token operator">=</span> HookProfiler<span class="token punctuation">(</span>hook_name<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">with</span> profiler<span class="token punctuation">.</span>profile<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 执行实际的 Hook 逻辑</span></span>
<span class="line">        state_data <span class="token operator">=</span> sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        state <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>state_data<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment"># 模拟 Hook 操作</span></span>
<span class="line">        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>  <span class="token comment"># 替换为实际操作</span></span>
<span class="line">        </span>
<span class="line">    <span class="token comment"># 生成性能报告</span></span>
<span class="line">    report <span class="token operator">=</span> profiler<span class="token punctuation">.</span>report<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Hook </span><span class="token interpolation"><span class="token punctuation">{</span>hook_name<span class="token punctuation">}</span></span><span class="token string"> completed in </span><span class="token interpolation"><span class="token punctuation">{</span>report<span class="token punctuation">[</span><span class="token string">&#39;duration_seconds&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span></span><span class="token string">s&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span></span>
<span class="line">    main<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生产环境最佳实践" tabindex="-1"><a class="header-anchor" href="#生产环境最佳实践"><span>生产环境最佳实践</span></a></h2><h3 id="_1-hook-安全配置" tabindex="-1"><a class="header-anchor" href="#_1-hook-安全配置"><span>1. Hook 安全配置</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;createRuntime&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token punctuation">{</span></span>
<span class="line">                <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/usr/local/bin/secure-hook&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;args&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;secure-hook&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--verify-signature&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;env&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">                    <span class="token string">&quot;HOOK_SIGNATURE_KEY=/etc/hook-keys/public.pem&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;HOOK_LOG_LEVEL=INFO&quot;</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string">&quot;HOOK_AUDIT_ENABLED=true&quot;</span></span>
<span class="line">                <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">30</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-hook-资源限制" tabindex="-1"><a class="header-anchor" href="#_2-hook-资源限制"><span>2. Hook 资源限制</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token comment"># resource-limited-hook.sh</span></span>
<span class="line"><span class="token comment"># 带资源限制的 Hook</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置资源限制</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-m</span> <span class="token number">102400</span>  <span class="token comment"># 100MB 内存限制</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-t</span> <span class="token number">30</span>      <span class="token comment"># 30秒 CPU 时间限制</span></span>
<span class="line"><span class="token builtin class-name">ulimit</span> <span class="token parameter variable">-f</span> <span class="token number">10240</span>   <span class="token comment"># 10MB 文件大小限制</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 设置优先级</span></span>
<span class="line"><span class="token function">nice</span> <span class="token parameter variable">-n</span> <span class="token number">10</span> <span class="token string">&quot;<span class="token variable">$@</span>&quot;</span>  <span class="token comment"># 降低优先级</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-hook-监控集成" tabindex="-1"><a class="header-anchor" href="#_3-hook-监控集成"><span>3. Hook 监控集成</span></a></h3><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token comment"># prometheus-hook-metrics.yaml</span></span>
<span class="line"><span class="token comment"># Prometheus 监控配置</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1</span>
<span class="line"><span class="token key atrule">kind</span><span class="token punctuation">:</span> ConfigMap</span>
<span class="line"><span class="token key atrule">metadata</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">name</span><span class="token punctuation">:</span> hook<span class="token punctuation">-</span>monitoring</span>
<span class="line"><span class="token key atrule">data</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">hook-exporter.py</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">    #!/usr/bin/env python3</span>
<span class="line">    import json</span>
<span class="line">    import time</span>
<span class="line">    from prometheus_client import Counter, Histogram, start_http_server</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 定义指标</span></span>
<span class="line">    HOOK_EXECUTIONS = Counter(&#39;hook_executions_total&#39;<span class="token punctuation">,</span> <span class="token string">&#39;Total hook executions&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;hook_type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;status&#39;</span><span class="token punctuation">]</span>)</span>
<span class="line">    HOOK_DURATION = Histogram(&#39;hook_duration_seconds&#39;<span class="token punctuation">,</span> <span class="token string">&#39;Hook execution duration&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;hook_type&#39;</span><span class="token punctuation">]</span>)</span>
<span class="line">    </span>
<span class="line">    def record_hook_execution(hook_type<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> <span class="token key atrule">success)</span><span class="token punctuation">:</span></span>
<span class="line">        status = &#39;success&#39; if success else &#39;failure&#39;</span>
<span class="line">        HOOK_EXECUTIONS.labels(hook_type=hook_type<span class="token punctuation">,</span> status=status).inc()</span>
<span class="line">        HOOK_DURATION.labels(hook_type=hook_type).observe(duration)</span>
<span class="line">    </span>
<span class="line">    <span class="token comment"># 启动 Prometheus 指标服务器</span></span>
<span class="line">    start_http_server(8000)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="故障排除指南" tabindex="-1"><a class="header-anchor" href="#故障排除指南"><span>故障排除指南</span></a></h2><h3 id="常见问题与解决方案" tabindex="-1"><a class="header-anchor" href="#常见问题与解决方案"><span>常见问题与解决方案</span></a></h3><ol><li><p><strong>Hook 超时问题</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 检查 Hook 执行时间</span></span>
<span class="line"><span class="token function">time</span> /usr/local/bin/your-hook <span class="token operator">&lt;</span> state.json</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 增加超时时间或优化 Hook 逻辑</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;timeout&quot;</span><span class="token builtin class-name">:</span> <span class="token number">120</span>  <span class="token comment"># 增加到 2 分钟</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>权限问题</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 检查 Hook 文件权限</span></span>
<span class="line"><span class="token function">ls</span> <span class="token parameter variable">-la</span> /usr/local/bin/your-hook</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 确保可执行权限</span></span>
<span class="line"><span class="token function">chmod</span> +x /usr/local/bin/your-hook</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>命名空间问题</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 检查 Hook 执行的命名空间</span></span>
<span class="line">nsenter <span class="token parameter variable">-t</span> <span class="token variable">$PID</span> <span class="token parameter variable">-n</span> <span class="token function">ip</span> addr show</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>依赖缺失</strong></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 检查 Hook 依赖</span></span>
<span class="line">ldd /usr/local/bin/your-hook</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在容器中测试</span></span>
<span class="line"><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> /usr/local/bin/your-hook:/hook alpine /hook</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>OCI Hook 系统为容器生命周期管理提供了强大的扩展能力。通过合理使用不同类型的 Hook，可以实现：</p><ul><li><strong>网络配置自动化</strong> - 动态网络设置和清理</li><li><strong>安全策略执行</strong> - 运行时安全检查和审计</li><li><strong>监控集成</strong> - 容器状态监控和告警</li><li><strong>资源管理</strong> - 动态资源分配和清理</li><li><strong>服务发现</strong> - 自动服务注册和注销</li></ul><p>在生产环境中使用 Hook 时，需要特别注意：</p><ol><li><strong>性能影响</strong> - Hook 会影响容器启动时间</li><li><strong>错误处理</strong> - 合理的超时和重试机制</li><li><strong>安全考虑</strong> - Hook 具有较高权限，需要严格控制</li><li><strong>监控调试</strong> - 完善的日志和监控机制</li><li><strong>版本兼容</strong> - 确保 Hook 与不同 OCI 运行时的兼容性</li></ol><p>通过深入理解 Hook 系统的工作原理和最佳实践，可以构建更加灵活、安全、可观测的容器化应用平台。</p><h2 id="参考资源" tabindex="-1"><a class="header-anchor" href="#参考资源"><span>参考资源</span></a></h2>`,86)),s("ul",null,[s("li",null,[s("a",v,[n[14]||(n[14]=a("OCI Runtime Specification - Hooks")),p(t)])]),s("li",null,[s("a",m,[n[15]||(n[15]=a("runc Hook Implementation")),p(t)])]),s("li",null,[s("a",b,[n[16]||(n[16]=a("Container Lifecycle")),p(t)])]),s("li",null,[s("a",g,[n[17]||(n[17]=a("Hook Examples")),p(t)])])])])}const y=o(k,[["render",h]]),_=JSON.parse('{"path":"/blogs/cloud-base/oci-08-hooks-deep-dive.html","title":"OCI Hook 系统深度解析 - 容器生命周期扩展机制","lang":"en-US","frontmatter":{"title":"OCI Hook 系统深度解析 - 容器生命周期扩展机制","date":"2024-02-08T00:00:00.000Z","tags":["OCI","云原生","Hook系统"],"categories":["cloud-base"],"sidebar":"auto"},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"Hook 系统特点","slug":"hook-系统特点","link":"#hook-系统特点","children":[]}]},{"level":2,"title":"Hook 类型与执行时机","slug":"hook-类型与执行时机","link":"#hook-类型与执行时机","children":[{"level":3,"title":"1. createRuntime Hook","slug":"_1-createruntime-hook","link":"#_1-createruntime-hook","children":[]},{"level":3,"title":"2. createContainer Hook","slug":"_2-createcontainer-hook","link":"#_2-createcontainer-hook","children":[]},{"level":3,"title":"3. startContainer Hook","slug":"_3-startcontainer-hook","link":"#_3-startcontainer-hook","children":[]},{"level":3,"title":"4. poststart Hook","slug":"_4-poststart-hook","link":"#_4-poststart-hook","children":[]},{"level":3,"title":"5. poststop Hook","slug":"_5-poststop-hook","link":"#_5-poststop-hook","children":[]}]},{"level":2,"title":"Hook 标准输入格式","slug":"hook-标准输入格式","link":"#hook-标准输入格式","children":[{"level":3,"title":"容器状态结构","slug":"容器状态结构","link":"#容器状态结构","children":[]},{"level":3,"title":"状态字段详解","slug":"状态字段详解","link":"#状态字段详解","children":[]},{"level":3,"title":"不同 Hook 类型的状态差异","slug":"不同-hook-类型的状态差异","link":"#不同-hook-类型的状态差异","children":[]}]},{"level":2,"title":"Hook 实现示例","slug":"hook-实现示例","link":"#hook-实现示例","children":[{"level":3,"title":"1. 网络配置 Hook（Go 实现）","slug":"_1-网络配置-hook-go-实现","link":"#_1-网络配置-hook-go-实现","children":[]},{"level":3,"title":"2. 安全审计 Hook（Python 实现）","slug":"_2-安全审计-hook-python-实现","link":"#_2-安全审计-hook-python-实现","children":[]},{"level":3,"title":"3. 健康检查 Hook（Shell 实现）","slug":"_3-健康检查-hook-shell-实现","link":"#_3-健康检查-hook-shell-实现","children":[]}]},{"level":2,"title":"高级 Hook 配置","slug":"高级-hook-配置","link":"#高级-hook-配置","children":[{"level":3,"title":"1. 条件执行 Hook","slug":"_1-条件执行-hook","link":"#_1-条件执行-hook","children":[]},{"level":3,"title":"2. 多阶段 Hook 链","slug":"_2-多阶段-hook-链","link":"#_2-多阶段-hook-链","children":[]},{"level":3,"title":"3. 环境特定 Hook","slug":"_3-环境特定-hook","link":"#_3-环境特定-hook","children":[]}]},{"level":2,"title":"Hook 错误处理与调试","slug":"hook-错误处理与调试","link":"#hook-错误处理与调试","children":[{"level":3,"title":"1. 错误处理策略","slug":"_1-错误处理策略","link":"#_1-错误处理策略","children":[]},{"level":3,"title":"2. Hook 调试工具","slug":"_2-hook-调试工具","link":"#_2-hook-调试工具","children":[]},{"level":3,"title":"3. Hook 性能监控","slug":"_3-hook-性能监控","link":"#_3-hook-性能监控","children":[]}]},{"level":2,"title":"生产环境最佳实践","slug":"生产环境最佳实践","link":"#生产环境最佳实践","children":[{"level":3,"title":"1. Hook 安全配置","slug":"_1-hook-安全配置","link":"#_1-hook-安全配置","children":[]},{"level":3,"title":"2. Hook 资源限制","slug":"_2-hook-资源限制","link":"#_2-hook-资源限制","children":[]},{"level":3,"title":"3. Hook 监控集成","slug":"_3-hook-监控集成","link":"#_3-hook-监控集成","children":[]}]},{"level":2,"title":"故障排除指南","slug":"故障排除指南","link":"#故障排除指南","children":[{"level":3,"title":"常见问题与解决方案","slug":"常见问题与解决方案","link":"#常见问题与解决方案","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资源","slug":"参考资源","link":"#参考资源","children":[]}],"git":{"createdTime":1755014556000,"updatedTime":1755014556000,"contributors":[{"name":"hushengnian","email":"hushengnian@example.com","commits":1}]},"filePathRelative":"blogs/cloud-base/oci-08-hooks-deep-dive.md"}');export{y as comp,_ as data};
