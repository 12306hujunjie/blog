import{_ as l,c,b as s,a as i,e as a,d as t,w as e,r as o,o as u}from"./app-2O6audqE.js";const r={};function k(d,n){const p=o("RouteLink");return u(),c("div",null,[n[11]||(n[11]=s("h1",{id:"criu-检查点与恢复",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#criu-检查点与恢复"},[s("span",null,"CRIU 检查点与恢复")])],-1)),s("blockquote",null,[s("p",null,[n[2]||(n[2]=s("strong",null,"系列导航：",-1)),n[3]||(n[3]=a()),t(p,{to:"/blogs/cloud-base/runc-deep-dive/"},{default:e(()=>n[0]||(n[0]=[a("runc 容器运行时深度解析系列")])),_:1,__:[0]}),n[4]||(n[4]=a(" → 第七篇：CRIU 检查点与恢复")),n[5]||(n[5]=s("br",null,null,-1)),n[6]||(n[6]=s("strong",null,"上一篇：",-1)),n[7]||(n[7]=a()),t(p,{to:"/blogs/cloud-base/runc-deep-dive/06-%E5%AE%89%E5%85%A8%E7%89%B9%E6%80%A7%E5%AE%9E%E7%8E%B0.html"},{default:e(()=>n[1]||(n[1]=[a("安全特性实现")])),_:1,__:[1]}),n[8]||(n[8]=s("br",null,null,-1)),n[9]||(n[9]=s("strong",null,"最后更新：",-1)),n[10]||(n[10]=a(" 2024"))])]),n[12]||(n[12]=i(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>本文深入分析 runc 如何集成 CRIU (Checkpoint/Restore in Userspace) 实现容器的检查点创建和恢复功能。这项技术使得容器可以停止、保存状态并在其他位置恢复运行。</p><h2 id="概述-1" tabindex="-1"><a class="header-anchor" href="#概述-1"><span>概述</span></a></h2><p>CRIU (Checkpoint/Restore in Userspace) 是Linux系统中用于在用户空间实现进程检查点和恢复的技术。runc集成了CRIU，使容器能够在运行时保存完整状态并在稍后恢复，这对于容器迁移、负载均衡和故障恢复至关重要。</p><h2 id="_1-criu基础原理" tabindex="-1"><a class="header-anchor" href="#_1-criu基础原理"><span>1. CRIU基础原理</span></a></h2><h3 id="_1-1-核心概念" tabindex="-1"><a class="header-anchor" href="#_1-1-核心概念"><span>1.1 核心概念</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">┌─────────────────────────────────────────────────────────────┐</span>
<span class="line">│                     容器检查点/恢复流程                        │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│                                                              │</span>
<span class="line">│  运行中容器                    检查点                         │</span>
<span class="line">│  ┌─────────┐                 ┌──────────┐                  │</span>
<span class="line">│  │ Process │ ──freeze──&gt;     │  Image   │                  │</span>
<span class="line">│  │  Tree   │                 │  Files   │                  │</span>
<span class="line">│  │         │ ──dump──&gt;       │          │                  │</span>
<span class="line">│  │ Memory  │                 │ *.img    │                  │</span>
<span class="line">│  │  FDs    │                 │ files    │                  │</span>
<span class="line">│  │ Network │                 └──────────┘                  │</span>
<span class="line">│  └─────────┘                      │                        │</span>
<span class="line">│       ↑                           │                        │</span>
<span class="line">│       │                           │                        │</span>
<span class="line">│       └────────restore────────────┘                        │</span>
<span class="line">│                                                            │</span>
<span class="line">│  关键组件:                                                  │</span>
<span class="line">│  • Process Tree: 完整进程层次结构                           │</span>
<span class="line">│  • Memory Pages: 内存页面映像                              │</span>
<span class="line">│  • File Descriptors: 文件描述符状态                        │</span>
<span class="line">│  • Network State: 网络连接和接口                           │</span>
<span class="line">│  • Namespaces: 命名空间配置                                │</span>
<span class="line">│                                                            │</span>
<span class="line">└─────────────────────────────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-criu工作原理" tabindex="-1"><a class="header-anchor" href="#_1-2-criu工作原理"><span>1.2 CRIU工作原理</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// libcontainer/criu_linux.go</span></span>
<span class="line"><span class="token comment">// CRIU通过以下步骤实现容器状态保存和恢复</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 1. 冻结进程树</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">freezeProcessTree</span><span class="token punctuation">(</span>pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 使用cgroup freezer或SIGSTOP信号</span></span>
<span class="line">    <span class="token comment">// 确保进程状态不变</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2. 收集进程信息</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">collectProcessInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> ProcessInfo <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 遍历/proc文件系统</span></span>
<span class="line">    <span class="token comment">// 收集进程树、内存映射、文件描述符等</span></span>
<span class="line">    <span class="token keyword">return</span> ProcessInfo<span class="token punctuation">{</span></span>
<span class="line">        PID<span class="token punctuation">:</span>         pid<span class="token punctuation">,</span></span>
<span class="line">        Memory<span class="token punctuation">:</span>      <span class="token function">getMemoryMappings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        FileDescriptors<span class="token punctuation">:</span> <span class="token function">getOpenFiles</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        Sockets<span class="token punctuation">:</span>     <span class="token function">getSocketInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        Namespaces<span class="token punctuation">:</span>  <span class="token function">getNamespaceInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3. 序列化状态</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">serializeState</span><span class="token punctuation">(</span>info ProcessInfo<span class="token punctuation">,</span> dir <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 将状态写入多个映像文件</span></span>
<span class="line">    <span class="token comment">// core-*.img: 进程核心信息</span></span>
<span class="line">    <span class="token comment">// pagemap-*.img: 内存页映射</span></span>
<span class="line">    <span class="token comment">// fdinfo-*.img: 文件描述符信息</span></span>
<span class="line">    <span class="token comment">// sk-*.img: 套接字信息</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 4. 恢复进程</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restoreProcess</span><span class="token punctuation">(</span>dir <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 从映像文件读取状态</span></span>
<span class="line">    <span class="token comment">// 重建进程树和资源</span></span>
<span class="line">    <span class="token comment">// 恢复内存和执行状态</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-runc中的criu集成" tabindex="-1"><a class="header-anchor" href="#_2-runc中的criu集成"><span>2. runc中的CRIU集成</span></a></h2><h3 id="_2-1-架构设计" tabindex="-1"><a class="header-anchor" href="#_2-1-架构设计"><span>2.1 架构设计</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">┌────────────────────────────────────────────────────────────┐</span>
<span class="line">│                    runc CRIU集成架构                        │</span>
<span class="line">├────────────────────────────────────────────────────────────┤</span>
<span class="line">│                                                            │</span>
<span class="line">│  ┌──────────────┐        ┌───────────────┐               │</span>
<span class="line">│  │   runc CLI   │        │  libcontainer │               │</span>
<span class="line">│  │              │        │               │               │</span>
<span class="line">│  │ checkpoint   │───────&gt;│  criu_linux.go│               │</span>
<span class="line">│  │  restore     │        │               │               │</span>
<span class="line">│  └──────────────┘        └───────┬───────┘               │</span>
<span class="line">│                                  │                        │</span>
<span class="line">│                                  │ RPC                    │</span>
<span class="line">│                                  │                        │</span>
<span class="line">│                          ┌───────▼───────┐               │</span>
<span class="line">│                          │    CRIU       │               │</span>
<span class="line">│                          │   Service     │               │</span>
<span class="line">│                          │               │               │</span>
<span class="line">│                          │ • dump        │               │</span>
<span class="line">│                          │ • restore     │               │</span>
<span class="line">│                          │ • pre-dump    │               │</span>
<span class="line">│                          │ • page-server │               │</span>
<span class="line">│                          └───────────────┘               │</span>
<span class="line">│                                                          │</span>
<span class="line">│  关键文件:                                                │</span>
<span class="line">│  • checkpoint.go: 检查点命令实现                          │</span>
<span class="line">│  • restore.go: 恢复命令实现                              │</span>
<span class="line">│  • libcontainer/criu_linux.go: 核心CRIU集成逻辑          │</span>
<span class="line">│  • libcontainer/criu_opts_linux.go: CRIU选项配置         │</span>
<span class="line">│                                                          │</span>
<span class="line">└────────────────────────────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-检查点实现" tabindex="-1"><a class="header-anchor" href="#_2-2-检查点实现"><span>2.2 检查点实现</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// checkpoint.go</span></span>
<span class="line"><span class="token keyword">var</span> checkpointCommand <span class="token operator">=</span> cli<span class="token punctuation">.</span>Command<span class="token punctuation">{</span></span>
<span class="line">    Name<span class="token punctuation">:</span>  <span class="token string">&quot;checkpoint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    Usage<span class="token punctuation">:</span> <span class="token string">&quot;checkpoint a running container&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    Flags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>cli<span class="token punctuation">.</span>Flag<span class="token punctuation">{</span></span>
<span class="line">        cli<span class="token punctuation">.</span>StringFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;image-path&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Value<span class="token punctuation">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;path for saving checkpoint files&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;leave-running&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;leave the container running after checkpoint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;tcp-established&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;allow open tcp connections&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;external-unix-sockets&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;allow external unix sockets&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;shell-job&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;allow shell jobs&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;lazy-pages&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;use lazy migration mechanism&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;pre-dump&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;perform pre-dump for iterative migration&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// libcontainer/criu_linux.go</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Container<span class="token punctuation">)</span> <span class="token function">Checkpoint</span><span class="token punctuation">(</span>criuOpts <span class="token operator">*</span>CriuOpts<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    c<span class="token punctuation">.</span>m<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> c<span class="token punctuation">.</span>m<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 1. 验证容器状态</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token operator">!</span>c<span class="token punctuation">.</span><span class="token function">hasInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">&quot;container is not running&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 检查CRIU版本</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">checkCriuVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 准备CRIU请求</span></span>
<span class="line">    req <span class="token operator">:=</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>CriuReq<span class="token punctuation">{</span></span>
<span class="line">        Type<span class="token punctuation">:</span> <span class="token operator">&amp;</span>criuReqType<span class="token punctuation">,</span></span>
<span class="line">        Opts<span class="token punctuation">:</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>CriuOpts<span class="token punctuation">{</span></span>
<span class="line">            ImagesDirFd<span class="token punctuation">:</span>     proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token function">int32</span><span class="token punctuation">(</span>imageDir<span class="token punctuation">.</span><span class="token function">Fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            WorkDirFd<span class="token punctuation">:</span>       proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token function">int32</span><span class="token punctuation">(</span>workDir<span class="token punctuation">.</span><span class="token function">Fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            LogLevel<span class="token punctuation">:</span>        proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            LogFile<span class="token punctuation">:</span>         proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;criu.log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            Root<span class="token punctuation">:</span>            proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Rootfs<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            ManageCgroups<span class="token punctuation">:</span>   proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            TcpEstablished<span class="token punctuation">:</span>  proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>TcpEstablished<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            ExternalUnixSockets<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>ExternalUnixConnections<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            ShellJob<span class="token punctuation">:</span>        proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>ShellJob<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            FileLocks<span class="token punctuation">:</span>       proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>FileLocks<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            EmptyNs<span class="token punctuation">:</span>         proto<span class="token punctuation">.</span><span class="token function">Uint32</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>EmptyNs<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 配置特殊选项</span></span>
<span class="line">    <span class="token keyword">if</span> criuOpts<span class="token punctuation">.</span>PreDump <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 预转储用于迭代迁移</span></span>
<span class="line">        req<span class="token punctuation">.</span>Type <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;PRE_DUMP&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>TrackMem <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> criuOpts<span class="token punctuation">.</span>LazyPages <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 懒页面迁移</span></span>
<span class="line">        req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>LazyPages <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">        req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>StatusFd <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token function">int32</span><span class="token punctuation">(</span>statusFd<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 5. 处理外部挂载</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> m <span class="token operator">:=</span> <span class="token keyword">range</span> c<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Mounts <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> m<span class="token punctuation">.</span>Device <span class="token operator">==</span> <span class="token string">&quot;bind&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">            extMnt <span class="token operator">:=</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>ExtMountMap<span class="token punctuation">{</span></span>
<span class="line">                Key<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>Destination<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                Val<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>Source<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>ExtMnt <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>ExtMnt<span class="token punctuation">,</span> extMnt<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 6. 保存文件描述符信息</span></span>
<span class="line">    fds <span class="token operator">:=</span> c<span class="token punctuation">.</span>initProcess<span class="token punctuation">.</span><span class="token function">externalDescriptors</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    fdsJSON<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>fds<span class="token punctuation">)</span></span>
<span class="line">    os<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> <span class="token string">&quot;descriptors.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fdsJSON<span class="token punctuation">,</span> <span class="token number">0600</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 7. 执行CRIU dump</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">criuSwrk</span><span class="token punctuation">(</span><span class="token boolean">nil</span><span class="token punctuation">,</span> req<span class="token punctuation">,</span> criuOpts<span class="token punctuation">,</span> <span class="token boolean">nil</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 8. 处理后续操作</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token operator">!</span>criuOpts<span class="token punctuation">.</span>LeaveRunning <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>criuOpts<span class="token punctuation">.</span>PreDump <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 如果不保持运行，销毁容器</span></span>
<span class="line">        c<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-恢复实现" tabindex="-1"><a class="header-anchor" href="#_2-3-恢复实现"><span>2.3 恢复实现</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// restore.go</span></span>
<span class="line"><span class="token keyword">var</span> restoreCommand <span class="token operator">=</span> cli<span class="token punctuation">.</span>Command<span class="token punctuation">{</span></span>
<span class="line">    Name<span class="token punctuation">:</span>  <span class="token string">&quot;restore&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    Usage<span class="token punctuation">:</span> <span class="token string">&quot;restore a container from a checkpoint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    Flags<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>cli<span class="token punctuation">.</span>Flag<span class="token punctuation">{</span></span>
<span class="line">        cli<span class="token punctuation">.</span>StringFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;image-path&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;path to checkpoint files&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>StringFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;bundle, b&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;path to the root of the bundle directory&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;tcp-established&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;allow open tcp connections&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>BoolFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;lazy-pages&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;use lazy migration mechanism&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        cli<span class="token punctuation">.</span>StringFlag<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>  <span class="token string">&quot;manage-cgroups-mode&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            Usage<span class="token punctuation">:</span> <span class="token string">&quot;cgroups management mode (soft|full|strict|ignore)&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// libcontainer/criu_linux.go</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>c <span class="token operator">*</span>Container<span class="token punctuation">)</span> <span class="token function">Restore</span><span class="token punctuation">(</span>process <span class="token operator">*</span>Process<span class="token punctuation">,</span> criuOpts <span class="token operator">*</span>CriuOpts<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    c<span class="token punctuation">.</span>m<span class="token punctuation">.</span><span class="token function">Lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> c<span class="token punctuation">.</span>m<span class="token punctuation">.</span><span class="token function">Unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 1. 准备根文件系统</span></span>
<span class="line">    root <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>stateDir<span class="token punctuation">,</span> <span class="token string">&quot;criu-root&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Mkdir</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0755</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 绑定挂载rootfs到CRIU可访问位置</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">mount</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Rootfs<span class="token punctuation">,</span> root<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> unix<span class="token punctuation">.</span>MS_BIND<span class="token operator">|</span>unix<span class="token punctuation">.</span>MS_REC<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">defer</span> <span class="token function">umount</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> unix<span class="token punctuation">.</span>MNT_DETACH<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 创建CRIU恢复请求</span></span>
<span class="line">    req <span class="token operator">:=</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>CriuReq<span class="token punctuation">{</span></span>
<span class="line">        Type<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;RESTORE&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        Opts<span class="token punctuation">:</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>CriuOpts<span class="token punctuation">{</span></span>
<span class="line">            ImagesDirFd<span class="token punctuation">:</span>    proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token function">int32</span><span class="token punctuation">(</span>imageDir<span class="token punctuation">.</span><span class="token function">Fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            WorkDirFd<span class="token punctuation">:</span>      proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token function">int32</span><span class="token punctuation">(</span>workDir<span class="token punctuation">.</span><span class="token function">Fd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            LogLevel<span class="token punctuation">:</span>       proto<span class="token punctuation">.</span><span class="token function">Int32</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            LogFile<span class="token punctuation">:</span>        proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token string">&quot;criu-restore.log&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            Root<span class="token punctuation">:</span>           proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            ManageCgroups<span class="token punctuation">:</span>  proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            ManageCgroupsMode<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>ManageCgroupsMode<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            TcpEstablished<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>TcpEstablished<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            LazyPages<span class="token punctuation">:</span>      proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>LazyPages<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 配置命名空间</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> ns <span class="token operator">:=</span> <span class="token keyword">range</span> c<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Namespaces <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span> ns<span class="token punctuation">.</span>Type <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> configs<span class="token punctuation">.</span>NetworkNamespace<span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// 网络命名空间特殊处理</span></span>
<span class="line">            <span class="token keyword">if</span> ns<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 外部网络命名空间</span></span>
<span class="line">                req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>ExtUnixSk <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">Bool</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">                req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>NetNsFile <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>ns<span class="token punctuation">.</span>Path<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">case</span> configs<span class="token punctuation">.</span>PidNamespace<span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// PID命名空间处理</span></span>
<span class="line">            <span class="token keyword">if</span> ns<span class="token punctuation">.</span>Path <span class="token operator">!=</span> <span class="token string">&quot;&quot;</span> <span class="token punctuation">{</span></span>
<span class="line">                req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>PidNsFile <span class="token operator">=</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>ns<span class="token punctuation">.</span>Path<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 恢复网络接口</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> iface <span class="token operator">:=</span> <span class="token keyword">range</span> c<span class="token punctuation">.</span>config<span class="token punctuation">.</span>Networks <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span> iface<span class="token punctuation">.</span>Type <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&quot;veth&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            veth <span class="token operator">:=</span> <span class="token operator">&amp;</span>criurpc<span class="token punctuation">.</span>CriuVethPair<span class="token punctuation">{</span></span>
<span class="line">                IfOut<span class="token punctuation">:</span> proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>iface<span class="token punctuation">.</span>HostInterfaceName<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                IfIn<span class="token punctuation">:</span>  proto<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>iface<span class="token punctuation">.</span>Name<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>Veths <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>Opts<span class="token punctuation">.</span>Veths<span class="token punctuation">,</span> veth<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&quot;loopback&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// 回环接口自动恢复</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 5. 加载文件描述符信息</span></span>
<span class="line">    descriptorsFile <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>criuOpts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> <span class="token string">&quot;descriptors.json&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> descriptorsJSON<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>descriptorsFile<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> descriptors <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span></span>
<span class="line">        json<span class="token punctuation">.</span><span class="token function">Unmarshal</span><span class="token punctuation">(</span>descriptorsJSON<span class="token punctuation">,</span> <span class="token operator">&amp;</span>descriptors<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 重新打开外部文件描述符</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> desc <span class="token operator">:=</span> <span class="token keyword">range</span> descriptors <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 处理管道、套接字等</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 6. 执行CRIU恢复</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">criuSwrk</span><span class="token punctuation">(</span>process<span class="token punctuation">,</span> req<span class="token punctuation">,</span> criuOpts<span class="token punctuation">,</span> extraFiles<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 7. 更新容器状态</span></span>
<span class="line">    c<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token operator">&amp;</span>restoredState<span class="token punctuation">{</span></span>
<span class="line">        imageDir<span class="token punctuation">:</span> criuOpts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span></span>
<span class="line">        c<span class="token punctuation">:</span>        c<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 8. 应用cgroups设置</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span>cgroupManager<span class="token punctuation">.</span><span class="token function">Apply</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>initProcess<span class="token punctuation">.</span><span class="token function">pid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-进程树和内存管理" tabindex="-1"><a class="header-anchor" href="#_3-进程树和内存管理"><span>3. 进程树和内存管理</span></a></h2><h3 id="_3-1-进程树序列化" tabindex="-1"><a class="header-anchor" href="#_3-1-进程树序列化"><span>3.1 进程树序列化</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 进程树保存结构</span></span>
<span class="line"><span class="token keyword">type</span> ProcessTreeEntry <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    PID      <span class="token builtin">int32</span>           <span class="token string">\`json:&quot;pid&quot;\`</span></span>
<span class="line">    PPID     <span class="token builtin">int32</span>           <span class="token string">\`json:&quot;ppid&quot;\`</span></span>
<span class="line">    PGID     <span class="token builtin">int32</span>           <span class="token string">\`json:&quot;pgid&quot;\`</span></span>
<span class="line">    SID      <span class="token builtin">int32</span>           <span class="token string">\`json:&quot;sid&quot;\`</span></span>
<span class="line">    Threads  <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span>         <span class="token string">\`json:&quot;threads&quot;\`</span></span>
<span class="line">    Children <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">int32</span>         <span class="token string">\`json:&quot;children&quot;\`</span></span>
<span class="line">    State    <span class="token builtin">string</span>          <span class="token string">\`json:&quot;state&quot;\`</span></span>
<span class="line">    Command  <span class="token builtin">string</span>          <span class="token string">\`json:&quot;command&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 收集进程树信息</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">collectProcessTree</span><span class="token punctuation">(</span>rootPid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>ProcessTreeEntry<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    tree <span class="token operator">:=</span> <span class="token operator">&amp;</span>ProcessTreeEntry<span class="token punctuation">{</span></span>
<span class="line">        PID<span class="token punctuation">:</span> <span class="token function">int32</span><span class="token punctuation">(</span>rootPid<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 读取/proc/[pid]/stat获取进程信息</span></span>
<span class="line">    statPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/stat&quot;</span><span class="token punctuation">,</span> rootPid<span class="token punctuation">)</span></span>
<span class="line">    statData<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>statPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 解析进程状态</span></span>
<span class="line">    fields <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>statData<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    tree<span class="token punctuation">.</span>PPID <span class="token operator">=</span> <span class="token function">parseInt32</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    tree<span class="token punctuation">.</span>PGID <span class="token operator">=</span> <span class="token function">parseInt32</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    tree<span class="token punctuation">.</span>SID <span class="token operator">=</span> <span class="token function">parseInt32</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    tree<span class="token punctuation">.</span>State <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 收集线程信息</span></span>
<span class="line">    taskDir <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/task&quot;</span><span class="token punctuation">,</span> rootPid<span class="token punctuation">)</span></span>
<span class="line">    tasks<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadDir</span><span class="token punctuation">(</span>taskDir<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> task <span class="token operator">:=</span> <span class="token keyword">range</span> tasks <span class="token punctuation">{</span></span>
<span class="line">        tid<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>task<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> tid <span class="token operator">!=</span> rootPid <span class="token punctuation">{</span></span>
<span class="line">            tree<span class="token punctuation">.</span>Threads <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tree<span class="token punctuation">.</span>Threads<span class="token punctuation">,</span> <span class="token function">int32</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 递归收集子进程</span></span>
<span class="line">    childrenPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/task/%d/children&quot;</span><span class="token punctuation">,</span> rootPid<span class="token punctuation">,</span> rootPid<span class="token punctuation">)</span></span>
<span class="line">    childrenData<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>childrenPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> childPid <span class="token operator">:=</span> <span class="token keyword">range</span> strings<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>childrenData<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        pid<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>childPid<span class="token punctuation">)</span></span>
<span class="line">        tree<span class="token punctuation">.</span>Children <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>tree<span class="token punctuation">.</span>Children<span class="token punctuation">,</span> <span class="token function">int32</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 递归处理子进程树</span></span>
<span class="line">        <span class="token keyword">if</span> childTree<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">collectProcessTree</span><span class="token punctuation">(</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 合并子进程信息</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> tree<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-内存页面管理" tabindex="-1"><a class="header-anchor" href="#_3-2-内存页面管理"><span>3.2 内存页面管理</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 内存映射信息</span></span>
<span class="line"><span class="token keyword">type</span> MemoryMapping <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    Start      <span class="token builtin">uint64</span>  <span class="token string">\`json:&quot;start&quot;\`</span></span>
<span class="line">    End        <span class="token builtin">uint64</span>  <span class="token string">\`json:&quot;end&quot;\`</span></span>
<span class="line">    Flags      <span class="token builtin">uint32</span>  <span class="token string">\`json:&quot;flags&quot;\`</span></span>
<span class="line">    Protection <span class="token builtin">uint32</span>  <span class="token string">\`json:&quot;prot&quot;\`</span></span>
<span class="line">    Offset     <span class="token builtin">uint64</span>  <span class="token string">\`json:&quot;offset&quot;\`</span></span>
<span class="line">    Device     <span class="token builtin">string</span>  <span class="token string">\`json:&quot;device&quot;\`</span></span>
<span class="line">    Inode      <span class="token builtin">uint64</span>  <span class="token string">\`json:&quot;inode&quot;\`</span></span>
<span class="line">    Path       <span class="token builtin">string</span>  <span class="token string">\`json:&quot;path&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 收集内存映射</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">collectMemoryMappings</span><span class="token punctuation">(</span>pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>MemoryMapping<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    mapsPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/maps&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span></span>
<span class="line">    mapsFile<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mapsPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">defer</span> mapsFile<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">var</span> mappings <span class="token punctuation">[</span><span class="token punctuation">]</span>MemoryMapping</span>
<span class="line">    scanner <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewScanner</span><span class="token punctuation">(</span>mapsFile<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 解析格式: address perms offset dev inode pathname</span></span>
<span class="line">        <span class="token comment">// 例如: 00400000-00452000 r-xp 00000000 08:02 173521 /usr/bin/dbus-daemon</span></span>
<span class="line">        line <span class="token operator">:=</span> scanner<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        fields <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">var</span> mapping MemoryMapping</span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 解析地址范围</span></span>
<span class="line">        addrRange <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span></span>
<span class="line">        mapping<span class="token punctuation">.</span>Start<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseUint</span><span class="token punctuation">(</span>addrRange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span></span>
<span class="line">        mapping<span class="token punctuation">.</span>End<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseUint</span><span class="token punctuation">(</span>addrRange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 解析权限</span></span>
<span class="line">        perms <span class="token operator">:=</span> fields<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>perms<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            mapping<span class="token punctuation">.</span>Protection <span class="token operator">|=</span> <span class="token number">0x1</span> <span class="token comment">// PROT_READ</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>perms<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            mapping<span class="token punctuation">.</span>Protection <span class="token operator">|=</span> <span class="token number">0x2</span> <span class="token comment">// PROT_WRITE</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>perms<span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            mapping<span class="token punctuation">.</span>Protection <span class="token operator">|=</span> <span class="token number">0x4</span> <span class="token comment">// PROT_EXEC</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 解析其他字段</span></span>
<span class="line">        mapping<span class="token punctuation">.</span>Offset<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseUint</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span></span>
<span class="line">        mapping<span class="token punctuation">.</span>Device <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line">        mapping<span class="token punctuation">.</span>Inode<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">=</span> strconv<span class="token punctuation">.</span><span class="token function">ParseUint</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">5</span> <span class="token punctuation">{</span></span>
<span class="line">            mapping<span class="token punctuation">.</span>Path <span class="token operator">=</span> fields<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        mappings <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>mappings<span class="token punctuation">,</span> mapping<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> mappings<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 懒页面迁移支持</span></span>
<span class="line"><span class="token keyword">type</span> LazyPagesServer <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    uffd       <span class="token builtin">int</span>    <span class="token comment">// userfaultfd文件描述符</span></span>
<span class="line">    pageSize   <span class="token builtin">int</span></span>
<span class="line">    memoryFile <span class="token operator">*</span>os<span class="token punctuation">.</span>File</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>l <span class="token operator">*</span>LazyPagesServer<span class="token punctuation">)</span> <span class="token function">handlePageFault</span><span class="token punctuation">(</span>addr <span class="token builtin">uint64</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 计算页面偏移</span></span>
<span class="line">    pageAddr <span class="token operator">:=</span> addr <span class="token operator">&amp;^</span> <span class="token function">uint64</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>pageSize<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    offset <span class="token operator">:=</span> <span class="token function">int64</span><span class="token punctuation">(</span>pageAddr<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 从映像文件读取页面</span></span>
<span class="line">    pageData <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span></span>
<span class="line">    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> l<span class="token punctuation">.</span>memoryFile<span class="token punctuation">.</span><span class="token function">ReadAt</span><span class="token punctuation">(</span>pageData<span class="token punctuation">,</span> offset<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 将页面写入目标地址</span></span>
<span class="line">    <span class="token builtin">copy</span> <span class="token operator">:=</span> uffdio_copy<span class="token punctuation">{</span></span>
<span class="line">        dst<span class="token punctuation">:</span>  pageAddr<span class="token punctuation">,</span></span>
<span class="line">        src<span class="token punctuation">:</span>  <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>pageData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token builtin">len</span><span class="token punctuation">:</span>  <span class="token function">uint64</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        mode<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">=</span> <span class="token function">ioctl</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>uffd<span class="token punctuation">,</span> UFFDIO_COPY<span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token builtin">copy</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> err</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-网络状态保存与恢复" tabindex="-1"><a class="header-anchor" href="#_4-网络状态保存与恢复"><span>4. 网络状态保存与恢复</span></a></h2><h3 id="_4-1-网络接口管理" tabindex="-1"><a class="header-anchor" href="#_4-1-网络接口管理"><span>4.1 网络接口管理</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 网络接口信息</span></span>
<span class="line"><span class="token keyword">type</span> NetworkInterface <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    Name      <span class="token builtin">string</span>   <span class="token string">\`json:&quot;name&quot;\`</span></span>
<span class="line">    Type      <span class="token builtin">string</span>   <span class="token string">\`json:&quot;type&quot;\`</span></span>
<span class="line">    HwAddr    <span class="token builtin">string</span>   <span class="token string">\`json:&quot;hwaddr&quot;\`</span></span>
<span class="line">    Addresses <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">string</span> <span class="token string">\`json:&quot;addresses&quot;\`</span></span>
<span class="line">    State     <span class="token builtin">string</span>   <span class="token string">\`json:&quot;state&quot;\`</span></span>
<span class="line">    Master    <span class="token builtin">string</span>   <span class="token string">\`json:&quot;master&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 保存网络配置</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">saveNetworkState</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Container<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> interfaces <span class="token punctuation">[</span><span class="token punctuation">]</span>NetworkInterface</span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 进入容器网络命名空间</span></span>
<span class="line">    runtime<span class="token punctuation">.</span><span class="token function">LockOSThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> runtime<span class="token punctuation">.</span><span class="token function">UnlockOSThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    oldNs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> netns<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> oldNs<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    newNs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> netns<span class="token punctuation">.</span><span class="token function">GetFromPid</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>initProcess<span class="token punctuation">.</span><span class="token function">pid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> newNs<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    netns<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>newNs<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">defer</span> netns<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span>oldNs<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 枚举网络接口</span></span>
<span class="line">    ifaces<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> net<span class="token punctuation">.</span><span class="token function">Interfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> iface <span class="token operator">:=</span> <span class="token keyword">range</span> ifaces <span class="token punctuation">{</span></span>
<span class="line">        netIface <span class="token operator">:=</span> NetworkInterface<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span>   iface<span class="token punctuation">.</span>Name<span class="token punctuation">,</span></span>
<span class="line">            HwAddr<span class="token punctuation">:</span> iface<span class="token punctuation">.</span>HardwareAddr<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            State<span class="token punctuation">:</span>  <span class="token function">getInterfaceState</span><span class="token punctuation">(</span>iface<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 获取IP地址</span></span>
<span class="line">        addrs<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> iface<span class="token punctuation">.</span><span class="token function">Addrs</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> addr <span class="token operator">:=</span> <span class="token keyword">range</span> addrs <span class="token punctuation">{</span></span>
<span class="line">            netIface<span class="token punctuation">.</span>Addresses <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>netIface<span class="token punctuation">.</span>Addresses<span class="token punctuation">,</span> addr<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        interfaces <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">,</span> netIface<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 保存到文件</span></span>
<span class="line">    data<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> json<span class="token punctuation">.</span><span class="token function">Marshal</span><span class="token punctuation">(</span>interfaces<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> os<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>stateDir<span class="token punctuation">,</span> <span class="token string">&quot;network.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token number">0644</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// TCP连接保存</span></span>
<span class="line"><span class="token keyword">type</span> TCPConnection <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    LocalAddr  <span class="token builtin">string</span> <span class="token string">\`json:&quot;local_addr&quot;\`</span></span>
<span class="line">    RemoteAddr <span class="token builtin">string</span> <span class="token string">\`json:&quot;remote_addr&quot;\`</span></span>
<span class="line">    State      <span class="token builtin">string</span> <span class="token string">\`json:&quot;state&quot;\`</span></span>
<span class="line">    SendQueue  <span class="token builtin">int</span>    <span class="token string">\`json:&quot;send_queue&quot;\`</span></span>
<span class="line">    RecvQueue  <span class="token builtin">int</span>    <span class="token string">\`json:&quot;recv_queue&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">saveTCPConnections</span><span class="token punctuation">(</span>pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>TCPConnection<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 读取/proc/[pid]/net/tcp获取TCP连接</span></span>
<span class="line">    tcpPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/net/tcp&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span></span>
<span class="line">    tcpFile<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>tcpPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">defer</span> tcpFile<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">var</span> connections <span class="token punctuation">[</span><span class="token punctuation">]</span>TCPConnection</span>
<span class="line">    scanner <span class="token operator">:=</span> bufio<span class="token punctuation">.</span><span class="token function">NewScanner</span><span class="token punctuation">(</span>tcpFile<span class="token punctuation">)</span></span>
<span class="line">    scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 跳过标题行</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> scanner<span class="token punctuation">.</span><span class="token function">Scan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        fields <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Fields</span><span class="token punctuation">(</span>scanner<span class="token punctuation">.</span><span class="token function">Text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>fields<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">12</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">continue</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        conn <span class="token operator">:=</span> TCPConnection<span class="token punctuation">{</span></span>
<span class="line">            LocalAddr<span class="token punctuation">:</span>  <span class="token function">parseSocketAddr</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            RemoteAddr<span class="token punctuation">:</span> <span class="token function">parseSocketAddr</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            State<span class="token punctuation">:</span>      <span class="token function">tcpStateToString</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        fmt<span class="token punctuation">.</span><span class="token function">Sscanf</span><span class="token punctuation">(</span>fields<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;%X:%X&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">.</span>SendQueue<span class="token punctuation">,</span> <span class="token operator">&amp;</span>conn<span class="token punctuation">.</span>RecvQueue<span class="token punctuation">)</span></span>
<span class="line">        connections <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>connections<span class="token punctuation">,</span> conn<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> connections<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-虚拟网络设备" tabindex="-1"><a class="header-anchor" href="#_4-2-虚拟网络设备"><span>4.2 虚拟网络设备</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// Veth对恢复</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restoreVethPair</span><span class="token punctuation">(</span>hostName<span class="token punctuation">,</span> containerName <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建veth对</span></span>
<span class="line">    link <span class="token operator">:=</span> <span class="token operator">&amp;</span>netlink<span class="token punctuation">.</span>Veth<span class="token punctuation">{</span></span>
<span class="line">        LinkAttrs<span class="token punctuation">:</span> netlink<span class="token punctuation">.</span>LinkAttrs<span class="token punctuation">{</span></span>
<span class="line">            Name<span class="token punctuation">:</span> hostName<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">        PeerName<span class="token punctuation">:</span> containerName<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkAdd</span><span class="token punctuation">(</span>link<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 获取容器端接口</span></span>
<span class="line">    containerLink<span class="token punctuation">,</span> err <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkByName</span><span class="token punctuation">(</span>containerName<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 移动到容器命名空间</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkSetNsPid</span><span class="token punctuation">(</span>containerLink<span class="token punctuation">,</span> containerPid<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 配置主机端接口</span></span>
<span class="line">    hostLink<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkByName</span><span class="token punctuation">(</span>hostName<span class="token punctuation">)</span></span>
<span class="line">    netlink<span class="token punctuation">.</span><span class="token function">LinkSetUp</span><span class="token punctuation">(</span>hostLink<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 网桥连接恢复</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restoreBridgeConnection</span><span class="token punctuation">(</span>vethName<span class="token punctuation">,</span> bridgeName <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    bridge<span class="token punctuation">,</span> err <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkByName</span><span class="token punctuation">(</span>bridgeName<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    veth<span class="token punctuation">,</span> err <span class="token operator">:=</span> netlink<span class="token punctuation">.</span><span class="token function">LinkByName</span><span class="token punctuation">(</span>vethName<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 将veth添加到网桥</span></span>
<span class="line">    <span class="token keyword">return</span> netlink<span class="token punctuation">.</span><span class="token function">LinkSetMaster</span><span class="token punctuation">(</span>veth<span class="token punctuation">,</span> bridge<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>netlink<span class="token punctuation">.</span>Bridge<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-文件描述符管理" tabindex="-1"><a class="header-anchor" href="#_5-文件描述符管理"><span>5. 文件描述符管理</span></a></h2><h3 id="_5-1-文件描述符序列化" tabindex="-1"><a class="header-anchor" href="#_5-1-文件描述符序列化"><span>5.1 文件描述符序列化</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 文件描述符信息</span></span>
<span class="line"><span class="token keyword">type</span> FileDescriptor <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    FD      <span class="token builtin">int</span>    <span class="token string">\`json:&quot;fd&quot;\`</span></span>
<span class="line">    Path    <span class="token builtin">string</span> <span class="token string">\`json:&quot;path&quot;\`</span></span>
<span class="line">    Type    <span class="token builtin">string</span> <span class="token string">\`json:&quot;type&quot;\`</span></span>
<span class="line">    Flags   <span class="token builtin">int</span>    <span class="token string">\`json:&quot;flags&quot;\`</span></span>
<span class="line">    Mode    <span class="token builtin">uint32</span> <span class="token string">\`json:&quot;mode&quot;\`</span></span>
<span class="line">    Offset  <span class="token builtin">int64</span>  <span class="token string">\`json:&quot;offset&quot;\`</span></span>
<span class="line">    IsPipe  <span class="token builtin">bool</span>   <span class="token string">\`json:&quot;is_pipe&quot;\`</span></span>
<span class="line">    IsSocket <span class="token builtin">bool</span>  <span class="token string">\`json:&quot;is_socket&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 收集文件描述符</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">collectFileDescriptors</span><span class="token punctuation">(</span>pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span>FileDescriptor<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fdDir <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/fd&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span></span>
<span class="line">    entries<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadDir</span><span class="token punctuation">(</span>fdDir<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">var</span> descriptors <span class="token punctuation">[</span><span class="token punctuation">]</span>FileDescriptor</span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> entry <span class="token operator">:=</span> <span class="token keyword">range</span> entries <span class="token punctuation">{</span></span>
<span class="line">        fdNum<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> strconv<span class="token punctuation">.</span><span class="token function">Atoi</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        fdPath <span class="token operator">:=</span> filepath<span class="token punctuation">.</span><span class="token function">Join</span><span class="token punctuation">(</span>fdDir<span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">Name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 读取符号链接目标</span></span>
<span class="line">        target<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Readlink</span><span class="token punctuation">(</span>fdPath<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">continue</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        fd <span class="token operator">:=</span> FileDescriptor<span class="token punctuation">{</span></span>
<span class="line">            FD<span class="token punctuation">:</span>   fdNum<span class="token punctuation">,</span></span>
<span class="line">            Path<span class="token punctuation">:</span> target<span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 判断文件描述符类型</span></span>
<span class="line">        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;pipe:&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            fd<span class="token punctuation">.</span>Type <span class="token operator">=</span> <span class="token string">&quot;pipe&quot;</span></span>
<span class="line">            fd<span class="token punctuation">.</span>IsPipe <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;socket:&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            fd<span class="token punctuation">.</span>Type <span class="token operator">=</span> <span class="token string">&quot;socket&quot;</span></span>
<span class="line">            fd<span class="token punctuation">.</span>IsSocket <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            fd<span class="token punctuation">.</span>Type <span class="token operator">=</span> <span class="token string">&quot;file&quot;</span></span>
<span class="line">            <span class="token comment">// 获取文件状态</span></span>
<span class="line">            <span class="token keyword">if</span> stat<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Stat</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">                fd<span class="token punctuation">.</span>Mode <span class="token operator">=</span> <span class="token function">uint32</span><span class="token punctuation">(</span>stat<span class="token punctuation">.</span><span class="token function">Mode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 获取文件描述符标志</span></span>
<span class="line">        fdInfoPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/fdinfo/%d&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">,</span> fdNum<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> info<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>fdInfoPath<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 解析fdinfo文件</span></span>
<span class="line">            lines <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> line <span class="token operator">:=</span> <span class="token keyword">range</span> lines <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;flags:&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fmt<span class="token punctuation">.</span><span class="token function">Sscanf</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;flags:\\t%o&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd<span class="token punctuation">.</span>Flags<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">HasPrefix</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;pos:&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fmt<span class="token punctuation">.</span><span class="token function">Sscanf</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;pos:\\t%d&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>fd<span class="token punctuation">.</span>Offset<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        descriptors <span class="token operator">=</span> <span class="token function">append</span><span class="token punctuation">(</span>descriptors<span class="token punctuation">,</span> fd<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> descriptors<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 恢复文件描述符</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restoreFileDescriptors</span><span class="token punctuation">(</span>descriptors <span class="token punctuation">[</span><span class="token punctuation">]</span>FileDescriptor<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> desc <span class="token operator">:=</span> <span class="token keyword">range</span> descriptors <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span> desc<span class="token punctuation">.</span>Type <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&quot;file&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// 打开普通文件</span></span>
<span class="line">            fd<span class="token punctuation">,</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>desc<span class="token punctuation">.</span>Path<span class="token punctuation">,</span> desc<span class="token punctuation">.</span>Flags<span class="token punctuation">,</span> desc<span class="token punctuation">.</span>Mode<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> err</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 设置偏移量</span></span>
<span class="line">            <span class="token keyword">if</span> desc<span class="token punctuation">.</span>Offset <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">                syscall<span class="token punctuation">.</span><span class="token function">Seek</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> desc<span class="token punctuation">.</span>Offset<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 如果需要特定的FD号，使用dup2</span></span>
<span class="line">            <span class="token keyword">if</span> fd <span class="token operator">!=</span> desc<span class="token punctuation">.</span>FD <span class="token punctuation">{</span></span>
<span class="line">                syscall<span class="token punctuation">.</span><span class="token function">Dup2</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> desc<span class="token punctuation">.</span>FD<span class="token punctuation">)</span></span>
<span class="line">                syscall<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&quot;pipe&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// 管道需要特殊处理</span></span>
<span class="line">            <span class="token comment">// 通常由CRIU自动处理</span></span>
<span class="line">            </span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&quot;socket&quot;</span><span class="token punctuation">:</span></span>
<span class="line">            <span class="token comment">// 套接字恢复</span></span>
<span class="line">            <span class="token comment">// 需要根据套接字类型进行不同处理</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-管道和套接字处理" tabindex="-1"><a class="header-anchor" href="#_5-2-管道和套接字处理"><span>5.2 管道和套接字处理</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 管道恢复</span></span>
<span class="line"><span class="token keyword">type</span> PipeInfo <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    ReadEnd  <span class="token builtin">int</span> <span class="token string">\`json:&quot;read_end&quot;\`</span></span>
<span class="line">    WriteEnd <span class="token builtin">int</span> <span class="token string">\`json:&quot;write_end&quot;\`</span></span>
<span class="line">    Buffer   <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span> <span class="token string">\`json:&quot;buffer&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restorePipe</span><span class="token punctuation">(</span>info PipeInfo<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建管道</span></span>
<span class="line">    <span class="token keyword">var</span> pipeFds <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token builtin">int</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Pipe</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 恢复管道缓冲区内容</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token function">len</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>Buffer<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 复制到正确的文件描述符</span></span>
<span class="line">    <span class="token keyword">if</span> pipeFds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> info<span class="token punctuation">.</span>ReadEnd <span class="token punctuation">{</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Dup2</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>ReadEnd<span class="token punctuation">)</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> pipeFds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> info<span class="token punctuation">.</span>WriteEnd <span class="token punctuation">{</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Dup2</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>WriteEnd<span class="token punctuation">)</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>pipeFds<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Unix域套接字恢复</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">restoreUnixSocket</span><span class="token punctuation">(</span>path <span class="token builtin">string</span><span class="token punctuation">,</span> sockType <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建套接字</span></span>
<span class="line">    fd<span class="token punctuation">,</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Socket</span><span class="token punctuation">(</span>syscall<span class="token punctuation">.</span>AF_UNIX<span class="token punctuation">,</span> sockType<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 绑定到路径</span></span>
<span class="line">    addr <span class="token operator">:=</span> <span class="token operator">&amp;</span>syscall<span class="token punctuation">.</span>SockaddrUnix<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> path<span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> addr<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span>fd<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 如果是监听套接字，开始监听</span></span>
<span class="line">    <span class="token keyword">if</span> sockType <span class="token operator">==</span> syscall<span class="token punctuation">.</span>SOCK_STREAM <span class="token punctuation">{</span></span>
<span class="line">        syscall<span class="token punctuation">.</span><span class="token function">Listen</span><span class="token punctuation">(</span>fd<span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> fd<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-增量迁移和优化" tabindex="-1"><a class="header-anchor" href="#_6-增量迁移和优化"><span>6. 增量迁移和优化</span></a></h2><h3 id="_6-1-预转储-pre-dump-机制" tabindex="-1"><a class="header-anchor" href="#_6-1-预转储-pre-dump-机制"><span>6.1 预转储(Pre-dump)机制</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 预转储实现迭代迁移</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">performPreDump</span><span class="token punctuation">(</span>c <span class="token operator">*</span>Container<span class="token punctuation">,</span> opts <span class="token operator">*</span>CriuOpts<span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 启用内存跟踪</span></span>
<span class="line">    opts<span class="token punctuation">.</span>PreDump <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    opts<span class="token punctuation">.</span>TrackMem <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 第一次预转储 - 转储大部分内存</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 可以执行多次预转储，每次只转储脏页</span></span>
<span class="line">    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> opts<span class="token punctuation">.</span>PreDumpIterations<span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 设置父映像路径</span></span>
<span class="line">        opts<span class="token punctuation">.</span>ParentImage <span class="token operator">=</span> opts<span class="token punctuation">.</span>ImagesDirectory</span>
<span class="line">        opts<span class="token punctuation">.</span>ImagesDirectory <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%s-%d&quot;</span><span class="token punctuation">,</span> opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 执行增量转储</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> err</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 检查脏页数量</span></span>
<span class="line">        stats <span class="token operator">:=</span> <span class="token function">getCriuStats</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> stats<span class="token punctuation">.</span>DirtyPages <span class="token operator">&lt;</span> opts<span class="token punctuation">.</span>DirtyPageThreshold <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">break</span> <span class="token comment">// 脏页足够少，可以执行最终转储</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 最终转储并停止容器</span></span>
<span class="line">    opts<span class="token punctuation">.</span>PreDump <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    opts<span class="token punctuation">.</span>LeaveRunning <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 内存页跟踪</span></span>
<span class="line"><span class="token keyword">type</span> MemoryTracker <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">    trackedPages <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint64</span><span class="token punctuation">]</span><span class="token builtin">bool</span></span>
<span class="line">    dirtyPages   <span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint64</span><span class="token punctuation">]</span><span class="token builtin">bool</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>mt <span class="token operator">*</span>MemoryTracker<span class="token punctuation">)</span> <span class="token function">trackMemoryChanges</span><span class="token punctuation">(</span>pid <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 使用软脏页机制跟踪内存变化</span></span>
<span class="line">    clearRefsPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/clear_refs&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 清除软脏页标记</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">WriteFile</span><span class="token punctuation">(</span>clearRefsPath<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token function">byte</span><span class="token punctuation">(</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 等待一段时间让进程运行</span></span>
<span class="line">    time<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">*</span> time<span class="token punctuation">.</span>Millisecond<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 读取脏页信息</span></span>
<span class="line">    pagemapPath <span class="token operator">:=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/proc/%d/pagemap&quot;</span><span class="token punctuation">,</span> pid<span class="token punctuation">)</span></span>
<span class="line">    pagemap<span class="token punctuation">,</span> err <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>pagemapPath<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">defer</span> pagemap<span class="token punctuation">.</span><span class="token function">Close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 解析pagemap找出脏页</span></span>
<span class="line">    buf <span class="token operator">:=</span> <span class="token function">make</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> addr <span class="token operator">:=</span> <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> addr <span class="token operator">+=</span> <span class="token number">4096</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> pagemap<span class="token punctuation">.</span><span class="token function">ReadAt</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token function">int64</span><span class="token punctuation">(</span>addr<span class="token operator">/</span><span class="token number">4096</span><span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        entry <span class="token operator">:=</span> binary<span class="token punctuation">.</span>LittleEndian<span class="token punctuation">.</span><span class="token function">Uint64</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> entry<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">55</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span> <span class="token comment">// 检查软脏位</span></span>
<span class="line">            mt<span class="token punctuation">.</span>dirtyPages<span class="token punctuation">[</span>addr<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-懒页面恢复" tabindex="-1"><a class="header-anchor" href="#_6-2-懒页面恢复"><span>6.2 懒页面恢复</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 懒页面服务器</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">startLazyPagesServer</span><span class="token punctuation">(</span>imagesDir <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token operator">*</span>LazyPagesServer<span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 创建userfaultfd</span></span>
<span class="line">    uffd<span class="token punctuation">,</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Syscall</span><span class="token punctuation">(</span>syscall<span class="token punctuation">.</span>SYS_USERFAULTFD<span class="token punctuation">,</span> </span>
<span class="line">        syscall<span class="token punctuation">.</span>O_CLOEXEC<span class="token operator">|</span>syscall<span class="token punctuation">.</span>O_NONBLOCK<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">nil</span><span class="token punctuation">,</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    server <span class="token operator">:=</span> <span class="token operator">&amp;</span>LazyPagesServer<span class="token punctuation">{</span></span>
<span class="line">        uffd<span class="token punctuation">:</span>       <span class="token function">int</span><span class="token punctuation">(</span>uffd<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        pageSize<span class="token punctuation">:</span>   <span class="token number">4096</span><span class="token punctuation">,</span></span>
<span class="line">        imagesDir<span class="token punctuation">:</span>  imagesDir<span class="token punctuation">,</span></span>
<span class="line">        pageCache<span class="token punctuation">:</span>  <span class="token function">make</span><span class="token punctuation">(</span><span class="token keyword">map</span><span class="token punctuation">[</span><span class="token builtin">uint64</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 启动页面故障处理循环</span></span>
<span class="line">    <span class="token keyword">go</span> server<span class="token punctuation">.</span><span class="token function">handlePageFaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> server<span class="token punctuation">,</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>LazyPagesServer<span class="token punctuation">)</span> <span class="token function">handlePageFaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 等待页面故障事件</span></span>
<span class="line">        msg <span class="token operator">:=</span> uffd_msg<span class="token punctuation">{</span><span class="token punctuation">}</span></span>
<span class="line">        <span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Read</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>uffd<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">[</span>unsafe<span class="token punctuation">.</span><span class="token function">Sizeof</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">continue</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> msg<span class="token punctuation">.</span>event <span class="token operator">!=</span> UFFD_EVENT_PAGEFAULT <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">continue</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 获取故障地址</span></span>
<span class="line">        addr <span class="token operator">:=</span> msg<span class="token punctuation">.</span>arg<span class="token punctuation">.</span>pagefault<span class="token punctuation">.</span>address</span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 检查缓存</span></span>
<span class="line">        <span class="token keyword">if</span> page<span class="token punctuation">,</span> ok <span class="token operator">:=</span> s<span class="token punctuation">.</span>pageCache<span class="token punctuation">[</span>addr<span class="token punctuation">]</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span></span>
<span class="line">            s<span class="token punctuation">.</span><span class="token function">copyPage</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> page<span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">continue</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 从映像文件加载页面</span></span>
<span class="line">        page <span class="token operator">:=</span> s<span class="token punctuation">.</span><span class="token function">loadPageFromImage</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> page <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            s<span class="token punctuation">.</span>pageCache<span class="token punctuation">[</span>addr<span class="token punctuation">]</span> <span class="token operator">=</span> page</span>
<span class="line">            s<span class="token punctuation">.</span><span class="token function">copyPage</span><span class="token punctuation">(</span>addr<span class="token punctuation">,</span> page<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token punctuation">(</span>s <span class="token operator">*</span>LazyPagesServer<span class="token punctuation">)</span> <span class="token function">copyPage</span><span class="token punctuation">(</span>addr <span class="token builtin">uint64</span><span class="token punctuation">,</span> data <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token builtin">byte</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin">copy</span> <span class="token operator">:=</span> uffdio_copy<span class="token punctuation">{</span></span>
<span class="line">        dst<span class="token punctuation">:</span>  addr<span class="token punctuation">,</span></span>
<span class="line">        src<span class="token punctuation">:</span>  <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token builtin">len</span><span class="token punctuation">:</span>  <span class="token function">uint64</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        mode<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token boolean">_</span><span class="token punctuation">,</span> <span class="token boolean">_</span><span class="token punctuation">,</span> errno <span class="token operator">:=</span> syscall<span class="token punctuation">.</span><span class="token function">Syscall</span><span class="token punctuation">(</span>syscall<span class="token punctuation">.</span>SYS_IOCTL<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>uffd<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        UFFDIO_COPY<span class="token punctuation">,</span> <span class="token function">uintptr</span><span class="token punctuation">(</span>unsafe<span class="token punctuation">.</span><span class="token function">Pointer</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token builtin">copy</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> errno <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> errno</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">return</span> <span class="token boolean">nil</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-实践练习" tabindex="-1"><a class="header-anchor" href="#_7-实践练习"><span>7. 实践练习</span></a></h2><h3 id="_7-1-基础检查点操作" tabindex="-1"><a class="header-anchor" href="#_7-1-基础检查点操作"><span>7.1 基础检查点操作</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 1. 启动一个容器</span></span>
<span class="line"><span class="token function">sudo</span> runc run <span class="token parameter variable">-d</span> mycontainer</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 创建检查点</span></span>
<span class="line"><span class="token function">sudo</span> runc checkpoint <span class="token punctuation">\\</span></span>
<span class="line">    --image-path /tmp/checkpoint <span class="token punctuation">\\</span></span>
<span class="line">    --leave-running <span class="token punctuation">\\</span></span>
<span class="line">    mycontainer</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 查看检查点文件</span></span>
<span class="line"><span class="token function">ls</span> <span class="token parameter variable">-la</span> /tmp/checkpoint/</span>
<span class="line"><span class="token comment"># 输出:</span></span>
<span class="line"><span class="token comment"># -rw-r--r-- 1 root root  1234 core-1.img</span></span>
<span class="line"><span class="token comment"># -rw-r--r-- 1 root root  5678 pagemap-1.img</span></span>
<span class="line"><span class="token comment"># -rw-r--r-- 1 root root   456 fdinfo-2.img</span></span>
<span class="line"><span class="token comment"># -rw-r--r-- 1 root root   789 descriptors.json</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 停止原容器</span></span>
<span class="line"><span class="token function">sudo</span> runc <span class="token function">kill</span> mycontainer</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 从检查点恢复</span></span>
<span class="line"><span class="token function">sudo</span> runc restore <span class="token punctuation">\\</span></span>
<span class="line">    --image-path /tmp/checkpoint <span class="token punctuation">\\</span></span>
<span class="line">    <span class="token parameter variable">--bundle</span> /path/to/bundle <span class="token punctuation">\\</span></span>
<span class="line">    restored-container</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-迭代迁移实验" tabindex="-1"><a class="header-anchor" href="#_7-2-迭代迁移实验"><span>7.2 迭代迁移实验</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 实现迭代迁移的示例代码</span></span>
<span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&quot;fmt&quot;</span></span>
<span class="line">    <span class="token string">&quot;github.com/opencontainers/runc/libcontainer&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">iterativeMigration</span><span class="token punctuation">(</span>container libcontainer<span class="token punctuation">.</span>Container<span class="token punctuation">,</span> targetHost <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token builtin">error</span> <span class="token punctuation">{</span></span>
<span class="line">    opts <span class="token operator">:=</span> <span class="token operator">&amp;</span>libcontainer<span class="token punctuation">.</span>CriuOpts<span class="token punctuation">{</span></span>
<span class="line">        ImagesDirectory<span class="token punctuation">:</span> <span class="token string">&quot;/tmp/migration&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        PreDump<span class="token punctuation">:</span>        <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        TrackMem<span class="token punctuation">:</span>       <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 阶段1: 初始预转储</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;执行初始预转储...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> container<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 传输初始映像到目标主机</span></span>
<span class="line">    <span class="token function">transferImages</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> targetHost<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 阶段2: 增量预转储</span></span>
<span class="line">    <span class="token keyword">for</span> i <span class="token operator">:=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">        opts<span class="token punctuation">.</span>ParentImage <span class="token operator">=</span> opts<span class="token punctuation">.</span>ImagesDirectory</span>
<span class="line">        opts<span class="token punctuation">.</span>ImagesDirectory <span class="token operator">=</span> fmt<span class="token punctuation">.</span><span class="token function">Sprintf</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/migration-%d&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;执行增量预转储 %d...\\n&quot;</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> err <span class="token operator">:=</span> container<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> err</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 传输增量数据</span></span>
<span class="line">        <span class="token function">transferImages</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> targetHost<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 检查脏页率</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token function">getDirtyPageRate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.1</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">break</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 阶段3: 最终转储并停止</span></span>
<span class="line">    opts<span class="token punctuation">.</span>PreDump <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    opts<span class="token punctuation">.</span>LeaveRunning <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;执行最终转储...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> err <span class="token operator">:=</span> container<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>opts<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> err</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 传输最终数据</span></span>
<span class="line">    <span class="token function">transferImages</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">,</span> targetHost<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 在目标主机恢复</span></span>
<span class="line">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;在目标主机恢复容器...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token function">restoreOnTarget</span><span class="token punctuation">(</span>targetHost<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-懒页面恢复测试" tabindex="-1"><a class="header-anchor" href="#_7-3-懒页面恢复测试"><span>7.3 懒页面恢复测试</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 测试懒页面恢复功能</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">testLazyRestore</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 1. 创建检查点时启用懒页面</span></span>
<span class="line">    checkpointOpts <span class="token operator">:=</span> <span class="token operator">&amp;</span>CriuOpts<span class="token punctuation">{</span></span>
<span class="line">        ImagesDirectory<span class="token punctuation">:</span> <span class="token string">&quot;/tmp/lazy-checkpoint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        LazyPages<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    container<span class="token punctuation">.</span><span class="token function">Checkpoint</span><span class="token punctuation">(</span>checkpointOpts<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 2. 启动懒页面服务器</span></span>
<span class="line">    pageServer <span class="token operator">:=</span> <span class="token operator">&amp;</span>CriuPageServerInfo<span class="token punctuation">{</span></span>
<span class="line">        Address<span class="token punctuation">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        Port<span class="token punctuation">:</span>    <span class="token number">9999</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">go</span> <span class="token function">startPageServer</span><span class="token punctuation">(</span>pageServer<span class="token punctuation">,</span> checkpointOpts<span class="token punctuation">.</span>ImagesDirectory<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 3. 恢复容器（懒加载模式）</span></span>
<span class="line">    restoreOpts <span class="token operator">:=</span> <span class="token operator">&amp;</span>CriuOpts<span class="token punctuation">{</span></span>
<span class="line">        ImagesDirectory<span class="token punctuation">:</span> <span class="token string">&quot;/tmp/lazy-checkpoint&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        LazyPages<span class="token punctuation">:</span>      <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">        PageServer<span class="token punctuation">:</span>     pageServer<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    container<span class="token punctuation">.</span><span class="token function">Restore</span><span class="token punctuation">(</span>process<span class="token punctuation">,</span> restoreOpts<span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 4. 监控页面故障和加载</span></span>
<span class="line">    <span class="token function">monitorLazyPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-故障排查" tabindex="-1"><a class="header-anchor" href="#_8-故障排查"><span>8. 故障排查</span></a></h2><h3 id="_8-1-常见问题" tabindex="-1"><a class="header-anchor" href="#_8-1-常见问题"><span>8.1 常见问题</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 1. CRIU版本检查</span></span>
<span class="line">criu <span class="token parameter variable">--version</span></span>
<span class="line"><span class="token comment"># 需要 &gt;= 3.0</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 2. 检查CRIU日志</span></span>
<span class="line"><span class="token function">cat</span> /tmp/checkpoint/criu.log <span class="token operator">|</span> <span class="token function">grep</span> Error</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 3. 验证内核支持</span></span>
<span class="line">criu check</span>
<span class="line"><span class="token comment"># 输出:</span></span>
<span class="line"><span class="token comment"># Looks good.</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 4. 检查必需的内核特性</span></span>
<span class="line"><span class="token function">cat</span> /proc/config.gz <span class="token operator">|</span> gunzip <span class="token operator">|</span> <span class="token function">grep</span> CONFIG_CHECKPOINT_RESTORE</span>
<span class="line"><span class="token comment"># CONFIG_CHECKPOINT_RESTORE=y</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 5. 文件描述符泄漏检查</span></span>
<span class="line"><span class="token function">ls</span> <span class="token parameter variable">-la</span> /proc/<span class="token variable"><span class="token variable">$(</span>pidof container<span class="token variable">)</span></span>/fd/</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-2-调试技巧" tabindex="-1"><a class="header-anchor" href="#_8-2-调试技巧"><span>8.2 调试技巧</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token comment">// 启用CRIU详细日志</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">enableCriuDebug</span><span class="token punctuation">(</span>opts <span class="token operator">*</span>CriuOpts<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    opts<span class="token punctuation">.</span>LogLevel <span class="token operator">=</span> <span class="token number">4</span>  <span class="token comment">// 最详细</span></span>
<span class="line">    opts<span class="token punctuation">.</span>LogFile <span class="token operator">=</span> <span class="token string">&quot;criu-debug.log&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 保留中间文件</span></span>
<span class="line">    opts<span class="token punctuation">.</span>WorkDirectory <span class="token operator">=</span> <span class="token string">&quot;/tmp/criu-work&quot;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 输出统计信息</span></span>
<span class="line">    opts<span class="token punctuation">.</span>PrintStats <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 分析CRIU错误</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">analyzeCriuError</span><span class="token punctuation">(</span>logPath <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    log<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> os<span class="token punctuation">.</span><span class="token function">ReadFile</span><span class="token punctuation">(</span>logPath<span class="token punctuation">)</span></span>
<span class="line">    lines <span class="token operator">:=</span> strings<span class="token punctuation">.</span><span class="token function">Split</span><span class="token punctuation">(</span><span class="token function">string</span><span class="token punctuation">(</span>log<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token operator">:=</span> <span class="token keyword">range</span> lines <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> strings<span class="token punctuation">.</span><span class="token function">Contains</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token string">&quot;Error&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 打印错误上下文</span></span>
<span class="line">            start <span class="token operator">:=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">            end <span class="token operator">:=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">len</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line">            </span>
<span class="line">            fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;错误上下文:&quot;</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">for</span> j <span class="token operator">:=</span> start<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> j<span class="token operator">++</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> j <span class="token operator">==</span> i <span class="token punctuation">{</span></span>
<span class="line">                    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt; %s\\n&quot;</span><span class="token punctuation">,</span> lines<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;    %s\\n&quot;</span><span class="token punctuation">,</span> lines<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>CRIU集成使runc具备了强大的容器状态管理能力，实现了:</p><ol><li><strong>完整状态保存</strong>: 进程树、内存、文件描述符、网络状态的完整序列化</li><li><strong>灵活恢复机制</strong>: 支持本地恢复、远程迁移、懒加载等多种恢复方式</li><li><strong>性能优化</strong>: 预转储、增量迁移、懒页面等技术最小化停机时间</li><li><strong>生产级可靠性</strong>: 完善的错误处理、日志记录和故障恢复机制</li></ol><p>通过掌握CRIU的原理和runc的集成实现，我们能够构建支持热迁移、故障恢复和负载均衡的高可用容器平台。</p>`,52))])}const m=l(r,[["render",k]]),b=JSON.parse('{"path":"/blogs/cloud-base/runc-deep-dive/07-CRIUjianchadianyuhuifu.html","title":"CRIU 检查点与恢复","lang":"en-US","frontmatter":{"categories":["cloud-base/runc-deep-dive"]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":2,"title":"1. CRIU基础原理","slug":"_1-criu基础原理","link":"#_1-criu基础原理","children":[{"level":3,"title":"1.1 核心概念","slug":"_1-1-核心概念","link":"#_1-1-核心概念","children":[]},{"level":3,"title":"1.2 CRIU工作原理","slug":"_1-2-criu工作原理","link":"#_1-2-criu工作原理","children":[]}]},{"level":2,"title":"2. runc中的CRIU集成","slug":"_2-runc中的criu集成","link":"#_2-runc中的criu集成","children":[{"level":3,"title":"2.1 架构设计","slug":"_2-1-架构设计","link":"#_2-1-架构设计","children":[]},{"level":3,"title":"2.2 检查点实现","slug":"_2-2-检查点实现","link":"#_2-2-检查点实现","children":[]},{"level":3,"title":"2.3 恢复实现","slug":"_2-3-恢复实现","link":"#_2-3-恢复实现","children":[]}]},{"level":2,"title":"3. 进程树和内存管理","slug":"_3-进程树和内存管理","link":"#_3-进程树和内存管理","children":[{"level":3,"title":"3.1 进程树序列化","slug":"_3-1-进程树序列化","link":"#_3-1-进程树序列化","children":[]},{"level":3,"title":"3.2 内存页面管理","slug":"_3-2-内存页面管理","link":"#_3-2-内存页面管理","children":[]}]},{"level":2,"title":"4. 网络状态保存与恢复","slug":"_4-网络状态保存与恢复","link":"#_4-网络状态保存与恢复","children":[{"level":3,"title":"4.1 网络接口管理","slug":"_4-1-网络接口管理","link":"#_4-1-网络接口管理","children":[]},{"level":3,"title":"4.2 虚拟网络设备","slug":"_4-2-虚拟网络设备","link":"#_4-2-虚拟网络设备","children":[]}]},{"level":2,"title":"5. 文件描述符管理","slug":"_5-文件描述符管理","link":"#_5-文件描述符管理","children":[{"level":3,"title":"5.1 文件描述符序列化","slug":"_5-1-文件描述符序列化","link":"#_5-1-文件描述符序列化","children":[]},{"level":3,"title":"5.2 管道和套接字处理","slug":"_5-2-管道和套接字处理","link":"#_5-2-管道和套接字处理","children":[]}]},{"level":2,"title":"6. 增量迁移和优化","slug":"_6-增量迁移和优化","link":"#_6-增量迁移和优化","children":[{"level":3,"title":"6.1 预转储(Pre-dump)机制","slug":"_6-1-预转储-pre-dump-机制","link":"#_6-1-预转储-pre-dump-机制","children":[]},{"level":3,"title":"6.2 懒页面恢复","slug":"_6-2-懒页面恢复","link":"#_6-2-懒页面恢复","children":[]}]},{"level":2,"title":"7. 实践练习","slug":"_7-实践练习","link":"#_7-实践练习","children":[{"level":3,"title":"7.1 基础检查点操作","slug":"_7-1-基础检查点操作","link":"#_7-1-基础检查点操作","children":[]},{"level":3,"title":"7.2 迭代迁移实验","slug":"_7-2-迭代迁移实验","link":"#_7-2-迭代迁移实验","children":[]},{"level":3,"title":"7.3 懒页面恢复测试","slug":"_7-3-懒页面恢复测试","link":"#_7-3-懒页面恢复测试","children":[]}]},{"level":2,"title":"8. 故障排查","slug":"_8-故障排查","link":"#_8-故障排查","children":[{"level":3,"title":"8.1 常见问题","slug":"_8-1-常见问题","link":"#_8-1-常见问题","children":[]},{"level":3,"title":"8.2 调试技巧","slug":"_8-2-调试技巧","link":"#_8-2-调试技巧","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1754503646000,"updatedTime":1754503646000,"contributors":[{"name":"hushengnian","email":"hushengnian@example.com","commits":1}]},"filePathRelative":"blogs/cloud-base/runc-deep-dive/07-CRIU检查点与恢复.md"}');export{m as comp,b as data};
