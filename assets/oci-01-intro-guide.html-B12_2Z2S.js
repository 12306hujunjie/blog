import{_ as p,c as d,a as s,d as r,e as l,b as i,w as e,r as o,o as u}from"./app-CmDAUNYP.js";const c={},m={href:"https://github.com/opencontainers/runc",target:"_blank",rel:"noopener noreferrer"},v={href:"https://containerd.io/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://cri-o.io/",target:"_blank",rel:"noopener noreferrer"};function h(g,n){const a=o("RouteLink"),t=o("ExternalLinkIcon");return u(),d("div",null,[n[36]||(n[36]=s("h1",{id:"oci-容器技术入门指南",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#oci-容器技术入门指南"},[s("span",null,"OCI 容器技术入门指南")])],-1)),s("blockquote",null,[s("p",null,[n[1]||(n[1]=s("strong",null,"系列导航：",-1)),n[2]||(n[2]=l()),i(a,{to:"/blogs/cloud-base/oci-series-index.html"},{default:e(()=>n[0]||(n[0]=[l("OCI 容器技术完全指南系列")])),_:1,__:[0]}),n[3]||(n[3]=l(" → 第一篇：基础入门")),n[4]||(n[4]=s("br",null,null,-1)),n[5]||(n[5]=s("strong",null,"规范版本：",-1)),n[6]||(n[6]=l(" OCI Runtime Spec v1.0.2, OCI Image Spec v1.0.2, OCI Distribution Spec v1.0.1")),n[7]||(n[7]=s("br",null,null,-1)),n[8]||(n[8]=s("strong",null,"最后更新：",-1)),n[9]||(n[9]=l(" 2024-07-10"))])]),n[37]||(n[37]=r('<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>Open Container Initiative (OCI) 是由 Docker、CoreOS、Red Hat、Intel、IBM 等公司在 2015 年成立的开放容器倡议组织，旨在为容器技术制定开放的行业标准。本文将为您介绍 OCI 的基础概念、发展历程和核心规范，帮助您快速入门容器技术标准化领域。</p><h2 id="什么是-oci" tabindex="-1"><a class="header-anchor" href="#什么是-oci"><span>什么是 OCI？</span></a></h2><h3 id="发展背景" tabindex="-1"><a class="header-anchor" href="#发展背景"><span>发展背景</span></a></h3><p>在容器技术快速发展的早期，不同的容器实现之间存在兼容性问题：</p><ul><li>Docker 作为容器技术的先驱，制定了自己的容器格式和运行时接口</li><li>CoreOS 推出了 rkt 容器引擎，采用了不同的技术路线</li><li>其他厂商也在开发各自的容器解决方案</li></ul><p>这种碎片化的现状导致了：</p><ul><li>容器镜像在不同平台间难以互操作</li><li>开发者需要为不同的容器运行时适配应用</li><li>企业用户面临供应商锁定的风险</li></ul><h3 id="oci-的使命" tabindex="-1"><a class="header-anchor" href="#oci-的使命"><span>OCI 的使命</span></a></h3><p>OCI 的成立旨在解决容器生态系统的标准化问题：</p><p><strong>核心目标：</strong></p><ul><li>制定开放的容器格式和运行时标准</li><li>确保容器的可移植性和互操作性</li><li>避免供应商锁定，促进生态发展</li><li>推动容器技术的标准化和成熟化</li></ul><p><strong>设计原则：</strong></p><ul><li><strong>开放性</strong> - 基于开源协作，透明的标准制定过程</li><li><strong>极简主义</strong> - 专注核心功能，避免过度复杂化</li><li><strong>向后兼容</strong> - 确保现有容器生态的平滑迁移</li><li><strong>可扩展性</strong> - 为未来的技术发展预留空间</li></ul><h2 id="oci-三大核心规范" tabindex="-1"><a class="header-anchor" href="#oci-三大核心规范"><span>OCI 三大核心规范</span></a></h2><p>OCI 规范体系由三个相互关联的核心组件构成：</p><h3 id="_1-runtime-specification-运行时规范" tabindex="-1"><a class="header-anchor" href="#_1-runtime-specification-运行时规范"><span>1. Runtime Specification（运行时规范）</span></a></h3><p><strong>定义：</strong> 容器运行时的标准化接口和行为规范</p><p><strong>核心内容：</strong></p><ul><li>容器生命周期管理（创建、启动、暂停、恢复、删除）</li><li>容器配置格式（JSON 配置文件）</li><li>容器状态管理</li><li>Hook 系统（生命周期回调）</li></ul><p><strong>主要实现：</strong></p>',21)),s("ul",null,[s("li",null,[s("a",m,[n[10]||(n[10]=l("runc")),i(t)]),n[11]||(n[11]=l(" - OCI 参考实现"))]),s("li",null,[s("a",v,[n[12]||(n[12]=l("containerd")),i(t)]),n[13]||(n[13]=l(" - 工业级容器运行时"))]),s("li",null,[s("a",b,[n[14]||(n[14]=l("CRI-O")),i(t)]),n[15]||(n[15]=l(" - Kubernetes 原生运行时"))])]),n[38]||(n[38]=r(`<h3 id="_2-image-specification-镜像规范" tabindex="-1"><a class="header-anchor" href="#_2-image-specification-镜像规范"><span>2. Image Specification（镜像规范）</span></a></h3><p><strong>定义：</strong> 容器镜像的标准格式和元数据规范</p><p><strong>核心内容：</strong></p><ul><li>镜像清单（Manifest）格式</li><li>镜像配置（Config）结构</li><li>层（Layer）格式和组织</li><li>多架构支持</li></ul><p><strong>关键特性：</strong></p><ul><li>内容寻址存储（基于哈希值）</li><li>层级化文件系统</li><li>多平台镜像支持</li><li>镜像签名和验证</li></ul><h3 id="_3-distribution-specification-分发规范" tabindex="-1"><a class="header-anchor" href="#_3-distribution-specification-分发规范"><span>3. Distribution Specification（分发规范）</span></a></h3><p><strong>定义：</strong> 容器镜像分发和存储的 API 标准</p><p><strong>核心内容：</strong></p><ul><li>注册表 API 接口</li><li>认证和授权机制</li><li>内容发现和检索</li><li>推送和拉取协议</li></ul><p><strong>支持特性：</strong></p><ul><li>RESTful API 设计</li><li>内容验证和完整性检查</li><li>断点续传和并发下载</li><li>工件（Artifact）支持</li></ul><h2 id="oci-技术架构" tabindex="-1"><a class="header-anchor" href="#oci-技术架构"><span>OCI 技术架构</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">┌─────────────────────────────────────────────────────────────┐</span>
<span class="line">│                    OCI 生态系统                              │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  应用层：Docker、Podman、containerd、CRI-O...               │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────┐ │</span>
<span class="line">│  │ Distribution    │ │ Image           │ │ Runtime         │ │</span>
<span class="line">│  │ Specification   │ │ Specification   │ │ Specification   │ │</span>
<span class="line">│  │                 │ │                 │ │                 │ │</span>
<span class="line">│  │ • 注册表 API    │ │ • 镜像格式      │ │ • 运行时接口    │ │</span>
<span class="line">│  │ • 认证授权      │ │ • 层级结构      │ │ • 生命周期      │ │</span>
<span class="line">│  │ • 内容分发      │ │ • 多架构支持    │ │ • 配置格式      │ │</span>
<span class="line">│  └─────────────────┘ └─────────────────┘ └─────────────────┘ │</span>
<span class="line">├─────────────────────────────────────────────────────────────┤</span>
<span class="line">│  基础设施：Linux 内核、网络、存储...                         │</span>
<span class="line">└─────────────────────────────────────────────────────────────┘</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="规范间的关系" tabindex="-1"><a class="header-anchor" href="#规范间的关系"><span>规范间的关系</span></a></h3><ol><li><strong>Image Spec</strong> 定义了镜像的格式和内容</li><li><strong>Distribution Spec</strong> 规定了镜像的存储和分发方式</li><li><strong>Runtime Spec</strong> 描述了如何使用镜像创建和运行容器</li></ol><h2 id="容器技术基础概念" tabindex="-1"><a class="header-anchor" href="#容器技术基础概念"><span>容器技术基础概念</span></a></h2><h3 id="容器-vs-虚拟机" tabindex="-1"><a class="header-anchor" href="#容器-vs-虚拟机"><span>容器 vs 虚拟机</span></a></h3><table><thead><tr><th>特性</th><th>容器</th><th>虚拟机</th></tr></thead><tbody><tr><td>隔离级别</td><td>进程级隔离</td><td>硬件级隔离</td></tr><tr><td>资源开销</td><td>低（共享内核）</td><td>高（独立内核）</td></tr><tr><td>启动速度</td><td>秒级</td><td>分钟级</td></tr><tr><td>密度</td><td>高（单主机上千容器）</td><td>低（单主机数十虚拟机）</td></tr><tr><td>安全性</td><td>较低</td><td>较高</td></tr><tr><td>可移植性</td><td>优秀</td><td>良好</td></tr></tbody></table><h3 id="核心技术组件" tabindex="-1"><a class="header-anchor" href="#核心技术组件"><span>核心技术组件</span></a></h3><h4 id="_1-linux-内核特性" tabindex="-1"><a class="header-anchor" href="#_1-linux-内核特性"><span>1. Linux 内核特性</span></a></h4><p><strong>命名空间（Namespaces）：</strong> 提供资源隔离</p><ul><li>PID：进程隔离</li><li>Network：网络隔离</li><li>Mount：文件系统隔离</li><li>IPC：进程间通信隔离</li><li>UTS：主机名隔离</li><li>User：用户隔离</li></ul><p><strong>控制组（Cgroups）：</strong> 资源限制和分配</p><ul><li>CPU 使用限制</li><li>内存使用限制</li><li>I/O 带宽限制</li><li>设备访问控制</li></ul><h4 id="_2-联合文件系统" tabindex="-1"><a class="header-anchor" href="#_2-联合文件系统"><span>2. 联合文件系统</span></a></h4><p><strong>作用：</strong> 将多个文件系统层组合为单一视图</p><ul><li>镜像层的高效存储</li><li>写时复制（Copy-on-Write）</li><li>层级化构建和缓存</li></ul><p><strong>常见实现：</strong></p><ul><li>OverlayFS</li><li>AUFS</li><li>Btrfs</li><li>Device Mapper</li></ul><h2 id="开发环境搭建" tabindex="-1"><a class="header-anchor" href="#开发环境搭建"><span>开发环境搭建</span></a></h2><h3 id="基础工具安装" tabindex="-1"><a class="header-anchor" href="#基础工具安装"><span>基础工具安装</span></a></h3><h4 id="_1-安装-docker" tabindex="-1"><a class="header-anchor" href="#_1-安装-docker"><span>1. 安装 Docker</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># Ubuntu/Debian</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-fsSL</span> https://get.docker.com <span class="token parameter variable">-o</span> get-docker.sh</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">sh</span> get-docker.sh</span>
<span class="line"></span>
<span class="line"><span class="token comment"># CentOS/RHEL</span></span>
<span class="line"><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils</span>
<span class="line"><span class="token function">sudo</span> yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span>
<span class="line"><span class="token function">sudo</span> yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 启动 Docker 服务</span></span>
<span class="line"><span class="token function">sudo</span> systemctl start <span class="token function">docker</span></span>
<span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-安装-oci-工具" tabindex="-1"><a class="header-anchor" href="#_2-安装-oci-工具"><span>2. 安装 OCI 工具</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 安装 runc</span></span>
<span class="line"><span class="token function">wget</span> https://github.com/opencontainers/runc/releases/latest/download/runc.amd64</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">install</span> <span class="token parameter variable">-m</span> <span class="token number">755</span> runc.amd64 /usr/local/bin/runc</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 oci-runtime-tool</span></span>
<span class="line">go <span class="token function">install</span> github.com/opencontainers/runtime-tools/cmd/oci-runtime-tool@latest</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 umoci</span></span>
<span class="line"><span class="token function">wget</span> https://github.com/opencontainers/umoci/releases/latest/download/umoci.amd64</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">install</span> <span class="token parameter variable">-m</span> <span class="token number">755</span> umoci.amd64 /usr/local/bin/umoci</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-验证安装" tabindex="-1"><a class="header-anchor" href="#_3-验证安装"><span>3. 验证安装</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 检查 Docker 版本</span></span>
<span class="line"><span class="token function">docker</span> <span class="token parameter variable">--version</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查 runc 版本</span></span>
<span class="line">runc <span class="token parameter variable">--version</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查 OCI 规范支持</span></span>
<span class="line"><span class="token function">docker</span> info <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">&quot;OCI&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="第一个-oci-容器" tabindex="-1"><a class="header-anchor" href="#第一个-oci-容器"><span>第一个 OCI 容器</span></a></h3><h4 id="_1-创建容器配置" tabindex="-1"><a class="header-anchor" href="#_1-创建容器配置"><span>1. 创建容器配置</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 创建工作目录</span></span>
<span class="line"><span class="token function">mkdir</span> mycontainer <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> mycontainer</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建根文件系统</span></span>
<span class="line"><span class="token function">mkdir</span> rootfs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建基础目录结构</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">debootstrap</span> bionic rootfs http://archive.ubuntu.com/ubuntu/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 生成 OCI 配置</span></span>
<span class="line">oci-runtime-tool generate <span class="token parameter variable">--output</span> config.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-运行容器" tabindex="-1"><a class="header-anchor" href="#_2-运行容器"><span>2. 运行容器</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 使用 runc 运行容器</span></span>
<span class="line"><span class="token function">sudo</span> runc run mycontainer</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 在另一个终端查看容器状态</span></span>
<span class="line"><span class="token function">sudo</span> runc list</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="学习路径建议" tabindex="-1"><a class="header-anchor" href="#学习路径建议"><span>学习路径建议</span></a></h2><h3 id="初学者路径" tabindex="-1"><a class="header-anchor" href="#初学者路径"><span>初学者路径</span></a></h3><ol><li><p><strong>理解基础概念</strong></p><ul><li>容器 vs 虚拟机</li><li>Linux 命名空间和 Cgroups</li><li>镜像和容器的关系</li></ul></li><li><p><strong>实践基础操作</strong></p><ul><li>Docker 基础命令</li><li>镜像构建和管理</li><li>容器运行和调试</li></ul></li><li><p><strong>深入 OCI 规范</strong></p><ul><li>阅读 Runtime Specification</li><li>学习镜像格式规范</li><li>了解分发协议</li></ul></li></ol><h3 id="开发者路径" tabindex="-1"><a class="header-anchor" href="#开发者路径"><span>开发者路径</span></a></h3>`,47)),s("ol",null,[n[22]||(n[22]=s("li",null,[s("p",null,[s("strong",null,"掌握容器开发")]),s("ul",null,[s("li",null,"Dockerfile 最佳实践"),s("li",null,"多阶段构建"),s("li",null,"镜像优化技巧")])],-1)),s("li",null,[n[21]||(n[21]=s("p",null,[s("strong",null,"学习运行时开发")],-1)),s("ul",null,[n[19]||(n[19]=s("li",null,"runc 源码分析",-1)),n[20]||(n[20]=s("li",null,"自定义运行时开发",-1)),s("li",null,[n[17]||(n[17]=l("Hook 系统使用（详见 ")),i(a,{to:"/blogs/cloud-base/oci-08-hooks-deep-dive.html"},{default:e(()=>n[16]||(n[16]=[l("OCI Hook 系统深度解析")])),_:1,__:[16]}),n[18]||(n[18]=l("）"))])])]),n[23]||(n[23]=s("li",null,[s("p",null,[s("strong",null,"生态系统集成")]),s("ul",null,[s("li",null,"Kubernetes 集成"),s("li",null,"CI/CD 流水线"),s("li",null,"监控和日志管理")])],-1))]),n[39]||(n[39]=s("h2",{id:"下一步学习",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#下一步学习"},[s("span",null,"下一步学习")])],-1)),n[40]||(n[40]=s("p",null,"完成本入门指南后，建议按以下顺序学习后续文章：",-1)),s("ol",null,[s("li",null,[s("strong",null,[i(a,{to:"/blogs/cloud-base/oci-02-runtime-spec.html"},{default:e(()=>n[24]||(n[24]=[l("OCI Runtime 规范详解")])),_:1,__:[24]})]),n[25]||(n[25]=l(" - 深入理解容器运行时配置"))]),s("li",null,[s("strong",null,[i(a,{to:"/blogs/cloud-base/oci-05-security-guide.html"},{default:e(()=>n[26]||(n[26]=[l("OCI 容器安全配置实战")])),_:1,__:[26]})]),n[27]||(n[27]=l(" - 学习安全配置最佳实践"))]),s("li",null,[s("strong",null,[i(a,{to:"/blogs/cloud-base/oci-07-production-guide.html"},{default:e(()=>n[28]||(n[28]=[l("OCI 容器生产环境实践案例")])),_:1,__:[28]})]),n[29]||(n[29]=l(" - 了解生产环境应用"))])]),n[41]||(n[41]=s("h2",{id:"总结",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#总结"},[s("span",null,"总结")])],-1)),n[42]||(n[42]=s("p",null,"OCI 规范为容器技术提供了标准化的基础，通过三大核心规范确保了容器的可移植性和互操作性。理解 OCI 规范不仅有助于选择合适的容器技术栈，更能帮助您构建更加稳定和可维护的容器化应用。",-1)),n[43]||(n[43]=s("p",null,[s("strong",null,"关键要点：")],-1)),n[44]||(n[44]=s("ul",null,[s("li",null,"OCI 解决了容器生态碎片化问题"),s("li",null,"三大规范涵盖了容器技术的核心环节"),s("li",null,"标准化带来了更好的可移植性和生态发展"),s("li",null,"掌握 OCI 规范是深入容器技术的基础")],-1)),n[45]||(n[45]=s("hr",null,null,-1)),s("p",null,[n[31]||(n[31]=s("strong",null,"下一篇：",-1)),n[32]||(n[32]=l()),i(a,{to:"/blogs/cloud-base/oci-02-runtime-spec.html"},{default:e(()=>n[30]||(n[30]=[l("OCI Runtime 规范详解 - Linux 容器配置完全指南")])),_:1,__:[30]})]),s("p",null,[n[34]||(n[34]=s("strong",null,"返回：",-1)),n[35]||(n[35]=l()),i(a,{to:"/blogs/cloud-base/oci-series-index.html"},{default:e(()=>n[33]||(n[33]=[l("OCI 容器技术完全指南系列")])),_:1,__:[33]})])])}const f=p(c,[["render",h]]),I=JSON.parse('{"path":"/blogs/cloud-base/oci-01-intro-guide.html","title":"OCI 容器技术入门指南","lang":"en-US","frontmatter":{"categories":["cloud-base"]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"什么是 OCI？","slug":"什么是-oci","link":"#什么是-oci","children":[{"level":3,"title":"发展背景","slug":"发展背景","link":"#发展背景","children":[]},{"level":3,"title":"OCI 的使命","slug":"oci-的使命","link":"#oci-的使命","children":[]}]},{"level":2,"title":"OCI 三大核心规范","slug":"oci-三大核心规范","link":"#oci-三大核心规范","children":[{"level":3,"title":"1. Runtime Specification（运行时规范）","slug":"_1-runtime-specification-运行时规范","link":"#_1-runtime-specification-运行时规范","children":[]},{"level":3,"title":"2. Image Specification（镜像规范）","slug":"_2-image-specification-镜像规范","link":"#_2-image-specification-镜像规范","children":[]},{"level":3,"title":"3. Distribution Specification（分发规范）","slug":"_3-distribution-specification-分发规范","link":"#_3-distribution-specification-分发规范","children":[]}]},{"level":2,"title":"OCI 技术架构","slug":"oci-技术架构","link":"#oci-技术架构","children":[{"level":3,"title":"规范间的关系","slug":"规范间的关系","link":"#规范间的关系","children":[]}]},{"level":2,"title":"容器技术基础概念","slug":"容器技术基础概念","link":"#容器技术基础概念","children":[{"level":3,"title":"容器 vs 虚拟机","slug":"容器-vs-虚拟机","link":"#容器-vs-虚拟机","children":[]},{"level":3,"title":"核心技术组件","slug":"核心技术组件","link":"#核心技术组件","children":[]}]},{"level":2,"title":"开发环境搭建","slug":"开发环境搭建","link":"#开发环境搭建","children":[{"level":3,"title":"基础工具安装","slug":"基础工具安装","link":"#基础工具安装","children":[]},{"level":3,"title":"第一个 OCI 容器","slug":"第一个-oci-容器","link":"#第一个-oci-容器","children":[]}]},{"level":2,"title":"学习路径建议","slug":"学习路径建议","link":"#学习路径建议","children":[{"level":3,"title":"初学者路径","slug":"初学者路径","link":"#初学者路径","children":[]},{"level":3,"title":"开发者路径","slug":"开发者路径","link":"#开发者路径","children":[]}]},{"level":2,"title":"下一步学习","slug":"下一步学习","link":"#下一步学习","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1752166557000,"updatedTime":1752166557000,"contributors":[{"name":"户盛年","email":"hushengnian@hushengniandeMacBook-Air.local","commits":1}]},"filePathRelative":"blogs/cloud-base/oci-01-intro-guide.md"}');export{f as comp,I as data};
