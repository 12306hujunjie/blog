import{_ as d,o,c as i,e as c}from"./app.05a3b675.js";const t={};function l(r,e){return o(),i("div",null,e[0]||(e[0]=[c(`<h3 id="\u7F29\u8FDB" tabindex="-1"><a class="header-anchor" href="#\u7F29\u8FDB" aria-hidden="true">#</a> \u7F29\u8FDB</h3><hr><ul><li>\u4E0D\u76F4\u63A5\u4F7F\u7528 <code>tab</code> \u7F29\u8FDB</li><li>\u4F7F\u7528\u4EFB\u4F55\u7F16\u8F91\u5668\u5199 <code>Python</code>\uFF0C\u8BF7\u628A\u4E00\u4E2A <code>tab</code> \u5C55\u5F00\u4E3A 4 \u4E2A\u7A7A\u683C</li><li>\u4E0D\u8981\u6DF7\u7528<code>tab</code>\u548C\u7A7A\u683C\uFF0C\u5426\u5219\u5BB9\u6613\u51FA\u73B0 <code>IndentationError</code></li></ul><hr><h3 id="\u7A7A\u683C" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u683C" aria-hidden="true">#</a> \u7A7A\u683C</h3><ul><li>\u5728 <code>list</code>, <code>dict</code>, <code>tuple</code>, <code>set</code>, \u53C2\u6570\u5217\u8868\u7684 , \u540E\u9762\u52A0\u4E00\u4E2A\u7A7A\u683C</li><li>\u5728 <code>dict</code> \u7684 : \u540E\u9762\u52A0\u4E00\u4E2A\u7A7A\u683C</li><li>\u5728\u6CE8\u91CA\u7B26\u53F7 # \u540E\u9762\u52A0\u4E00\u4E2A\u7A7A\u683C\uFF0C\u4F46\u662F <code>#!/usr/bin/python</code> \u7684 <code>#</code> \u540E\u4E0D\u80FD\u6709\u7A7A\u683C</li><li>\u64CD\u4F5C\u7B26\u4E24\u7AEF\u52A0\u4E00\u4E2A\u7A7A\u683C\uFF0C\u5982 <code>+, -, *, /, |, &amp;, =</code></li><li>\u63A5\u4E0A\u4E00\u6761\uFF0C\u5728\u53C2\u6570\u5217\u8868\u91CC\u7684 = \u4E24\u7AEF\u4E0D\u9700\u8981\u7A7A\u683C</li><li>\u62EC\u53F7\uFF08<code>(), {}, []</code>\uFF09\u5185\u7684\u4E24\u7AEF\u4E0D\u9700\u8981\u7A7A\u683C</li></ul><hr><h3 id="\u7A7A\u884C" tabindex="-1"><a class="header-anchor" href="#\u7A7A\u884C" aria-hidden="true">#</a> \u7A7A\u884C</h3><ul><li><code>function</code> \u548C <code>class</code> \u9876\u4E0A\u4E24\u4E2A\u7A7A\u884C</li><li><code>class</code> \u7684 <code>method</code> \u4E4B\u95F4\u4E00\u4E2A\u7A7A\u884C</li><li>\u51FD\u6570\u5185\u903B\u8F91\u65E0\u5173\u7684\u6BB5\u843D\u4E4B\u95F4\u7A7A\u4E00\u884C\uFF0C\u4E0D\u8981\u8FC7\u5EA6\u4F7F\u7528\u7A7A\u884C</li><li>\u4E0D\u8981\u628A\u591A\u4E2A\u8BED\u53E5\u5199\u5728\u4E00\u884C\uFF0C\u7136\u540E\u7528 ; \u9694\u5F00</li><li><code>if/for/while</code> \u8BED\u53E5\u4E2D\uFF0C\u5373\u4F7F\u6267\u884C\u8BED\u53E5\u53EA\u6709\u4E00\u53E5\uFF0C\u4E5F\u8981\u53E6\u8D77\u4E00\u884C</li></ul><hr><h3 id="\u6362\u884C" tabindex="-1"><a class="header-anchor" href="#\u6362\u884C" aria-hidden="true">#</a> \u6362\u884C</h3><ul><li>\u6BCF\u4E00\u884C\u4EE3\u7801\u63A7\u5236\u5728 80 \u5B57\u7B26\u4EE5\u5185</li><li>\u4F7F\u7528 \\ \u6216 () \u63A7\u5236\u6362\u884C</li></ul><h3 id="\u547D\u540D" tabindex="-1"><a class="header-anchor" href="#\u547D\u540D" aria-hidden="true">#</a> \u547D\u540D</h3><p>\u4F7F\u7528\u6709\u610F\u4E49\u7684\uFF0C\u82F1\u6587\u5355\u8BCD\u6216\u8BCD\u7EC4\uFF0C\u4E0D\u8981\u4F7F\u7528\u6C49\u8BED\u62FC\u97F3 package/module \u540D\u4E2D\u4E0D\u8981\u51FA\u73B0 - \u5404\u79CD\u7C7B\u578B\u7684\u547D\u540D\u89C4\u8303\uFF1A</p><table><thead><tr><th>Type</th><th>Public</th><th>Internal</th></tr></thead><tbody><tr><td>Modules</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Packages</td><td>lower_with_under</td><td></td></tr><tr><td>Classes CapWords</td><td>_CapWords</td><td></td></tr><tr><td>Exceptions</td><td>CapWords</td><td></td></tr><tr><td>Functions</td><td>lower_with_under()</td><td>_lower_with_under()</td></tr><tr><td>Global/Class Constants</td><td>CAPS_WITH_UNDER</td><td>_CAPS_WITH_UNDER</td></tr><tr><td>Global/Class Variables</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Instance Variables</td><td>lower_with_under</td><td>_lower_with_under (protected) or __lower_with_under (private)</td></tr><tr><td>Method Names</td><td>lower_with_under()</td><td>_lower_with_under() (protected) or __lower_with_under() (private)</td></tr><tr><td>Function/Method Parameters</td><td>lower_with_under</td><td></td></tr><tr><td>Local Variables</td><td>lower_with_under</td><td></td></tr></tbody></table><hr><h3 id="pycharm\u5F00\u53D1\u5E38\u7528\u5FEB\u6377\u952E" tabindex="-1"><a class="header-anchor" href="#pycharm\u5F00\u53D1\u5E38\u7528\u5FEB\u6377\u952E" aria-hidden="true">#</a> Pycharm\u5F00\u53D1\u5E38\u7528\u5FEB\u6377\u952E</h3><ul><li><code>ctrl+alt+L</code>\u683C\u5F0F\u5316\u4EE3\u7801\uFF0C\u4F7F\u7528<code>ctrl+alt+O</code>\u683C\u5F0F\u5316\u5BFC\u5165</li><li><code>shift+F6</code>\u91CD\u547D\u540D\u65B9\u6CD5\u6216\u8005\u53D8\u91CF</li><li><code>ctrl+shift +/-</code>\u5C55\u5F00/\u6298\u53E0\u5168\u90E8\u4EE3\u7801\u5757</li><li><code>Alt+Enter</code>\u81EA\u52A8\u4FEE\u6B63\u5BFC\u5165</li></ul><hr><h3 id="\u5BFC\u5305" tabindex="-1"><a class="header-anchor" href="#\u5BFC\u5305" aria-hidden="true">#</a> \u5BFC\u5305</h3><ul><li><code>import</code> \u7684\u6B21\u5E8F\uFF0C\u5148 <code>import Python \u5185\u7F6E\u6A21\u5757</code>\uFF0C\u518D <code>import \u7B2C\u4E09\u65B9\u6A21\u5757</code>\uFF0C\u6700\u540E <code>import \u81EA\u5DF1\u5F00\u53D1\u7684\u9879\u76EE\u4E2D\u7684\u5176\u5B83\u6A21\u5757</code>\uFF1B\u8FD9\u51E0\u79CD\u6A21\u5757\u7528\u7A7A\u884C\u5206\u9694\u5F00\u6765\u3002</li><li>\u6BCF\u4E2A<code>import</code>\u5E94\u8BE5\u72EC\u5360\u4E00\u884C\u3002</li><li>\u4E0D\u8981\u4F7F\u7528 <code>from module import *</code>\uFF0C\u9664\u975E\u662F <code>import</code> \u5E38\u91CF\u5B9A\u4E49\u6A21\u5757\u6216\u5176\u5B83\u4F60\u786E\u4FDD\u4E0D\u4F1A\u51FA\u73B0\u547D\u540D\u7A7A\u95F4\u51B2\u7A81\u7684\u6A21\u5757\u3002</li></ul><hr><h3 id="\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u5F02\u5E38" aria-hidden="true">#</a> \u5F02\u5E38</h3><ul><li>\u50CF\u8FD9\u6837\u89E6\u53D1\u5F02\u5E38: <code>raise MyException(&quot;Error message&quot;)</code> \u6216\u8005 <code>raise MyException</code> . \u4E0D\u8981\u4F7F\u7528\u4E24\u4E2A\u53C2\u6570\u7684\u5F62\u5F0F( <code>raise MyException, &quot;Error message&quot;</code> )\u6216\u8005\u8FC7\u65F6\u7684\u5B57\u7B26\u4E32\u5F02\u5E38( <code>raise &quot;Error message&quot;</code> )</li><li>\u6A21\u5757\u6216\u5305\u5E94\u8BE5\u5B9A\u4E49\u81EA\u5DF1\u7684\u7279\u5B9A\u57DF\u7684\u5F02\u5E38\u57FA\u7C7B, \u8FD9\u4E2A\u57FA\u7C7B\u5E94\u8BE5\u4ECE\u5185\u5EFA\u7684<code>Exception</code>\u7C7B\u7EE7\u627F. \u6A21\u5757\u7684\u5F02\u5E38\u57FA\u7C7B\u5E94\u8BE5\u53EB\u505A\u201D<code>Error</code>\u201D.</li><li>\u6C38\u8FDC\u4E0D\u8981\u4F7F\u7528 <code>except</code>: \u8BED\u53E5\u6765\u6355\u83B7\u6240\u6709\u5F02\u5E38, \u4E5F\u4E0D\u8981\u6355\u83B7 <code>Exception</code> \u6216\u8005 <code>StandardError</code> , \u9664\u975E\u4F60\u6253\u7B97\u91CD\u65B0\u89E6\u53D1\u8BE5\u5F02\u5E38, \u6216\u8005\u4F60\u5DF2\u7ECF\u5728\u5F53\u524D\u7EBF\u7A0B\u7684\u6700\u5916\u5C42(\u8BB0\u5F97\u8FD8\u662F\u8981\u6253\u5370\u4E00\u6761\u9519\u8BEF\u6D88\u606F). \u5728\u5F02\u5E38\u8FD9\u65B9\u9762, Python\u975E\u5E38\u5BBD\u5BB9, <code>except:</code> \u771F\u7684\u4F1A\u6355\u83B7\u5305\u62ECPython\u8BED\u6CD5\u9519\u8BEF\u5728\u5185\u7684\u4EFB\u4F55\u9519\u8BEF. \u4F7F\u7528 <code>except:</code> \u5F88\u5BB9\u6613\u9690\u85CF\u771F\u6B63\u7684bug.</li><li>\u5C3D\u91CF\u51CF\u5C11<code>try/except</code>\u5757\u4E2D\u7684\u4EE3\u7801\u91CF. <code>try</code>\u5757\u7684\u4F53\u79EF\u8D8A\u5927, \u671F\u671B\u4E4B\u5916\u7684\u5F02\u5E38\u5C31\u8D8A\u5BB9\u6613\u88AB\u89E6\u53D1. \u8FD9\u79CD\u60C5\u51B5\u4E0B, <code>try/except</code>\u5757\u5C06\u9690\u85CF\u771F\u6B63\u7684\u9519\u8BEF.</li><li>\u4F7F\u7528<code>finally</code>\u5B50\u53E5\u6765\u6267\u884C\u90A3\u4E9B\u65E0\u8BBA<code>try</code>\u5757\u4E2D\u6709\u6CA1\u6709\u5F02\u5E38\u90FD\u5E94\u8BE5\u88AB\u6267\u884C\u7684\u4EE3\u7801. \u8FD9\u5BF9\u4E8E\u6E05\u7406\u8D44\u6E90\u5E38\u5E38\u5F88\u6709\u7528, \u4F8B\u5982\u5173\u95ED\u6587\u4EF6.</li></ul><hr><h2 id="python\u7F16\u7801" tabindex="-1"><a class="header-anchor" href="#python\u7F16\u7801" aria-hidden="true">#</a> Python\u7F16\u7801</h2><h3 id="\u6BD4\u8F83" tabindex="-1"><a class="header-anchor" href="#\u6BD4\u8F83" aria-hidden="true">#</a> \u6BD4\u8F83</h3><ul><li>\u7A7A\u7684 <code>list</code>, <code>str</code>, <code>tuple</code>, <code>set</code>, <code>dict</code> \u548C <code>0</code>, <code>0.0</code>, <code>None</code> \u90FD\u662F <code>False</code></li><li>\u4F7F\u7528 <code>if some_list</code> \u800C\u4E0D\u662F <code>if len(some_list)</code> \u5224\u65AD\u67D0\u4E2A <code>list</code> \u662F\u5426\u4E3A\u7A7A\uFF0C\u5176\u4ED6\u7C7B\u578B\u540C\u7406</li><li>\u4F7F\u7528 <code>is</code> \u548C <code>is not</code> \u4E0E\u5355\u4F8B\uFF08\u5982 <code>None</code>\uFF09\u8FDB\u884C\u6BD4\u8F83\uFF0C\u800C\u4E0D\u662F\u7528 <code>==</code> \u548C <code>!=</code> \u4F7F\u7528 <code>if a is not None</code> \u800C\u4E0D\u662F <code>if not a is None</code></li><li>\u7528 <code>isinstance</code> \u800C\u4E0D\u662F <code>type</code> \u5224\u65AD\u7C7B\u578B \u4E0D\u8981\u7528 <code>==</code> \u548C <code>!=</code> \u4E0E <code>True</code> \u548C <code>False</code> \u6BD4\u8F83\uFF08\u9664\u975E\u6709\u7279\u6B8A\u60C5\u51B5\uFF0C\u5982\u5728 <code>sqlalchemy</code> \u4E2D\u53EF\u80FD\u7528\u5230)</li></ul><h3 id="\u6027\u80FD" tabindex="-1"><a class="header-anchor" href="#\u6027\u80FD" aria-hidden="true">#</a> \u6027\u80FD</h3><ul><li>\u9700\u8981\u67E5\u8BE2\u64CD\u4F5C\u65F6\u7528<code>dict</code></li><li>\u4F7F\u7528<code>in</code>\u64CD\u4F5C\u65F6\u7528 <code>set</code> \u52A0\u901F \u201C\u5B58\u5728\u6027\u201D \u68C0\u67E5\uFF0C<code>list</code> \u7684\u67E5\u627E\u662F\u7EBF\u6027\u7684\uFF0C\u590D\u6742\u5EA6 <code>O(n)</code>\uFF0C<code>set</code> \u5E95\u5C42\u662F <code>hash table</code>, \u590D\u6742\u5EA6 <code>O(1)</code>\uFF0C\u4F46\u7528 <code>set</code> \u9700\u8981\u6BD4 <code>list</code> \u66F4\u591A\u5185\u5B58\u7A7A\u95F4</li><li><code>set</code> \u7684 <code>union</code>\uFF0C <code>intersection</code>\uFF0C<code>difference</code> \u64CD\u4F5C\u8981\u6BD4 <code>list</code> \u7684\u8FED\u4EE3\u8981\u5FEB\u3002\u56E0\u6B64\u5982\u679C\u6D89\u53CA\u5230\u6C42 <code>list</code> \u4EA4\u96C6\uFF0C\u5E76\u96C6\u6216\u8005\u5DEE\u7684\u95EE\u9898\u53EF\u4EE5\u8F6C\u6362\u4E3A <code>set</code> \u6765\u64CD\u4F5C\u3002</li><li>python \u4E2D\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\u662F\u4E0D\u53EF\u6539\u53D8\u7684\uFF0C\u56E0\u6B64\u5BF9\u4EFB\u4F55\u5B57\u7B26\u4E32\u7684\u64CD\u4F5C\u5982\u62FC\u63A5\uFF0C\u4FEE\u6539\u7B49\u90FD\u5C06\u4EA7\u751F\u4E00\u4E2A\u65B0\u7684\u5B57\u7B26\u4E32\u5BF9\u8C61\uFF0C\u800C\u4E0D\u662F\u57FA\u4E8E\u539F\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5\u5728\u5B57\u7B26\u4E32\u8FDE\u63A5\u7684\u4F7F\u7528\u5C3D\u91CF\u4F7F\u7528 <code>join()</code> \u800C\u4E0D\u662F <code>+</code></li><li>\u5F53\u5BF9\u5B57\u7B26\u4E32\u53EF\u4EE5\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u6216\u8005\u5185\u7F6E\u51FD\u6570\u6765\u5904\u7406\u7684\u65F6\u5019\uFF0C\u9009\u62E9\u5185\u7F6E\u51FD\u6570\u3002\u5982 <code>str.isalpha()</code>\uFF0C<code>str.isdigit()</code>\uFF0C<code>str.startswith((&#39;x&#39;, &#39;yz&#39;))</code>\uFF0C<code>str.endswith((&#39;x&#39;, &#39;yz&#39;))</code></li><li>\u5BF9\u5B57\u7B26\u8FDB\u884C\u683C\u5F0F\u5316\u6BD4\u76F4\u63A5\u4E32\u8054\u8BFB\u53D6\u8981\u5FEB\uFF0C\u56E0\u6B64\u8981\u4F7F\u7528</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>out_put = &quot;she&#39;s name is {},and she is a {}&quot;.format(lili,girl)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u800C\u4E0D\u662F</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>out_put = &quot;she&#39;s name is&quot; + lili + &quot;,and she is a &quot; + girl
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\u4F7F\u7528\u5217\u8868\u89E3\u6790\uFF08<code>list comprehension</code>\uFF09\u548C\u751F\u6210\u5668\u8868\u8FBE\u5F0F\uFF08<code>generator expression</code>\uFF09</li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u5217\u8868\u89E3\u6790\u8981\u6BD4\u5728\u5FAA\u73AF\u4E2D\u91CD\u65B0\u6784\u5EFA\u4E00\u4E2A\u65B0\u7684 list \u66F4\u4E3A\u9AD8\u6548\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u8FD9\u4E00\u7279\u6027\u6765\u63D0\u9AD8\u8FD0\u884C\u7684\u6548\u7387\u3002
for i in range (1000000): 
     for w in list: 
         total.append(w) 
# \u4F7F\u7528\u5217\u8868\u89E3\u6790
for i in range (1000000): 
    a = [w for w in list]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u8868\u8FBE\u5F0F\u5219\u662F\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A\u751F\u6210\u5668\uFF0C\u5728\u8FED\u4EE3\u7684\u65F6\u5019\u8C03\u7528\uFF0C\u6548\u7387\u5F88\u9AD8</p><ul><li>\u4EA4\u6362\u53D8\u91CF\u503C\u65F6\u4F7F\u7528<code>a,b = b,a</code>\u800C\u4E0D\u662F\u501F\u52A9\u4E2D\u95F4\u53D8\u91CF <code>t=a</code>;<code>a=b</code>;<code>b=t</code>;</li><li>python \u5B9A\u4F4D\u7A0B\u5E8F\u6027\u80FD\u74F6\u9888<br><strong>python \u5185\u7F6E\u4E86\u4E30\u5BCC\u7684\u6027\u80FD\u5206\u6790\u5DE5\u5177\uFF0C\u5982 <code>profile</code>,<code>cProfile</code> \u4E0E <code>hotshot</code> \u7B49\u3002\u5176\u4E2D <code>Profiler</code> \u662F <code>python</code> \u81EA\u5E26\u7684\u4E00\u7EC4\u7A0B\u5E8F\uFF0C\u80FD\u591F\u63CF\u8FF0\u7A0B\u5E8F\u8FD0\u884C\u65F6\u5019\u7684\u6027\u80FD\uFF0C\u5E76\u63D0\u4F9B\u5404\u79CD\u7EDF\u8BA1\u5E2E\u52A9\u7528\u6237\u5B9A\u4F4D\u7A0B\u5E8F\u7684\u6027\u80FD\u74F6\u9888\u3002Python \u6807\u51C6\u6A21\u5757\u63D0\u4F9B\u4E09\u79CD <code>profilers</code>:<code>cProfile</code>,<code>profile</code> \u4EE5\u53CA <code>hotshot</code>\u3002</strong></li></ul><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># \u4F7F\u7528 profile \u8FDB\u884C\u6027\u80FD\u5206\u6790
import profile 
def profileTest(): 
   Total =1; 
   for i in range(10): 
       Total=Total*(i+1) 
       print Total 
   return Total 
if __name__ == &quot;__main__&quot;: 
   profile.run(&quot;profileTest()&quot;)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u9700\u8981\u5C06\u8F93\u51FA\u4EE5\u65E5\u5FD7\u7684\u5F62\u5F0F\u4FDD\u5B58\uFF0C\u53EA\u9700\u8981\u5728\u8C03\u7528\u7684\u65F6\u5019\u52A0\u5165\u53E6\u5916\u4E00\u4E2A\u53C2\u6570\u3002\u5982 <code>profile.run(&quot;profileTest()&quot;,&quot;testprof&quot;)</code>\u3002</p><h3 id="\u5176\u4ED6" tabindex="-1"><a class="header-anchor" href="#\u5176\u4ED6" aria-hidden="true">#</a> \u5176\u4ED6</h3><ul><li>\u4F7F\u7528 <code>for item in list</code> \u8FED\u4EE3 <code>list</code>, <code>for index, item in enumerate(list)</code> \u8FED\u4EE3 <code>list</code> \u5E76\u83B7\u53D6\u4E0B\u6807</li><li>\u4F7F\u7528\u5185\u5EFA\u51FD\u6570 <code>sorted</code> \u548C <code>list.sort</code> \u8FDB\u884C\u6392\u5E8F</li><li>\u4F7F\u7528\u88C5\u9970\u5668(<code>decorator</code>)</li><li>\u4F7F\u7528 <code>with</code> \u8BED\u53E5\u5904\u7406\u4E0A\u4E0B\u6587</li><li>\u4F7F\u7528 <code>logging</code> \u8BB0\u5F55\u65E5\u5FD7\uFF0C\u914D\u7F6E\u597D\u683C\u5F0F\u548C\u7EA7\u522B</li><li>\u9002\u91CF\u4F7F\u7528 <code>map</code>, <code>reduce</code>, <code>filter</code> \u548C <code>lambda</code>\uFF0C\u4F7F\u7528\u5185\u5EFA\u7684 <code>all</code>, <code>any</code> \u5904\u7406\u591A\u4E2A\u6761\u4EF6\u7684\u5224\u65AD</li></ul>`,41)]))}const n=d(t,[["render",l],["__file","python_checklist.html.vue"]]);export{n as default};
